{"version":3,"sources":["webpack:///webpack/bootstrap 9265eba6e5ac8f30d507","webpack:///./src/index.js","webpack:///./src/RenderWebGL.js","webpack:///external \"events\"","webpack:///./~/hull.js/src/hull.js","webpack:///./~/hull.js/src/intersect.js","webpack:///./~/hull.js/src/grid.js","webpack:///./~/hull.js/src/format.js","webpack:///./~/hull.js/src/convex.js","webpack:///./~/twgl.js/dist/twgl-full.js","webpack:///./~/xhr/index.js","webpack:///./~/xhr/~/global/window.js","webpack:///./~/xhr/~/once/once.js","webpack:///./~/xhr/~/is-function/index.js","webpack:///./~/xhr/~/parse-headers/parse-headers.js","webpack:///./~/xhr/~/parse-headers/~/trim/index.js","webpack:///./~/xhr/~/parse-headers/~/for-each/index.js","webpack:///./~/xhr/~/xtend/immutable.js","webpack:///./src/BitmapSkin.js","webpack:///./src/Skin.js","webpack:///./src/RenderConstants.js","webpack:///./src/Drawable.js","webpack:///./src/Rectangle.js","webpack:///./src/ShaderManager.js","webpack:///./src/shaders/sprite.vert","webpack:///./src/shaders/sprite.frag","webpack:///./src/PenSkin.js","webpack:///./src/SVGSkin.js","webpack:///./src/svg-quirks-mode/svg-renderer.js","webpack:///./~/scratch-render-fonts/DonegalOne-Regular.ttf","webpack:///./~/scratch-render-fonts/GloriaHallelujah.ttf","webpack:///./~/scratch-render-fonts/MysteryQuest-Regular.ttf","webpack:///./~/scratch-render-fonts/PermanentMarker.ttf","webpack:///./~/scratch-render-fonts/Scratch.ttf"],"names":["RenderWebGL","require","module","exports","EventEmitter","hull","twgl","xhr","BitmapSkin","Drawable","PenSkin","RenderConstants","ShaderManager","SVGSkin","MAX_TOUCH_SIZE","TOLERANCE_TOUCHING_COLOR","canvas","xLeft","xRight","yBottom","yTop","_allDrawables","_allSkins","_drawList","gl","_gl","getWebGLContext","alpha","stencil","_nextDrawableId","ID_NONE","_nextSkinId","_projection","m4","identity","_skinUrlMap","_shaderManager","_tempCanvas","document","createElement","_createGeometry","on","Events","NativeSizeChanged","onNativeSizeChanged","setBackgroundColor","setStageSize","resize","_nativeSize","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","ZERO","pixelsWide","pixelsTall","pixelRatio","window","devicePixelRatio","width","height","red","green","blue","_backgroundColor","_debugCanvas","_xLeft","_xRight","_yBottom","_yTop","ortho","_setNativeSize","Math","abs","emit","newSize","skinUrl","costumeResolution","rotationCenter","hasOwnProperty","existingId","skinId","newSkin","isVector","ext","substring","lastIndexOf","get","useXDR","url","err","response","body","setSVG","img","Image","crossOrigin","onload","setBitmap","src","bitmapData","svgData","oldSkin","dispose","drawableID","drawable","push","defaultSkinId","createSkinFromURL","DEFAULT_SKIN","skin","index","indexOf","splice","order","optIsRelative","optMin","oldIndex","newIndex","max","bindFramebufferInfo","viewport","clearColor","apply","clear","COLOR_BUFFER_BIT","_drawThese","DRAW_MODE","default","needsConvexHullPoints","points","_getConvexHullPointsForDrawable","setConvexHullPoints","bounds","getBounds","context","getContext","drawImage","strokeStyle","pr","strokeRect","left","top","right","bottom","size","color3b","mask3b","_queryBufferInfo","_touchingBounds","candidateIDs","_filterCandidatesTouching","projection","STENCIL_BUFFER_BIT","extraUniforms","u_colorMask","u_colorMaskTolerance","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","colorMask","silhouette","EQUAL","testID","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","imageData","getImageData","data","set","putImageData","pixelBase","length","pixelDistanceR","pixelDistanceG","pixelDistanceB","noneColor","color4fFromID","pixelID","color3bToID","centerX","centerY","touchWidth","touchHeight","clientToGLX","clientWidth","clientToGLY","clientHeight","min","pixelLeft","floor","pixelRight","ceil","pixelTop","pixelBottom","_pickBufferInfo","widthPerPixel","heightPerPixel","pickLeft","pickRight","pickTop","pickBottom","hits","hit","hitID","getTexture","getFastBounds","clamp","snapToInt","filter","candidate","candidateBounds","intersects","properties","newRotationCenter","setRotationCenter","updateProperties","penSkinID","penAttributes","x","y","drawPoint","x0","y0","x1","y1","drawLine","stampID","stampDrawable","stampPixels","stampCanvas","stampContext","stampImageData","createImageData","drawStamp","quad","a_position","numComponents","a_texCoord","_bufferInfo","createBufferInfoFromArrays","event","attachments","format","DEPTH_STENCIL","createFramebufferInfo","resizeFramebufferInfo","drawables","drawMode","currentShader","numDrawables","drawableIndex","getVisible","drawableScale","scale","effectBits","getEnabledEffects","newShader","getShader","useProgram","program","setBuffersAndAttributes","setUniforms","u_projectionMatrix","u_fudge","fudge","getUniforms","drawBufferInfo","TRIANGLES","modelMatrix","rotateZ","PI","u_modelMatrix","boundaryPoints","_getPixel","Infinity","Skin","id","renderer","_costumeResolution","_renderer","_texture","_textureSize","deleteTexture","bindTexture","TEXTURE_2D","texImage2D","textureOptions","auto","mag","NEAREST","wrap","CLAMP_TO_EDGE","createTexture","_getBitmapSize","calculateRotationCenter","WasAltered","HTMLImageElement","naturalWidth","naturalHeight","HTMLVideoElement","videoWidth","videoHeight","_id","_rotationCenter","v3","create","_uniforms","u_skinSize","u_skin","setMaxListeners","SKIN_SHARE_SOFT_LIMIT","squirrel","bus","scratch_cat","gradient","Rectangle","u_silhouetteColor","numEffects","EFFECTS","effectName","converter","EFFECT_INFO","_position","_scale","_direction","_transformDirty","_visible","_effectBits","_convexHullPoints","_convexHullDirty","_skinWasAltered","bind","_calculateTransform","dirty","position","direction","visible","setConvexHullDirty","setTransformDirty","rawValue","effectInfo","mask","shapeChanges","translate","rotation","rotationAdjusted","subtract","divScalar","scaledSize","multiply","Error","skinSize","tm","transformedHullPoints","i","point","glPoint","transformPoint","initFromPointsAABB","getAABB","_skin","removeListener","addListener","r","g","b","other","vertexShaderText","fragmentShaderText","_shaderCache","modeName","cache","color","brightness","shader","_buildShader","defines","definesText","join","vsFullText","fsFullText","createProgramInfo","fisheye","whirl","pixelate","mosaic","round","ghost","Object","keys","DefaultPenAttributes","color4f","diameter","_canvas","_canvasDirty","_setCanvasSize","getNativeSize","ctx","clearRect","_setAttributes","beginPath","moveTo","lineTo","stroke","stampElement","canvasSize","a","lineCap","lineWidth","SvgRenderer","_svgRenderer","fromString","FONTS","Donegal","Gloria","Mystery","Marker","Scratch","documentStyleTag","fontName","fontData","textContent","insertBefore","firstChild","_context","svgString","onFinish","_onFinish","parser","DOMParser","_svgDom","parseFromString","children","localName","_svgTag","_transformText","_transformMeasurements","_draw","textElements","collectText","domElement","fontsNeeded","textElement","removeAttribute","setAttribute","getAttribute","font","text","lines","split","line","tspanNode","_createSVGElement","appendChild","newDefs","newStyle","allFonts","svgText","_toString","svgSpot","bbox","getBBox","removeChild","_measurements","serializer","XMLSerializer","serializeToString","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","getDrawRatio","setTransform","style","encodeURIComponent","tagName","createElementNS"],"mappings":"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ACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,uDAAsD;;AAEtD;AACA;;AAEA,4DAA2D;AAC3D;;AAEA,uB;;;;;;AC1MA,uC;AACA;AACA,kDAAiD;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4B;;;;;;ACdA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,iCAAgC;AAChC;AACA,MAAK;;AAEL,kCAAiC;AACjC;AACA;AACA;;AAEA,kCAAiC,kBAAkB;AACnD,sCAAqC,kBAAkB;AACvD;AACA;AACA;;AAEA;AACA,MAAK;;AAEL,mCAAkC;AAClC;AACA;AACA;;AAEA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL,oCAAmC;AACnC;AACA;AACA;AACA,MAAK;;AAEL,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;AC1EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAmG;AACnG;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,2BAA2B,2BAA2B,UAAU;AACzH;AACA,UAAS;AACT;;AAEA,E;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8B;AACA,mB;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB,qBAAoB;AACpB,oBAAmB;AACnB,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAsC,OAAO;AAC7C;;AAEA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb,2CAA0C;AAC1C;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB,wFAAuF;AACvF;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED,qDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,kBAAkB;AAC5B;AACA;AACA;;;AAGA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,4BAA4B;AACzC,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,mDAAkD,aAAa,EAAE;AACjE,mDAAkD,sBAAsB,EAAE;AAC1E,mDAAkD,sBAAsB,EAAE;AAC1E,mDAAkD,cAAc,EAAE;AAClE,mDAAkD,uBAAuB,EAAE;AAC3E,mDAAkD,YAAY,EAAE;AAChE,mDAAkD,qBAAqB,EAAE;AACzE,mDAAkD,cAAc,EAAE;AAClE;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,8CAA6C;AAC7C,8CAA6C;AAC7C,+CAA8C;AAC9C,8CAA6C;AAC7C,+CAA8C;AAC9C,gDAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,cAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,wCAAwC;AACrD,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C,aAAa,EAAE;AAC5D,8CAA6C,aAAa,EAAE;AAC5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL,yBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,YAAY;AAC5B,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,uBAAuB;AACvC,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iBAAgB,YAAY;AAC5B,+FAA8F,gDAAgD;AAC9I,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA,8BAA6B;AAC7B;AACA,sBAAqB,6CAA6C;AAClE;AACA;AACA;AACA,gBAAe,iDAAiD;AAChE;AACA;;AAEA;AACA;AACA,qEAAoE,qCAAqC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,gCAAgC;AACvE;AACA;AACA,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F;AACA;AACA,gBAAe,uCAAuC;AACtD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,oEAAoE;AAC3F,wBAAuB,oEAAoE;AAC3F,wBAAuB,oEAAoE;AAC3F,wBAAuB,kGAAkG;AACzH,wBAAuB,oEAAoE;AAC3F;AACA;AACA;AACA;AACA;AACA,wBAAuB,mFAAmF;AAC1G,wBAAuB,mFAAmF;AAC1G,wBAAuB,mFAAmF;AAC1G,wBAAuB,mFAAmF;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,mBAAmB;AAChC,eAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,WAAW;AACxB;AACA,cAAa,UAAU;AACvB;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA,oDAAmD;AACnD,+FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,YAAY;AAC5B,iBAAgB,wCAAwC;AACxD;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,6BAA4B,0CAA0C;AACtE,OAAM,iCAAiC;AACvC;AACA;AACA;AACA;AACA,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,yCAAyC;AACnE,2BAA0B,yCAAyC;AACnE,2BAA0B,yCAAyC;AACnE,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,+CAA+C;AACzE,2BAA0B,+CAA+C;AACzE,0BAAyB,+CAA+C;AACxE,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,mBAAmB;AAChC,eAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,mBAAmB;AAChC,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,6BAA4B,0CAA0C;AACtE,OAAM,iCAAiC;AACvC;AACA;AACA;AACA;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,kDAAkD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kFAAiF;AACjqBAAoB,WAAW;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;AAC5C,6CAA4C;;AAE5C;AACA,sBAAqB;;AAErB;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,0BAA0B;AACvC,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,cAAc;AAC3B,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,0BAA0B;AACvC;AACA,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,0BAA0B;AACvC,eAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,0BAA0B;AACvC;AACA,eAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,0BAA0B;AACvC;AACA,eAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,cAAa,aAAa;AAC1B,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,iBAAiB;AAChC,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,2BAA0B;AAC1B;;AAEA,qBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,SAAS;AACzB,8DAA6D,mCAAmC;AAChG,iBAAgB,KAAK;AACrB,iBAAgB,KAAK;AACrB,iBAAgB,KAAK;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB,iBAAgB,cAAc;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,uBAAuB;AACpC,cAAa,aAAa;AAC1B,eAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,kBAAkB;AACtC;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;;AAEA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC;;AAEnC;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,YAAY;AAC5B,iBAAgB,aAAa;AAC7B;AACA,iBAAgB,YAAY;AAC5B,iBAAgB,iCAAiC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,uBAAuB;AACpC,cAAa,aAAa;AAC1B,cAAa,6BAA6B;AAC1C,gBAAe,oDAAoD;AACnE,cAAa,OAAO;AACpB,eAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,uBAAuB;AACpC,cAAa,wBAAwB;AACrC,4BAA2B;AAC3B,cAAa,OAAO;AACpB,eAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA,cAAa,uBAAuB;AACpC,eAAc,qDAAqD;AACnE,4BAA2B,oCAAoC;AAC/D,yBAAwB,oDAAoD;AAC5E,cAAa,6BAA6B;AAC1C,WAAU,yCAAyC;AACnD,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,mCAAmC;AAC9C;AACA,cAAa,uBAAuB;AACpC,eAAc,qDAAqD;AACnE,4BAA2B,oCAAoC;AAC/D,yBAAwB,oDAAoD;AAC5E,cAAa,6BAA6B;AAC1C,WAAU,yCAAyC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,6BAA6B,qDAAqD,yCAAyC;AACxI,cAAa;AACbcAAa,oDAAoD;AACjE;AACA,cAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA,uBAAsB,gBAAgB;AACtC;AACA;AACA;AACA,yBAAwB,gBAAgB;AACxC;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAoC,0CAA0C;AAC9E;AACA,YAAW,gCAAgC;AAC3C,cAAa,aAAa;AAC1B,eAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4DAA2D,0CAA0C;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,yCAAyC;AACjE,yBAAwB,yCAAyC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,yCAAyC;AACjE,yBAAwB,yCAAyC;AACjE;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,cAAa,0BAA0B;AACvC,cAAa,wCAAwC;AACrD;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,oEAAoE;AAC1F,uBAAsB,oEAAoE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,oDAAoD,2CAA2C,oCAAoC,wCAAwC;AACxL,cAAa,qDAAqD,0CAA0C,6CAA6C;AACzJ,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,aAAa;AAC7B,iBAAgB,yBAAyB;AACzC,iBAAgB,yBAAyB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC;AACA,cAAa,aAAa;AAC1B,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,0BAA0B;AACvC;AACA,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,KAAK;AAClB,cAAa,qDAAqD,2CAA2C,6CAA6C;AAC1J,4CAA2C;AAC3C,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,qFAAoF,iCAAiC;AACrH;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB,iBAAgB,OAAO;AACvB,iBAAgB,wBAAwB,6CAA6C;AACrF,iBAAgB,uBAAuB,6CAA6C;AACpF,iBAAgB,4BAA4B,uDAAuD;AACnG,iBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C;AAC9C,+CAA8C;;AAE9C;AACA,+CAA8C;;AAE9C;AACA,+CAA8C;AAC9C,+CAA8C;AAC9C,+CAA8C;AAC9C,+CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,uBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,2BAA2B;AACxC,eAAc,EAAE,wDAAwD,iCAAiC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB,uBAAuB;AACvC;AACA,+CAA8C,yCAAyC;AACvF,iBAAgB,QAAQ;AACxB;AACA,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,mHAAmH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,uCAAsC,8BAA8B;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,2BAA2B;AACxC,cAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,2BAA2B;AACxC,cAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,uBAAuB;AACpC,eAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,2BAA2B;AACxC;AACA,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,2BAA2B;AACxC,eAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,YAAY;AACzB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,mBAAmB;AAChC;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD;AAChD,+CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,gCAAgC,KAAK;AACzD;AACA;AACA;AACA;AACA,gBAAe,oCAAoC;AACnD;AACA;;AAEA;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,aAAa;AAC1B,cAAa,uBAAuB;AACpC;AACA;;AAEA;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,8BAA8B,6DAA6D,iCAAiC;AACzI,cAAa,wCAAwC;AACrD;AACA;;AAEA;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,aAAa;AAC1B,cAAa,mBAAmB;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC,cAAa,iCAAiC;AAC9C;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC,cAAa,iCAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,iCAAiC;AAC3D,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,uBAAuB;AACpC,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,2BAA2B;AACxC,cAAa,iCAAiC;AAC9C,eAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,aAAa;AAC1B,cAAa,2BAA2B;AACxC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,iDAAiD;AACtE;AACA,qBAAoB,2BAA2B;AAC/C;AACA,yBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,2CAA2C;AACxD,cAAa,kCAAkC;AAC/C,eAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA,sBAAqB;;AAErB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C;AAC9C;AACA,+CAA8C;;AAE9C;AACA,+CAA8C;AAC9C;;AAEA;AACA,+CAA8C;AAC9C,+CAA8C;AAC9C,+CAA8C;AAC9C,+CAA8C;;AAE9C;AACA;AACA;AACA;AACA,oBAAmB,iCAAiC;AACpD,sDAAqD;AACrD;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA,iBAAgB,OAAO;AACvB,iBAAgB,YAAY;AAC5B;AACA;AACA;AACA;;AAEA;AACA,MAAK,uEAAuE;AAC5E,MAAK,yBAAyB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,iBAAiB;AACjC,iBAAgB,cAAc,wEAAwE,wCAAwC;AAC9I;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,+BAA+B;AAC3C,aAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,gCAAgC;AAC7C;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,+BAA+B;AAC3C,aAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,4BAA4B,qDAAqD,oCAAoC;AAClI,cAAa,gCAAgC,0DAA0D,oCAAoC;AAC3I,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,4BAA4B,uDAAuD,oCAAoC;AACpI;AACA,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,6BAA6B;AACxD,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,kBAAiB,iCAAiC;AAClD;AACA,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA,0CAAyC;AACzC,wCAAuC;AACvC;;AAEA;AACA;AACA,cAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,kBAAkB;AAC/B;AACA;AACA,eAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA,qBAAoB,mBAAmB;AACvC;AACA;AACA,QAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,kBAAkB;AAC/B,cAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,kBAAkB;AAC/B;AACA;AACA,eAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA,qBAAoB,mBAAmB;AACvC;AACA;AACA,QAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,kBAAkB;AAC/B,cAAa,+BAA+B;AAC5C,eAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,kBAAkB;AAC/B,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C,IAAG;;AAEH;;AAEA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iCAAgC,oCAAoC;AACpE,gBAAe,wBAAwB;AACvC;AACA;;AAEA;AACA;AACA,cAAa,YAAY;AACzB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAA+C;AAC/C;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA6C;AAC7C;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6DAA4D;AAC5D;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0DAAyD;AACzD;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC,oCAAoC;AACpE,gBAAe,wBAAwB;AACvC;AACA;;AAEA;AACA;AACA,cAAa,YAAY;AACzB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,eAAc,KAAK;AACnB,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,KAAK;AAClB,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,cAAa,KAAK;AAClB,cAAa,KAAK;AAClB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,KAAK;AAClB;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB;AACA,cAAa,OAAO;AACpB,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kDAAiD;AACjD;AACA,cAAa,KAAK;AAClB;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2DAA0D;AAC1D;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB;AACA,cAAa,oBAAoB;AACjC,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB,cAAa,KAAK;AAClB,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB,cAAa,KAAK;AAClB,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,KAAK;AAClB,cAAa,KAAK;AAClB,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,6BAA6B;AACtF,mBAAkB,6BAA6B,kBAAkB;AACjE,YAAW,iCAAiC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,6BAA6B;AACzE,uCAAsC,6CAA6C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uCAAsC;AACtC,uDAAsD;;AAEtD;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,uBAAsB,uBAAuB;AAC7C;AACA;AACA,2BAA0B,mBAAmB;AAC7C;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,YAAY;AACzB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,4BAA4B;AACzC,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA,yBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,4BAA4B;AACzC,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,uCAAuC;AACpD,cAAa,OAAO;AACpB,eAAc,uCAAuC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,eAAc,wBAAwB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,wBAAwB;AAC3C,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,uBAAuB,OAAO;AACjD,sBAAqB,uBAAuB,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,yBAAyB;AAC5C,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,sBAAsB,OAAO;AAChD,sBAAqB,wBAAwB,OAAO;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,mCAAmC,QAAQ;AAC/D,uBAAsB,yBAAyB,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,qBAAoB,qBAAqB;AACzC;AACA;AACA;AACA,uBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,4BAA4B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAoB,eAAe;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc,sBAAsB;AACpC,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,QAAQ;AACtB,eAAc,QAAQ;AACtB,gBAAe,6BAA6B;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,QAAQ;AACtB,eAAc,QAAQ;AACtB,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,0BAA0B,WAAW;AAC5D,yBAAwB,2BAA2B,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,uBAAuB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,iBAAiB;AACxC;;AAEA,sBAAqB,gBAAgB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,uCAAuC;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,qCAAqC;AAClD,cAAa,6CAA6C;AAC1D,eAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,uBAAsB,cAAc,QAAQ;AAC5C;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,iBAAiB;AAC9B,cAAa,iBAAiB;AAC9B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,qBAAoB,aAAa;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,iDAAiD;AAC9D,cAAa,OAAO;AACpB,eAAc,iDAAiD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC,eAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,2BAA2B;AAC/C;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,eAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC,mBAAmB;;;AAGpB;AACA,mDAAkD;;AAElD;AACA,EAAC;;;;;;;ACznQD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,MAAK;AACL,kCAAiC,SAAS;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;;;;;;AC1NA;AACA;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;AC7BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACbA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,SAAS;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7CA;;AAEA;;AAEA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AClBA,KAAMM,OAAO,mBAAAL,CAAQ,CAAR,CAAb;;AAEA,KAAM4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","file":"scratch-render.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9265eba6e5ac8f30d507\n **/","const RenderWebGL = require('./RenderWebGL');\n\n/**\n * Export for NPM & Node.js\n * @type {RenderWebGL}\n */\nmodule.exports = RenderWebGL;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","const EventEmitter = require('events');\n\nconst hull = require('hull.js');\nconst twgl = require('twgl.js');\nconst xhr = require('xhr');\n\nconst BitmapSkin = require('./BitmapSkin');\nconst Drawable = require('./Drawable');\nconst PenSkin = require('./PenSkin');\nconst RenderConstants = require('./RenderConstants');\nconst ShaderManager = require('./ShaderManager');\nconst SVGSkin = require('./SVGSkin');\n\n/**\n * @callback idFilterFunc\n * @param {int} drawableID The ID to filter.\n * @return {bool} True if the ID passes the filter, otherwise false.\n */\n\n/**\n * Maximum touch size for a picking check.\n * TODO: Figure out a reasonable max size. Maybe this should be configurable?\n * @type {int[]}\n */\nconst MAX_TOUCH_SIZE = [3, 3];\n\n/**\n * \"touching {color}?\" or \"{color} touching {color}?\" tests will be true if the\n * target is touching a color whose components are each within this tolerance of\n * the corresponding component of the query color.\n * @type {int} between 0 (exact matches only) and 255 (match anything).\n */\nconst TOLERANCE_TOUCHING_COLOR = 2;\n\n\nclass RenderWebGL extends EventEmitter {\n    /**\n     * Create a renderer for drawing Scratch sprites to a canvas using WebGL.\n     * Coordinates will default to Scratch 2.0 values if unspecified.\n     * The stage's \"native\" size will be calculated from the these coordinates.\n     * For example, the defaults result in a native size of 480x360.\n     * Queries such as \"touching color?\" will always execute at the native size.\n     * @see setStageSize\n     * @see resize\n     * @param {canvas} canvas The canvas to draw onto.\n     * @param {int} [xLeft=-240] The x-coordinate of the left edge.\n     * @param {int} [xRight=240] The x-coordinate of the right edge.\n     * @param {int} [yBottom=-180] The y-coordinate of the bottom edge.\n     * @param {int} [yTop=180] The y-coordinate of the top edge.\n     * @constructor\n     */\n    constructor (canvas, xLeft, xRight, yBottom, yTop) {\n        super();\n\n        /** @type {Drawable[]} */\n        this._allDrawables = [];\n\n        /** @type {Skin[]} */\n        this._allSkins = [];\n\n        /** @type {int[]} */\n        this._drawList = [];\n\n        /** @type {WebGLRenderingContext} */\n        const gl = this._gl = twgl.getWebGLContext(canvas, {alpha: false, stencil: true});\n\n        /** @type {int} */\n        this._nextDrawableId = RenderConstants.ID_NONE + 1;\n\n        /** @type {int} */\n        this._nextSkinId = RenderConstants.ID_NONE + 1;\n\n        /** @type {module:twgl/m4.Mat4} */\n        this._projection = twgl.m4.identity();\n\n        /** @type {Object.<string,int>} */\n        this._skinUrlMap = {};\n\n        this._shaderManager = new ShaderManager(gl);\n\n        /** @type {HTMLCanvasElement} */\n        this._tempCanvas = document.createElement('canvas');\n\n        this._createGeometry();\n\n        this.on(RenderConstants.Events.NativeSizeChanged, this.onNativeSizeChanged);\n\n        this.setBackgroundColor(1, 1, 1);\n        this.setStageSize(xLeft || -240, xRight || 240, yBottom || -180, yTop || 180);\n        this.resize(this._nativeSize[0], this._nativeSize[1]);\n\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND); // TODO: disable when no partial transparency?\n        gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE);\n    }\n\n    /**\n     * @returns {WebGLRenderingContext} the WebGL rendering context associated with this renderer.\n     */\n    get gl () {\n        return this._gl;\n    }\n\n    /**\n     * Set the physical size of the stage in device-independent pixels.\n     * This will be multiplied by the device's pixel ratio on high-DPI displays.\n     * @param {int} pixelsWide The desired width in device-independent pixels.\n     * @param {int} pixelsTall The desired height in device-independent pixels.\n     */\n    resize (pixelsWide, pixelsTall) {\n        const pixelRatio = window.devicePixelRatio || 1;\n        this._gl.canvas.width = pixelsWide * pixelRatio;\n        this._gl.canvas.height = pixelsTall * pixelRatio;\n    }\n\n    /**\n     * Set the background color for the stage. The stage will be cleared with this\n     * color each frame.\n     * @param {number} red The red component for the background.\n     * @param {number} green The green component for the background.\n     * @param {number} blue The blue component for the background.\n     */\n    setBackgroundColor (red, green, blue) {\n        this._backgroundColor = [red, green, blue, 1];\n    }\n\n    /**\n     * Tell the renderer to draw various debug information to the provided canvas\n     * during certain operations.\n     * @param {canvas} canvas The canvas to use for debug output.\n     */\n    setDebugCanvas (canvas) {\n        this._debugCanvas = canvas;\n    }\n\n    /**\n     * Set logical size of the stage in Scratch units.\n     * @param {int} xLeft The left edge's x-coordinate. Scratch 2 uses -240.\n     * @param {int} xRight The right edge's x-coordinate. Scratch 2 uses 240.\n     * @param {int} yBottom The bottom edge's y-coordinate. Scratch 2 uses -180.\n     * @param {int} yTop The top edge's y-coordinate. Scratch 2 uses 180.\n     */\n    setStageSize (xLeft, xRight, yBottom, yTop) {\n        this._xLeft = xLeft;\n        this._xRight = xRight;\n        this._yBottom = yBottom;\n        this._yTop = yTop;\n\n        // swap yBottom & yTop to fit Scratch convention of +y=up\n        this._projection = twgl.m4.ortho(xLeft, xRight, yBottom, yTop, -1, 1);\n\n        this._setNativeSize(Math.abs(xRight - xLeft), Math.abs(yBottom - yTop));\n    }\n\n    /**\n     * @return {[int,int]} the \"native\" size of the stage, which is used for pen, query renders, etc.\n     */\n    getNativeSize () {\n        return [this._nativeSize[0], this._nativeSize[1]];\n    }\n\n    /**\n     * Set the \"native\" size of the stage, which is used for pen, query renders, etc.\n     * @param {int} width - the new width to set.\n     * @param {int} height - the new height to set.\n     * @private\n     */\n    _setNativeSize (width, height) {\n        this._nativeSize = [width, height];\n        this.emit(RenderConstants.Events.NativeSizeChanged, {newSize: this._nativeSize});\n    }\n\n    /**\n     * Create a skin by loading a bitmap or vector image from a URL, or reuse an existing skin created this way.\n     * WARNING: This method is deprecated and will be removed in the near future.\n     * Use `createBitmapSkin` or `createSVGSkin` instead.\n     * @param {!string} skinUrl The URL of the skin.\n     * @param {!int} [costumeResolution] Optional: resolution for the skin. Ignored unless creating a new Bitmap skin.\n     * @param {number[]=} rotationCenter Optional: rotation center of the skin. If not supplied, the center of the skin\n     * will be used.\n     * @returns {!int} The ID of the Skin.\n     * @deprecated\n     */\n    createSkinFromURL (skinUrl, costumeResolution, rotationCenter) {\n        if (this._skinUrlMap.hasOwnProperty(skinUrl)) {\n            const existingId = this._skinUrlMap[skinUrl];\n\n            // Make sure the \"existing\" skin hasn't been destroyed\n            if (this._allSkins[existingId]) {\n                return existingId;\n            }\n        }\n\n        const skinId = this._nextSkinId++;\n        this._skinUrlMap[skinUrl] = skinId;\n\n        let newSkin;\n        let isVector;\n\n        const ext = skinUrl.substring(skinUrl.lastIndexOf('.') + 1);\n        switch (ext) {\n        case 'svg':\n        case 'svg/get/':\n        case 'svgz':\n        case 'svgz/get/':\n            isVector = true;\n            break;\n        default:\n            isVector = false;\n            break;\n        }\n\n        if (isVector) {\n            newSkin = new SVGSkin(skinId, this);\n            xhr.get({\n                useXDR: true,\n                url: skinUrl\n            }, (err, response, body) => {\n                if (!err) {\n                    newSkin.setSVG(body, rotationCenter);\n                }\n            });\n        } else {\n            newSkin = new BitmapSkin(skinId, this);\n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = () => {\n                newSkin.setBitmap(img, costumeResolution, rotationCenter);\n            };\n            img.src = skinUrl;\n        }\n\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Create a new bitmap skin from a snapshot of the provided bitmap data.\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} bitmapData - new contents for this skin.\n     * @param {!int} [costumeResolution=1] - The resolution to use for this bitmap.\n     * @param {number[]=} rotationCenter Optional: rotation center of the skin. If not supplied, the center of the skin\n     * @returns {!int} the ID for the new skin.\n     */\n    createBitmapSkin (bitmapData, costumeResolution, rotationCenter) {\n        const skinId = this._nextSkinId++;\n        const newSkin = new BitmapSkin(skinId, this);\n        newSkin.setBitmap(bitmapData, costumeResolution, rotationCenter);\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Create a new SVG skin.\n     * @param {!string} svgData - new SVG to use.\n     * @param {number[]=} rotationCenter Optional: rotation center of the skin. If not supplied, the center of the skin\n     * @returns {!int} the ID for the new skin.\n     */\n    createSVGSkin (svgData, rotationCenter) {\n        const skinId = this._nextSkinId++;\n        const newSkin = new SVGSkin(skinId, this);\n        newSkin.setSVG(svgData, rotationCenter);\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Create a new PenSkin - a skin which implements a Scratch pen layer.\n     * @returns {!int} the ID for the new skin.\n     */\n    createPenSkin () {\n        const skinId = this._nextSkinId++;\n        const newSkin = new PenSkin(skinId, this);\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Destroy an existing skin. Do not use the skin or its ID after calling this.\n     * @param {!int} skinId - The ID of the skin to destroy.\n     */\n    destroySkin (skinId) {\n        const oldSkin = this._allSkins[skinId];\n        oldSkin.dispose();\n        delete this._allSkins[skinId];\n    }\n\n    /**\n     * Create a new Drawable and add it to the scene.\n     * @returns {int} The ID of the new Drawable.\n     */\n    createDrawable () {\n        const drawableID = this._nextDrawableId++;\n        const drawable = new Drawable(drawableID, this);\n        this._allDrawables[drawableID] = drawable;\n        this._drawList.push(drawableID);\n\n        const defaultSkinId = this.createSkinFromURL(RenderConstants.DEFAULT_SKIN);\n        drawable.skin = this._allSkins[defaultSkinId];\n\n        return drawableID;\n    }\n\n    /**\n     * Destroy a Drawable, removing it from the scene.\n     * @param {int} drawableID The ID of the Drawable to remove.\n     */\n    destroyDrawable (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        drawable.dispose();\n        delete this._allDrawables[drawableID];\n\n        let index;\n        while ((index = this._drawList.indexOf(drawableID)) >= 0) {\n            this._drawList.splice(index, 1);\n        }\n    }\n\n    /**\n     * Set a drawable's order in the drawable list (effectively, z/layer).\n     * Can be used to move drawables to absolute positions in the list,\n     * or relative to their current positions.\n     * \"go back N layers\": setDrawableOrder(id, -N, true, 1); (assuming stage at 0).\n     * \"go to back\": setDrawableOrder(id, 1); (assuming stage at 0).\n     * \"go to front\": setDrawableOrder(id, Infinity);\n     * @param {int} drawableID ID of Drawable to reorder.\n     * @param {number} order New absolute order or relative order adjusment.\n     * @param {boolean=} optIsRelative If set, `order` refers to a relative change.\n     * @param {number=} optMin If set, order constrained to be at least `optMin`.\n     * @return {?number} New order if changed, or null.\n     */\n    setDrawableOrder (drawableID, order, optIsRelative, optMin) {\n        const oldIndex = this._drawList.indexOf(drawableID);\n        if (oldIndex >= 0) {\n            // Remove drawable from the list.\n            const drawable = this._drawList.splice(oldIndex, 1)[0];\n            // Determine new index.\n            let newIndex = order;\n            if (optIsRelative) {\n                newIndex += oldIndex;\n            }\n            if (optMin) {\n                newIndex = Math.max(newIndex, optMin);\n            }\n            newIndex = Math.max(newIndex, 0);\n            // Insert at new index.\n            this._drawList.splice(newIndex, 0, drawable);\n            return this._drawList.indexOf(drawable);\n        }\n        return null;\n    }\n\n    /**\n     * Draw all current drawables and present the frame on the canvas.\n     */\n    draw () {\n        const gl = this._gl;\n\n        twgl.bindFramebufferInfo(gl, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clearColor.apply(gl, this._backgroundColor);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this._drawThese(this._drawList, ShaderManager.DRAW_MODE.default, this._projection);\n    }\n\n    /**\n     * Get the precise bounds for a Drawable.\n     * @param {int} drawableID ID of Drawable to get bounds for.\n     * @return {object} Bounds for a tight box around the Drawable.\n     */\n    getBounds (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        // Tell the Drawable about its updated convex hull, if necessary.\n        if (drawable.needsConvexHullPoints()) {\n            const points = this._getConvexHullPointsForDrawable(drawableID);\n            drawable.setConvexHullPoints(points);\n        }\n        const bounds = drawable.getBounds();\n        // In debug mode, draw the bounds.\n        if (this._debugCanvas) {\n            const gl = this._gl;\n            this._debugCanvas.width = gl.canvas.width;\n            this._debugCanvas.height = gl.canvas.height;\n            const context = this._debugCanvas.getContext('2d');\n            context.drawImage(gl.canvas, 0, 0);\n            context.strokeStyle = '#FF0000';\n            const pr = window.devicePixelRatio;\n            context.strokeRect(\n                pr * (bounds.left + (this._nativeSize[0] / 2)),\n                pr * (-bounds.top + (this._nativeSize[1] / 2)),\n                pr * (bounds.right - bounds.left),\n                pr * (-bounds.bottom + bounds.top)\n            );\n        }\n        return bounds;\n    }\n\n    /**\n     * Get the current skin (costume) size of a Drawable.\n     * @param {int} drawableID The ID of the Drawable to measure.\n     * @return {Array.<number>} Skin size, width and height.\n     */\n    getSkinSize (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        return drawable.skin.size;\n    }\n\n    /**\n     * Check if a particular Drawable is touching a particular color.\n     * @param {int} drawableID The ID of the Drawable to check.\n     * @param {int[]} color3b Test if the Drawable is touching this color.\n     * @param {int[]} [mask3b] Optionally mask the check to this part of Drawable.\n     * @returns {boolean} True iff the Drawable is touching the color.\n     */\n    isTouchingColor (drawableID, color3b, mask3b) {\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        const bounds = this._touchingBounds(drawableID);\n        if (!bounds) {\n            return;\n        }\n        const candidateIDs = this._filterCandidatesTouching(drawableID, this._drawList, bounds);\n        if (!candidateIDs) {\n            return;\n        }\n\n        // Limit size of viewport to the bounds around the target Drawable,\n        // and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        gl.clearColor.apply(gl, this._backgroundColor);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\n        let extraUniforms;\n        if (mask3b) {\n            extraUniforms = {\n                u_colorMask: [mask3b[0] / 255, mask3b[1] / 255, mask3b[2] / 255],\n                u_colorMaskTolerance: TOLERANCE_TOUCHING_COLOR / 255\n            };\n        }\n\n        try {\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n            gl.colorMask(false, false, false, false);\n            this._drawThese(\n                [drawableID],\n                mask3b ?\n                    ShaderManager.DRAW_MODE.colorMask :\n                    ShaderManager.DRAW_MODE.silhouette,\n                projection,\n                null,\n                extraUniforms);\n\n            gl.stencilFunc(gl.EQUAL, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n            gl.colorMask(true, true, true, true);\n\n            this._drawThese(candidateIDs, ShaderManager.DRAW_MODE.default, projection,\n                testID => testID !== drawableID\n            );\n        } finally {\n            gl.colorMask(true, true, true, true);\n            gl.disable(gl.STENCIL_TEST);\n        }\n\n        const pixels = new Uint8Array(bounds.width * bounds.height * 4);\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = bounds.width;\n            this._debugCanvas.height = bounds.height;\n            const context = this._debugCanvas.getContext('2d');\n            const imageData = context.getImageData(0, 0, bounds.width, bounds.height);\n            imageData.data.set(pixels);\n            context.putImageData(imageData, 0, 0);\n        }\n\n        for (let pixelBase = 0; pixelBase < pixels.length; pixelBase += 4) {\n            const pixelDistanceR = Math.abs(pixels[pixelBase] - color3b[0]);\n            const pixelDistanceG = Math.abs(pixels[pixelBase + 1] - color3b[1]);\n            const pixelDistanceB = Math.abs(pixels[pixelBase + 2] - color3b[2]);\n\n            if (pixelDistanceR <= TOLERANCE_TOUCHING_COLOR &&\n                pixelDistanceG <= TOLERANCE_TOUCHING_COLOR &&\n                pixelDistanceB <= TOLERANCE_TOUCHING_COLOR) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a particular Drawable is touching any in a set of Drawables.\n     * @param {int} drawableID The ID of the Drawable to check.\n     * @param {int[]} candidateIDs The Drawable IDs to check, otherwise all.\n     * @returns {boolean} True iff the Drawable is touching one of candidateIDs.\n     */\n    isTouchingDrawables (drawableID, candidateIDs) {\n        candidateIDs = candidateIDs || this._drawList;\n\n        const gl = this._gl;\n\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        const bounds = this._touchingBounds(drawableID);\n        if (!bounds) {\n            return;\n        }\n        candidateIDs = this._filterCandidatesTouching(drawableID, candidateIDs, bounds);\n        if (!candidateIDs) {\n            return;\n        }\n\n        // Limit size of viewport to the bounds around the target Drawable,\n        // and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        const noneColor = Drawable.color4fFromID(RenderConstants.ID_NONE);\n        gl.clearColor.apply(gl, noneColor);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\n        try {\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n            gl.colorMask(false, false, false, false);\n            this._drawThese([drawableID], ShaderManager.DRAW_MODE.silhouette, projection);\n\n            gl.stencilFunc(gl.EQUAL, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n            gl.colorMask(true, true, true, true);\n\n            this._drawThese(candidateIDs, ShaderManager.DRAW_MODE.silhouette, projection,\n                testID => testID !== drawableID\n            );\n        } finally {\n            gl.colorMask(true, true, true, true);\n            gl.disable(gl.STENCIL_TEST);\n        }\n\n        const pixels = new Uint8Array(bounds.width * bounds.height * 4);\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = bounds.width;\n            this._debugCanvas.height = bounds.height;\n            const context = this._debugCanvas.getContext('2d');\n            const imageData = context.getImageData(0, 0, bounds.width, bounds.height);\n            imageData.data.set(pixels);\n            context.putImageData(imageData, 0, 0);\n        }\n\n        for (let pixelBase = 0; pixelBase < pixels.length; pixelBase += 4) {\n            const pixelID = Drawable.color3bToID(\n                pixels[pixelBase],\n                pixels[pixelBase + 1],\n                pixels[pixelBase + 2]);\n            if (pixelID > RenderConstants.ID_NONE) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Detect which sprite, if any, is at the given location.\n     * @param {int} centerX The client x coordinate of the picking location.\n     * @param {int} centerY The client y coordinate of the picking location.\n     * @param {int} touchWidth The client width of the touch event (optional).\n     * @param {int} touchHeight The client height of the touch event (optional).\n     * @param {int[]} candidateIDs The Drawable IDs to pick from, otherwise all.\n     * @returns {int} The ID of the topmost Drawable under the picking location, or\n     * RenderConstants.ID_NONE if there is no Drawable at that location.\n     */\n    pick (centerX, centerY, touchWidth, touchHeight, candidateIDs) {\n        const gl = this._gl;\n\n        touchWidth = touchWidth || 1;\n        touchHeight = touchHeight || 1;\n        candidateIDs = candidateIDs || this._drawList;\n\n        const clientToGLX = gl.canvas.width / gl.canvas.clientWidth;\n        const clientToGLY = gl.canvas.height / gl.canvas.clientHeight;\n\n        centerX *= clientToGLX;\n        centerY *= clientToGLY;\n        touchWidth *= clientToGLX;\n        touchHeight *= clientToGLY;\n\n        touchWidth = Math.max(1, Math.min(touchWidth, MAX_TOUCH_SIZE[0]));\n        touchHeight = Math.max(1, Math.min(touchHeight, MAX_TOUCH_SIZE[1]));\n\n        const pixelLeft = Math.floor(centerX - Math.floor(touchWidth / 2) + 0.5);\n        const pixelRight = Math.floor(centerX + Math.ceil(touchWidth / 2) + 0.5);\n        const pixelTop = Math.floor(centerY - Math.floor(touchHeight / 2) + 0.5);\n        const pixelBottom = Math.floor(centerY + Math.ceil(touchHeight / 2) + 0.5);\n\n        twgl.bindFramebufferInfo(gl, this._pickBufferInfo);\n        gl.viewport(0, 0, touchWidth, touchHeight);\n\n        const noneColor = Drawable.color4fFromID(RenderConstants.ID_NONE);\n        gl.clearColor.apply(gl, noneColor);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        const widthPerPixel = (this._xRight - this._xLeft) / this._gl.canvas.width;\n        const heightPerPixel = (this._yBottom - this._yTop) / this._gl.canvas.height;\n\n        const pickLeft = this._xLeft + (pixelLeft * widthPerPixel);\n        const pickRight = this._xLeft + (pixelRight * widthPerPixel);\n        const pickTop = this._yTop + (pixelTop * heightPerPixel);\n        const pickBottom = this._yTop + (pixelBottom * heightPerPixel);\n\n        const projection = twgl.m4.ortho(pickLeft, pickRight, pickTop, pickBottom, -1, 1);\n\n        this._drawThese(candidateIDs, ShaderManager.DRAW_MODE.silhouette, projection);\n\n        const pixels = new Uint8Array(touchWidth * touchHeight * 4);\n        gl.readPixels(0, 0, touchWidth, touchHeight, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = touchWidth;\n            this._debugCanvas.height = touchHeight;\n            const context = this._debugCanvas.getContext('2d');\n            const imageData = context.getImageData(0, 0, touchWidth, touchHeight);\n            imageData.data.set(pixels);\n            context.putImageData(imageData, 0, 0);\n        }\n\n        const hits = {};\n        for (let pixelBase = 0; pixelBase < pixels.length; pixelBase += 4) {\n            const pixelID = Drawable.color3bToID(\n                pixels[pixelBase],\n                pixels[pixelBase + 1],\n                pixels[pixelBase + 2]);\n            hits[pixelID] = (hits[pixelID] || 0) + 1;\n        }\n\n        // Bias toward selecting anything over nothing\n        hits[RenderConstants.ID_NONE] = 0;\n\n        let hit = RenderConstants.ID_NONE;\n        for (const hitID in hits) {\n            if (hits.hasOwnProperty(hitID) && (hits[hitID] > hits[hit])) {\n                hit = hitID;\n            }\n        }\n\n        return hit | 0;\n    }\n\n    /**\n     * Get the candidate bounding box for a touching query.\n     * @param {int} drawableID ID for drawable of query.\n     * @return {?Rectangle} Rectangle bounds for touching query, or null.\n     */\n    _touchingBounds (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n\n        // TODO: remove this once URL-based skin setting is removed.\n        if (!drawable.skin || !drawable.skin.getTexture([100, 100])) return null;\n\n        const bounds = drawable.getFastBounds();\n\n        // Limit queries to the stage size.\n        bounds.clamp(this._xLeft, this._xRight, this._yBottom, this._yTop);\n\n        // Use integer coordinates for queries - weird things happen\n        // when you provide float width/heights to gl.viewport and projection.\n        bounds.snapToInt();\n\n        if (bounds.width === 0 || bounds.height === 0) {\n            // No space to query.\n            return null;\n        }\n        return bounds;\n    }\n\n    /**\n     * Filter a list of candidates for a touching query into only those that\n     * could possibly intersect the given bounds.\n     * @param {int} drawableID - ID for drawable of query.\n     * @param {Array.<int>} candidateIDs - Candidates for touching query.\n     * @param {Rectangle} bounds - Bounds to limit candidates to.\n     * @return {?Array.<int>} Filtered candidateIDs, or null if none.\n     */\n    _filterCandidatesTouching (drawableID, candidateIDs, bounds) {\n        // Filter candidates by rough bounding box intersection.\n        // Do this before _drawThese, so we can prevent any GL operations\n        // and readback by returning early.\n        candidateIDs = candidateIDs.filter(testID => {\n            if (testID === drawableID) return false;\n            // Only draw items which could possibly overlap target Drawable.\n            const candidate = this._allDrawables[testID];\n            const candidateBounds = candidate.getFastBounds();\n            return bounds.intersects(candidateBounds);\n        });\n        if (candidateIDs.length === 0) {\n            // No possible intersections based on bounding boxes.\n            return null;\n        }\n        return candidateIDs;\n    }\n\n    /**\n     * Update the position, direction, scale, or effect properties of this Drawable.\n     * @param {int} drawableID The ID of the Drawable to update.\n     * @param {object.<string,*>} properties The new property values to set.\n     */\n    updateDrawableProperties (drawableID, properties) {\n        const drawable = this._allDrawables[drawableID];\n        if (!drawable) {\n            // TODO: fix whatever's wrong in the VM which causes this, then add a warning or throw here.\n            // Right now this happens so much on some projects that a warning or exception here can hang the browser.\n            return;\n        }\n        // TODO: remove this after fully deprecating URL-based skin paths\n        if ('skin' in properties) {\n            const {skin, costumeResolution, rotationCenter} = properties;\n            const skinId = this.createSkinFromURL(skin, costumeResolution, rotationCenter);\n            drawable.skin = this._allSkins[skinId];\n        }\n        if ('skinId' in properties) {\n            drawable.skin = this._allSkins[properties.skinId];\n        }\n        if ('rotationCenter' in properties) {\n            const newRotationCenter = properties.rotationCenter;\n            drawable.skin.setRotationCenter(newRotationCenter[0], newRotationCenter[1]);\n        }\n        drawable.updateProperties(properties);\n    }\n\n    /**\n     * Clear a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     */\n    penClear (penSkinID) {\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n        skin.clear();\n    }\n\n    /**\n     * Draw a point on a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     * @param {PenAttributes} penAttributes - how the point should be drawn.\n     * @param {number} x - the X coordinate of the point to draw.\n     * @param {number} y - the Y coordinate of the point to draw.\n     */\n    penPoint (penSkinID, penAttributes, x, y) {\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n        skin.drawPoint(penAttributes, x, y);\n    }\n\n    /**\n     * Draw a line on a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     * @param {PenAttributes} penAttributes - how the line should be drawn.\n     * @param {number} x0 - the X coordinate of the beginning of the line.\n     * @param {number} y0 - the Y coordinate of the beginning of the line.\n     * @param {number} x1 - the X coordinate of the end of the line.\n     * @param {number} y1 - the Y coordinate of the end of the line.\n     */\n    penLine (penSkinID, penAttributes, x0, y0, x1, y1) {\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n        skin.drawLine(penAttributes, x0, y0, x1, y1);\n    }\n\n    /**\n     * Stamp a Drawable onto a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     * @param {int} stampID - the unique ID of the Drawable to use as the stamp.\n     */\n    penStamp (penSkinID, stampID) {\n        const stampDrawable = this._allDrawables[stampID];\n        if (!stampDrawable) {\n            return;\n        }\n\n        const bounds = this._touchingBounds(stampID);\n        if (!bounds) {\n            return;\n        }\n\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        // Limit size of viewport to the bounds around the stamp Drawable and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        try {\n            gl.disable(gl.BLEND);\n            this._drawThese([stampID], ShaderManager.DRAW_MODE.default, projection);\n        } finally {\n            gl.enable(gl.BLEND);\n        }\n\n        const stampPixels = new Uint8Array(bounds.width * bounds.height * 4);\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, stampPixels);\n\n        const stampCanvas = this._tempCanvas;\n        stampCanvas.width = bounds.width;\n        stampCanvas.height = bounds.height;\n\n        const stampContext = stampCanvas.getContext('2d');\n        const stampImageData = stampContext.createImageData(bounds.width, bounds.height);\n        stampImageData.data.set(stampPixels);\n        stampContext.putImageData(stampImageData, 0, 0);\n\n        skin.drawStamp(stampCanvas, bounds.left, bounds.top);\n    }\n\n    /* ******\n     * Truly internal functions: these support the functions above.\n     ********/\n\n    /**\n     * Build geometry (vertex and index) buffers.\n     * @private\n     */\n    _createGeometry () {\n        const quad = {\n            a_position: {\n                numComponents: 2,\n                data: [\n                    -0.5, -0.5,\n                    0.5, -0.5,\n                    -0.5, 0.5,\n                    -0.5, 0.5,\n                    0.5, -0.5,\n                    0.5, 0.5\n                ]\n            },\n            a_texCoord: {\n                numComponents: 2,\n                data: [\n                    1, 0,\n                    0, 0,\n                    1, 1,\n                    1, 1,\n                    0, 0,\n                    0, 1\n                ]\n            }\n        };\n        this._bufferInfo = twgl.createBufferInfoFromArrays(this._gl, quad);\n    }\n\n    /**\n     * Respond to a change in the \"native\" rendering size. The native size is used by buffers which are fixed in size\n     * regardless of the size of the main render target. This includes the buffers used for queries such as picking and\n     * color-touching. The fixed size allows (more) consistent behavior across devices and presentation modes.\n     * @param {object} event - The change event.\n     * @private\n     */\n    onNativeSizeChanged (event) {\n        const [width, height] = event.newSize;\n\n        const gl = this._gl;\n        const attachments = [\n            {format: gl.RGBA},\n            {format: gl.DEPTH_STENCIL}\n        ];\n\n        if (!this._pickBufferInfo) {\n            this._pickBufferInfo = twgl.createFramebufferInfo(gl, attachments, MAX_TOUCH_SIZE[0], MAX_TOUCH_SIZE[1]);\n        }\n\n        // TODO: should we create this on demand to save memory?\n        // A 480x360 32-bpp buffer is 675 KiB.\n        if (this._queryBufferInfo) {\n            twgl.resizeFramebufferInfo(gl, this._queryBufferInfo, attachments, width, height);\n        } else {\n            this._queryBufferInfo = twgl.createFramebufferInfo(gl, attachments, width, height);\n        }\n    }\n\n    /**\n     * Draw all Drawables, with the possible exception of\n     * @param {int[]} drawables The Drawable IDs to draw, possibly this._drawList.\n     * @param {ShaderManager.DRAW_MODE} drawMode Draw normally, silhouette, etc.\n     * @param {module:twgl/m4.Mat4} projection The projection matrix to use.\n     * @param {idFilterFunc} [filter] An optional filter function.\n     * @param {Object.<string,*>} [extraUniforms] Extra uniforms for the shaders.\n     * @private\n     */\n    _drawThese (drawables, drawMode, projection, filter, extraUniforms) {\n        const gl = this._gl;\n        let currentShader = null;\n\n        const numDrawables = drawables.length;\n        for (let drawableIndex = 0; drawableIndex < numDrawables; ++drawableIndex) {\n            const drawableID = drawables[drawableIndex];\n\n            // If we have a filter, check whether the ID fails\n            if (filter && !filter(drawableID)) continue;\n\n            const drawable = this._allDrawables[drawableID];\n            // TODO: check if drawable is inside the viewport before anything else\n\n            // Hidden drawables (e.g., by a \"hide\" block) are never drawn.\n            if (!drawable.getVisible()) continue;\n\n            const drawableScale = drawable.scale;\n\n            // If the texture isn't ready yet, skip it.\n            if (!drawable.skin.getTexture(drawableScale)) continue;\n\n            const effectBits = drawable.getEnabledEffects();\n            const newShader = this._shaderManager.getShader(drawMode, effectBits);\n            if (currentShader !== newShader) {\n                currentShader = newShader;\n                gl.useProgram(currentShader.program);\n                twgl.setBuffersAndAttributes(gl, currentShader, this._bufferInfo);\n                twgl.setUniforms(currentShader, {u_projectionMatrix: projection});\n                twgl.setUniforms(currentShader, {u_fudge: window.fudge || 0});\n            }\n\n            twgl.setUniforms(currentShader, drawable.skin.getUniforms(drawableScale));\n            twgl.setUniforms(currentShader, drawable.getUniforms());\n\n            // Apply extra uniforms after the Drawable's, to allow overwriting.\n            if (extraUniforms) {\n                twgl.setUniforms(currentShader, extraUniforms);\n            }\n\n            twgl.drawBufferInfo(gl, gl.TRIANGLES, this._bufferInfo);\n        }\n    }\n\n    /**\n     * Get the convex hull points for a particular Drawable.\n     * To do this, draw the Drawable unrotated, unscaled, and untranslated.\n     * Read back the pixels and find all boundary points.\n     * Finally, apply a convex hull algorithm to simplify the set.\n     * @param {int} drawableID The Drawable IDs calculate convex hull for.\n     * @return {Array.<Array.<number>>} points Convex hull points, as [[x, y], ...]\n     */\n    _getConvexHullPointsForDrawable (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        const [width, height] = drawable.skin.size;\n        // No points in the hull if invisible or size is 0.\n        if (!drawable.getVisible() || width === 0 || height === 0) {\n            return [];\n        }\n\n        // Only draw to the size of the untransformed drawable.\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n        gl.viewport(0, 0, width, height);\n\n        // Clear the canvas with RenderConstants.ID_NONE.\n        const noneColor = Drawable.color4fFromID(RenderConstants.ID_NONE);\n        gl.clearColor.apply(gl, noneColor);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Overwrite the model matrix to be unrotated, unscaled, untranslated.\n        const modelMatrix = twgl.m4.identity();\n        twgl.m4.rotateZ(modelMatrix, Math.PI, modelMatrix);\n        twgl.m4.scale(modelMatrix, [width, height], modelMatrix);\n\n        const projection = twgl.m4.ortho(-0.5 * width, 0.5 * width, -0.5 * height, 0.5 * height, -1, 1);\n\n        this._drawThese([drawableID],\n            ShaderManager.DRAW_MODE.silhouette,\n            projection,\n            null,\n            {u_modelMatrix: modelMatrix}\n        );\n\n        const pixels = new Uint8Array(width * height * 4);\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        // Known boundary points on left/right edges of pixels.\n        const boundaryPoints = [];\n\n        /**\n         * Helper method to look up a pixel.\n         * @param {int} x X coordinate of the pixel in `pixels`.\n         * @param {int} y Y coordinate of the pixel in `pixels`.\n         * @return {int} Known ID at that pixel, or RenderConstants.ID_NONE.\n         */\n        const _getPixel = (x, y) => {\n            const pixelBase = ((width * y) + x) * 4;\n            return Drawable.color3bToID(\n                pixels[pixelBase],\n                pixels[pixelBase + 1],\n                pixels[pixelBase + 2]);\n        };\n        for (let y = 0; y <= height; y++) {\n            // Scan from left.\n            for (let x = 0; x < width; x++) {\n                if (_getPixel(x, y) > RenderConstants.ID_NONE) {\n                    boundaryPoints.push([x, y]);\n                    break;\n                }\n            }\n            // Scan from right.\n            for (let x = width - 1; x >= 0; x--) {\n                if (_getPixel(x, y) > RenderConstants.ID_NONE) {\n                    boundaryPoints.push([x, y]);\n                    break;\n                }\n            }\n        }\n        // Simplify boundary points using convex hull.\n        return hull(boundaryPoints, Infinity);\n    }\n}\n\nmodule.exports = RenderWebGL;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/RenderWebGL.js\n **/","module.exports = require(\"events\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"events\"\n ** module id = 2\n ** module chunks = 0\n **/","/*\n (c) 2014-2016, Andrii Heonia\n Hull.js, a JavaScript library for concave hull generation by set of points.\n https://github.com/AndriiHeonia/hull\n*/\n\n'use strict';\n\nvar intersect = require('./intersect.js');\nvar grid = require('./grid.js');\nvar formatUtil = require('./format.js');\nvar convexHull = require('./convex.js');\n\nfunction _filterDuplicates(pointset) {\n    return pointset.filter(function(el, idx, arr) {\n        var prevEl = arr[idx - 1];\n        return idx === 0 || !(prevEl[0] === el[0] && prevEl[1] === el[1]);\n    });\n}\n\nfunction _sortByX(pointset) {\n    return pointset.sort(function(a, b) {\n        if (a[0] == b[0]) {\n            return a[1] - b[1];\n        } else {\n            return a[0] - b[0];\n        }\n    });\n}\n\nfunction _sqLength(a, b) {\n    return Math.pow(b[0] - a[0], 2) + Math.pow(b[1] - a[1], 2);\n}\n\nfunction _cos(o, a, b) {\n    var aShifted = [a[0] - o[0], a[1] - o[1]],\n        bShifted = [b[0] - o[0], b[1] - o[1]],\n        sqALen = _sqLength(o, a),\n        sqBLen = _sqLength(o, b),\n        dot = aShifted[0] * bShifted[0] + aShifted[1] * bShifted[1];\n\n    return dot / Math.sqrt(sqALen * sqBLen);\n}\n\nfunction _intersect(segment, pointset) {\n    for (var i = 0; i < pointset.length - 1; i++) {\n        var seg = [pointset[i], pointset[i + 1]];\n        if (segment[0][0] === seg[0][0] && segment[0][1] === seg[0][1] ||\n            segment[0][0] === seg[1][0] && segment[0][1] === seg[1][1]) {\n            continue;\n        }\n        if (intersect(segment, seg)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction _occupiedArea(pointset) {\n    var minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n\n    for (var i = pointset.length - 1; i >= 0; i--) {\n        if (pointset[i][0] < minX) {\n            minX = pointset[i][0];\n        }\n        if (pointset[i][1] < minY) {\n            minY = pointset[i][1];\n        }\n        if (pointset[i][0] > maxX) {\n            maxX = pointset[i][0];\n        }\n        if (pointset[i][1] > maxY) {\n            maxY = pointset[i][1];\n        }\n    }\n\n    return [\n        maxX - minX, // width\n        maxY - minY  // height\n    ];\n}\n\nfunction _bBoxAround(edge) {\n    return [\n        Math.min(edge[0][0], edge[1][0]), // left\n        Math.min(edge[0][1], edge[1][1]), // top\n        Math.max(edge[0][0], edge[1][0]), // right\n        Math.max(edge[0][1], edge[1][1])  // bottom\n    ];\n}\n\nfunction _midPoint(edge, innerPoints, convex) {\n    var point = null,\n        angle1Cos = MAX_CONCAVE_ANGLE_COS,\n        angle2Cos = MAX_CONCAVE_ANGLE_COS,\n        a1Cos, a2Cos;\n\n    for (var i = 0; i < innerPoints.length; i++) {\n        a1Cos = _cos(edge[0], edge[1], innerPoints[i]);\n        a2Cos = _cos(edge[1], edge[0], innerPoints[i]);\n\n        if (a1Cos > angle1Cos && a2Cos > angle2Cos &&\n            !_intersect([edge[0], innerPoints[i]], convex) &&\n            !_intersect([edge[1], innerPoints[i]], convex)) {\n\n            angle1Cos = a1Cos;\n            angle2Cos = a2Cos;\n            point = innerPoints[i];\n        }\n    }\n\n    return point;\n}\n\nfunction _concave(convex, maxSqEdgeLen, maxSearchArea, grid, edgeSkipList) {\n    var edge,\n        keyInSkipList,\n        scaleFactor,\n        midPoint,\n        bBoxAround,\n        bBoxWidth,\n        bBoxHeight,\n        midPointInserted = false;\n\n    for (var i = 0; i < convex.length - 1; i++) {\n        edge = [convex[i], convex[i + 1]];\n        keyInSkipList = edge[0].join() + ',' + edge[1].join();\n\n        if (_sqLength(edge[0], edge[1]) < maxSqEdgeLen ||\n            edgeSkipList[keyInSkipList] === true) { continue; }\n\n        scaleFactor = 0;\n        bBoxAround = _bBoxAround(edge);\n        do {\n            bBoxAround = grid.extendBbox(bBoxAround, scaleFactor);\n            bBoxWidth = bBoxAround[2] - bBoxAround[0];\n            bBoxHeight = bBoxAround[3] - bBoxAround[1];\n\n            midPoint = _midPoint(edge, grid.rangePoints(bBoxAround), convex);            \n            scaleFactor++;\n        }  while (midPoint === null && (maxSearchArea[0] > bBoxWidth || maxSearchArea[1] > bBoxHeight));\n\n        if (bBoxWidth >= maxSearchArea[0] && bBoxHeight >= maxSearchArea[1]) {\n            edgeSkipList[keyInSkipList] = true;\n        }\n\n        if (midPoint !== null) {\n            convex.splice(i + 1, 0, midPoint);\n            grid.removePoint(midPoint);\n            midPointInserted = true;\n        }\n    }\n\n    if (midPointInserted) {\n        return _concave(convex, maxSqEdgeLen, maxSearchArea, grid, edgeSkipList);\n    }\n\n    return convex;\n}\n\nfunction hull(pointset, concavity, format) {\n    var convex,\n        concave,\n        innerPoints,\n        occupiedArea,\n        maxSearchArea,\n        cellSize,\n        points,\n        maxEdgeLen = concavity || 20;\n\n    if (pointset.length < 4) {\n        return pointset.slice();\n    }\n\n    points = _filterDuplicates(_sortByX(formatUtil.toXy(pointset, format)));\n\n    occupiedArea = _occupiedArea(points);\n    maxSearchArea = [\n        occupiedArea[0] * MAX_SEARCH_BBOX_SIZE_PERCENT,\n        occupiedArea[1] * MAX_SEARCH_BBOX_SIZE_PERCENT\n    ];\n\n    convex = convexHull(points);\n    innerPoints = points.filter(function(pt) {\n        return convex.indexOf(pt) < 0;\n    });\n\n    cellSize = Math.ceil(1 / (points.length / (occupiedArea[0] * occupiedArea[1])));\n\n    concave = _concave(\n        convex, Math.pow(maxEdgeLen, 2),\n        maxSearchArea, grid(innerPoints, cellSize), {});\n \n    return formatUtil.fromXy(concave, format);\n}\n\nvar MAX_CONCAVE_ANGLE_COS = Math.cos(90 / (180 / Math.PI)); // angle = 90 deg\nvar MAX_SEARCH_BBOX_SIZE_PERCENT = 0.6;\n\nmodule.exports = hull;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hull.js/src/hull.js\n ** module id = 3\n ** module chunks = 0\n **/","function ccw(x1, y1, x2, y2, x3, y3) {           \n    var cw = ((y3 - y1) * (x2 - x1)) - ((y2 - y1) * (x3 - x1));\n    return cw > 0 ? true : cw < 0 ? false : true; // colinear\n}\n\nfunction intersect(seg1, seg2) {\n  var x1 = seg1[0][0], y1 = seg1[0][1],\n      x2 = seg1[1][0], y2 = seg1[1][1],\n      x3 = seg2[0][0], y3 = seg2[0][1],\n      x4 = seg2[1][0], y4 = seg2[1][1];\n\n    return ccw(x1, y1, x3, y3, x4, y4) !== ccw(x2, y2, x3, y3, x4, y4) && ccw(x1, y1, x2, y2, x3, y3) !== ccw(x1, y1, x2, y2, x4, y4);\n}\n\nmodule.exports = intersect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hull.js/src/intersect.js\n ** module id = 4\n ** module chunks = 0\n **/","function Grid(points, cellSize) {\n    this._cells = [];\n    this._cellSize = cellSize;\n\n    points.forEach(function(point) {\n        var cellXY = this.point2CellXY(point),\n            x = cellXY[0],\n            y = cellXY[1];\n        if (this._cells[x] === undefined) {\n            this._cells[x] = [];\n        }\n        if (this._cells[x][y] === undefined) {\n            this._cells[x][y] = [];\n        }\n        this._cells[x][y].push(point);\n    }, this);\n}\n\nGrid.prototype = {\n    cellPoints: function(x, y) { // (Number, Number) -> Array\n        return (this._cells[x] !== undefined && this._cells[x][y] !== undefined) ? this._cells[x][y] : [];\n    },\n\n    rangePoints: function(bbox) { // (Array) -> Array\n        var tlCellXY = this.point2CellXY([bbox[0], bbox[1]]),\n            brCellXY = this.point2CellXY([bbox[2], bbox[3]]),\n            points = [];\n\n        for (var x = tlCellXY[0]; x <= brCellXY[0]; x++) {\n            for (var y = tlCellXY[1]; y <= brCellXY[1]; y++) {\n                points = points.concat(this.cellPoints(x, y));\n            }\n        }\n\n        return points;\n    },\n\n    removePoint: function(point) { // (Array) -> Array\n        var cellXY = this.point2CellXY(point),\n            cell = this._cells[cellXY[0]][cellXY[1]],\n            pointIdxInCell;\n        \n        for (var i = 0; i < cell.length; i++) {\n            if (cell[i][0] === point[0] && cell[i][1] === point[1]) {\n                pointIdxInCell = i;\n                break;\n            }\n        }\n\n        cell.splice(pointIdxInCell, 1);\n\n        return cell;\n    },\n\n    point2CellXY: function(point) { // (Array) -> Array\n        var x = parseInt(point[0] / this._cellSize),\n            y = parseInt(point[1] / this._cellSize);\n        return [x, y];\n    },\n\n    extendBbox: function(bbox, scaleFactor) { // (Array, Number) -> Array\n        return [\n            bbox[0] - (scaleFactor * this._cellSize),\n            bbox[1] - (scaleFactor * this._cellSize),\n            bbox[2] + (scaleFactor * this._cellSize),\n            bbox[3] + (scaleFactor * this._cellSize)\n        ];\n    }\n};\n\nfunction grid(points, cellSize) {\n    return new Grid(points, cellSize);\n}\n\nmodule.exports = grid;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hull.js/src/grid.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = {\n\n    toXy: function(pointset, format) {\n        if (format === undefined) {\n            return pointset.slice();\n        }\n        return pointset.map(function(pt) {\n            /*jslint evil: true */\n            var _getXY = new Function('pt', 'return [pt' + format[0] + ',' + 'pt' + format[1] + '];');\n            return _getXY(pt);\n        });\n    },\n\n    fromXy: function(pointset, format) {\n        if (format === undefined) {\n            return pointset.slice();\n        }\n        return pointset.map(function(pt) {\n            /*jslint evil: true */\n            var _getObj = new Function('pt', 'var o = {}; o' + format[0] + '= pt[0]; o' + format[1] + '= pt[1]; return o;');\n            return _getObj(pt);\n        });\n    }\n\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hull.js/src/format.js\n ** module id = 6\n ** module chunks = 0\n **/","function _cross(o, a, b) {\n    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);\n}\n\nfunction _upperTangent(pointset) {\n    var lower = [];\n    for (var l = 0; l < pointset.length; l++) {\n        while (lower.length >= 2 && (_cross(lower[lower.length - 2], lower[lower.length - 1], pointset[l]) <= 0)) {\n            lower.pop();\n        }\n        lower.push(pointset[l]);\n    }\n    lower.pop();\n    return lower;\n}\n\nfunction _lowerTangent(pointset) {\n    var reversed = pointset.reverse(),\n        upper = [];\n    for (var u = 0; u < reversed.length; u++) {\n        while (upper.length >= 2 && (_cross(upper[upper.length - 2], upper[upper.length - 1], reversed[u]) <= 0)) {\n            upper.pop();\n        }\n        upper.push(reversed[u]);\n    }\n    upper.pop();\n    return upper;\n}\n\n// pointset has to be sorted by X\nfunction convex(pointset) {\n    var convex,\n        upper = _upperTangent(pointset),\n        lower = _lowerTangent(pointset);\n    convex = lower.concat(upper);\n    convex.push(pointset[0]);  \n    return convex;  \n}\n\nmodule.exports = convex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hull.js/src/convex.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * @license twgl.js 1.5.2 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.twgl = factory();\n    }\n}(this, function () {\n\n/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar notrequirebecasebrowserifymessesupjs, notrequirebecasebrowserifymessesup, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level notrequirebecasebrowserifymessesup that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a notrequirebecasebrowserifymessesup function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not notrequirebecasebrowserifymessesup('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        notrequirebecasebrowserifymessesup: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [notrequirebecasebrowserifymessesup, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['notrequirebecasebrowserifymessesup', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"notrequirebecasebrowserifymessesup\") {\n                    args[i] = handlers.notrequirebecasebrowserifymessesup(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    notrequirebecasebrowserifymessesupjs = notrequirebecasebrowserifymessesup = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support notrequirebecasebrowserifymessesup(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use notrequirebecasebrowserifymessesup('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    notrequirebecasebrowserifymessesupjs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"node_modules/almond/almond.js\", function(){});\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\ndefine('twgl/typedarrays',[], function() {\n  \n\n  /**\n   * Low level shader typed array related functions\n   *\n   * You should generally not need to use these functions. They are provided\n   * for those cases where you're doing something out of the ordinary\n   * and you need lower level access.\n   *\n   * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n   * itself\n   *\n   * See {@link module:twgl} for core functions\n   *\n   * @module twgl/typedArray\n   */\n\n\n  // make sure we don't see a global gl\n  var gl = undefined;  // eslint-disable-line\n\n  /* DataType */\n  var BYTE                           = 0x1400;\n  var UNSIGNED_BYTE                  = 0x1401;\n  var SHORT                          = 0x1402;\n  var UNSIGNED_SHORT                 = 0x1403;\n  var INT                            = 0x1404;\n  var UNSIGNED_INT                   = 0x1405;\n  var FLOAT                          = 0x1406;\n\n  /**\n   * Get the GL type for a typedArray\n   * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n   * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n   *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n   * @memberOf module:twgl/typedArray\n   */\n  function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n    if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n    if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n    if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n    if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n    if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n    if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n    if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n    throw \"unsupported typed array type\";\n  }\n\n  /**\n   * Get the typed array constructor for a given GL type\n   * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n   * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n   * @memberOf module:twgl/typedArray\n   */\n  function getTypedArrayTypeForGLType(type) {\n    switch (type) {\n      case BYTE:           return Int8Array;     // eslint-disable-line\n      case UNSIGNED_BYTE:  return Uint8Array;    // eslint-disable-line\n      case SHORT:          return Int16Array;    // eslint-disable-line\n      case UNSIGNED_SHORT: return Uint16Array;   // eslint-disable-line\n      case INT:            return Int32Array;    // eslint-disable-line\n      case UNSIGNED_INT:   return Uint32Array;   // eslint-disable-line\n      case FLOAT:          return Float32Array;  // eslint-disable-line\n      default:\n        throw \"unknown gl type\";\n    }\n  }\n\n  function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  return {\n    \"getGLTypeForTypedArray\": getGLTypeForTypedArray,\n    \"getTypedArrayTypeForGLType\": getTypedArrayTypeForGLType,\n    \"isArrayBuffer\": isArrayBuffer,\n  };\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/utils',[], function() {\n  \n\n  /**\n   * Copy an object 1 level deep\n   * @param {object} src object to copy\n   * @return {object} the copy\n   */\n  function shallowCopy(src) {\n    var dst = {};\n    Object.keys(src).forEach(function(key) {\n      dst[key] = src[key];\n    });\n    return dst;\n  }\n\n  /**\n   * Copy named properties\n   *\n   * @param {string[]} names names of properties to copy\n   * @param {object} src object to copy properties from\n   * @param {object} dst object to copy properties to\n   */\n  function copyNamedProperties(names, src, dst) {\n    names.forEach(function(name) {\n      var value = src[name];\n      if (value !== undefined) {\n        dst[name] = value;\n      }\n    });\n  }\n\n  /**\n   * Copies properties from source to dest only if a matching key is in dest\n   *\n   * @param {Object.<string, ?>} src the source\n   * @param {Object.<string, ?>} dst the dest\n   */\n  function copyExistingProperties(src, dst) {\n    Object.keys(dst).forEach(function(key) {\n      if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    });\n  }\n\n  /**\n   * Check if context is WebGL 2.0\n   * @return {bool} true if it's WebGL 2.0\n   * @memberOf module:twgl\n   */\n  function isWebGL2(gl) {\n    return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  }\n\n  /**\n   * Check if context is WebGL 1.0\n   * @return {bool} true if it's WebGL 1.0\n   * @memberOf module:twgl\n   */\n  function isWebGL1(gl) {\n    return gl.getParameter(gl.VERSION).indexOf(\"WebGL 1.0\") === 0;\n  }\n\n  var error =\n      (    window.console\n        && window.console.error\n        && typeof window.console.error === \"function\"\n      )\n      ? window.console.error.bind(window.console)\n      : function() { };\n\n  var warn =\n      (    window.console\n        && window.console.warn\n        && typeof window.console.warn === \"function\"\n      )\n      ? window.console.warn.bind(window.console)\n      : function() { };\n\n  return {\n    copyExistingProperties: copyExistingProperties,\n    copyNamedProperties: copyNamedProperties,\n    shallowCopy: shallowCopy,\n    isWebGL1: isWebGL1,\n    isWebGL2: isWebGL2,\n    error: error,\n    warn: warn,\n  };\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/attributes',[\n    './typedarrays',\n    './utils',\n  ], function(\n    typedArrays,\n    utils) {\n  \n\n  /**\n   * Low level attribute and buffer related functions\n   *\n   * You should generally not need to use these functions. They are provided\n   * for those cases where you're doing something out of the ordinary\n   * and you need lower level access.\n   *\n   * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n   * itself\n   *\n   * See {@link module:twgl} for core functions\n   *\n   * @module twgl/attributes\n   */\n\n  // make sure we don't see a global gl\n  var gl = undefined;  // eslint-disable-line\n  var defaults = {\n    attribPrefix: \"\",\n  };\n\n  /**\n   * Sets the default attrib prefix\n   *\n   * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n   * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n   *\n   * In otherwords I'll create arrays of geometry like this\n   *\n   *     var arrays = {\n   *       position: ...\n   *       normal: ...\n   *       texcoord: ...\n   *     };\n   *\n   * But need those mapped to attributes and my attributes start with `a_`.\n   *\n   * @deprecated see {@link module:twgl.setDefaults}\n   * @param {string} prefix prefix for attribs\n   * @memberOf module:twgl/attributes\n   */\n  function setAttributePrefix(prefix) {\n    defaults.attribPrefix = prefix;\n  }\n\n  function setDefaults(newDefaults) {\n    utils.copyExistingProperties(newDefaults, defaults);\n  }\n\n  function setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n    gl.bindBuffer(type, buffer);\n    gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n  }\n\n  /**\n   * Given typed array creates a WebGLBuffer and copies the typed array\n   * into it.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {ArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n   * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n   * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n   * @return {WebGLBuffer} the created WebGLBuffer\n   * @memberOf module:twgl/attributes\n   */\n  function createBufferFromTypedArray(gl, typedArray, type, drawType) {\n    if (typedArray instanceof WebGLBuffer) {\n      return typedArray;\n    }\n    type = type || gl.ARRAY_BUFFER;\n    var buffer = gl.createBuffer();\n    setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n    return buffer;\n  }\n\n  function isIndices(name) {\n    return name === \"indices\";\n  }\n\n  // This is really just a guess. Though I can't really imagine using\n  // anything else? Maybe for some compression?\n  function getNormalizationForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n    if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n    return false;\n  }\n\n  function getArray(array) {\n    return array.length ? array : array.data;\n  }\n\n  function guessNumComponentsFromName(name, length) {\n    var numComponents;\n    if (name.indexOf(\"coord\") >= 0) {\n      numComponents = 2;\n    } else if (name.indexOf(\"color\") >= 0) {\n      numComponents = 4;\n    } else {\n      numComponents = 3;  // position, normals, indices ...\n    }\n\n    if (length % numComponents > 0) {\n      throw \"can not guess numComponents. You should specify it.\";\n    }\n\n    return numComponents;\n  }\n\n  function getNumComponents(array, arrayName) {\n    return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n  }\n\n  function makeTypedArray(array, name) {\n    if (typedArrays.isArrayBuffer(array)) {\n      return array;\n    }\n\n    if (typedArrays.isArrayBuffer(array.data)) {\n      return array.data;\n    }\n\n    if (Array.isArray(array)) {\n      array = {\n        data: array,\n      };\n    }\n\n    var Type = array.type;\n    if (!Type) {\n      if (name === \"indices\") {\n        Type = Uint16Array;\n      } else {\n        Type = Float32Array;\n      }\n    }\n    return new Type(array.data);\n  }\n\n  /**\n   * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n   * for the attribute.\n   *\n   * @typedef {Object} AttribInfo\n   * @property {number} [numComponents] the number of components for this attribute.\n   * @property {number} [size] synonym for `numComponents`.\n   * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n   * @property {boolean} [normalized] whether or not to normalize the data. Default = false\n   * @property {number} [offset] offset into buffer in bytes. Default = 0\n   * @property {number} [stride] the stride in bytes per element. Default = 0\n   * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n   * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n   * @typedef {Object} FullArraySpec\n   * @property {(number[]|ArrayBuffer)} data The data of the array.\n   * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n   *    If `coord` is in the name assumes `numComponents = 2`.\n   *    If `color` is in the name assumes `numComponents = 4`.\n   *    otherwise assumes `numComponents = 3`\n   * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n   * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n   * @property {number} [size] synonym for `numComponents`.\n   * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n   * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n   * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n   * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n   * @property {string} [name] synonym for `attrib`.\n   * @property {string} [attribName] synonym for `attrib`.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * An individual array in {@link module:twgl.Arrays}\n   *\n   * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBuffer`\n   * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n   * be `Float32Array`\n   *\n   * @typedef {(number[]|ArrayBuffer|module:twgl.FullArraySpec)} ArraySpec\n   * @memberOf module:twgl\n   */\n\n  /**\n   * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n   * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n   *\n   *     Bare JavaScript Arrays\n   *\n   *         var arrays = {\n   *            position: [-1, 1, 0],\n   *            normal: [0, 1, 0],\n   *            ...\n   *         }\n   *\n   *     Bare TypedArrays\n   *\n   *         var arrays = {\n   *            position: new Float32Array([-1, 1, 0]),\n   *            color: new Uint8Array([255, 128, 64, 255]),\n   *            ...\n   *         }\n   *\n   * *   Will guess at `numComponents` if not specified based on name.\n   *\n   *     If `coord` is in the name assumes `numComponents = 2`\n   *\n   *     If `color` is in the name assumes `numComponents = 4`\n   *\n   *     otherwise assumes `numComponents = 3`\n   *\n   * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n   *\n   *     var arrays = {\n   *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n   *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n   *     };\n   *\n   * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n   * @memberOf module:twgl\n   */\n\n\n  /**\n   * Creates a set of attribute data and WebGLBuffers from set of arrays\n   *\n   * Given\n   *\n   *      var arrays = {\n   *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n   *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n   *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n   *      };\n   *\n   * returns something like\n   *\n   *      var attribs = {\n   *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n   *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n   *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n   *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n   *      };\n   *\n   * notes:\n   *\n   * *   Arrays can take various forms\n   *\n   *     Bare JavaScript Arrays\n   *\n   *         var arrays = {\n   *            position: [-1, 1, 0],\n   *            normal: [0, 1, 0],\n   *            ...\n   *         }\n   *\n   *     Bare TypedArrays\n   *\n   *         var arrays = {\n   *            position: new Float32Array([-1, 1, 0]),\n   *            color: new Uint8Array([255, 128, 64, 255]),\n   *            ...\n   *         }\n   *\n   * *   Will guess at `numComponents` if not specified based on name.\n   *\n   *     If `coord` is in the name assumes `numComponents = 2`\n   *\n   *     If `color` is in the name assumes `numComponents = 4`\n   *\n   *     otherwise assumes `numComponents = 3`\n   *\n   * @param {WebGLRenderingContext} gl The webgl rendering context.\n   * @param {module:twgl.Arrays} arrays The arrays\n   * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n   * @memberOf module:twgl/attributes\n   */\n  function createAttribsFromArrays(gl, arrays) {\n    var attribs = {};\n    Object.keys(arrays).forEach(function(arrayName) {\n      if (!isIndices(arrayName)) {\n        var array = arrays[arrayName];\n        var attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n        var typedArray = makeTypedArray(array, arrayName);\n        attribs[attribName] = {\n          buffer:        createBufferFromTypedArray(gl, typedArray, undefined, array.drawType),\n          numComponents: getNumComponents(array, arrayName),\n          type:          typedArrays.getGLTypeForTypedArray(typedArray),\n          normalize:     array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray),\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          drawType:      array.drawType,\n        };\n      }\n    });\n    return attribs;\n  }\n\n  /**\n   * Sets the contents of a buffer attached to an attribInfo\n   *\n   * This is helper function to dynamically update a buffer.\n   *\n   * Let's say you make a bufferInfo\n   *\n   *     var arrays = {\n   *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n   *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n   *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n   *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n   *     };\n   *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n   *\n   *  And you want to dynamically upate the positions. You could do this\n   *\n   *     // assuming arrays.position has already been updated with new data.\n   *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n   *\n   * @param {WebGLRenderingContext} gl\n   * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n   *   the name of the attribute will include the prefix.\n   * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n   *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n   *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n   * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n   *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n   *    for the portion of the array you want to use.\n   *\n   *        var someArray = new Float32Array(1000); // an array with 1000 floats\n   *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n   *\n   *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n   * @memberOf module:twgl/attributes\n   */\n  function setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n    array = makeTypedArray(array);\n    if (offset) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n      gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n    } else {\n      setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n    }\n  }\n\n  /**\n   * tries to get the number of elements from a set of arrays.\n   */\n\n  var getNumElementsFromNonIndexedArrays = (function() {\n    var positionKeys = ['position', 'positions', 'a_position'];\n\n    return function getNumElementsFromNonIndexedArrays(arrays) {\n      var key;\n      for (var ii = 0; ii < positionKeys.length; ++ii) {\n        key = positionKeys[ii];\n        if (key in arrays) {\n          break;\n        }\n      }\n      if (ii === positionKeys.length) {\n        key = Object.keys(arrays)[0];\n      }\n      var array = arrays[key];\n      var length = getArray(array).length;\n      var numComponents = getNumComponents(array, key);\n      var numElements = length / numComponents;\n      if (length % numComponents > 0) {\n        throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n      }\n      return numElements;\n    };\n  }());\n\n  /**\n   * @typedef {Object} BufferInfo\n   * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n   * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n   * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n   * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n   * @memberOf module:twgl\n   */\n\n  /**\n   * @typedef {Object} VertexArrayInfo\n   * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n   * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n   * @property {WebGLVertexArrayObject> [vertexArrayObject] a vertex array object\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Creates a BufferInfo from an object of arrays.\n   *\n   * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n   * {@link module:twgl:drawBufferInfo}.\n   *\n   * Given an object like\n   *\n   *     var arrays = {\n   *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n   *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n   *     };\n   *\n   *  Creates an BufferInfo like this\n   *\n   *     bufferInfo = {\n   *       numElements: 4,        // or whatever the number of elements is\n   *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n   *       attribs: {\n   *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n   *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n   *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n   *       },\n   *     };\n   *\n   *  The properties of arrays can be JavaScript arrays in which case the number of components\n   *  will be guessed.\n   *\n   *     var arrays = {\n   *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n   *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n   *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n   *        indices:  [0, 1, 2, 1, 2, 3],\n   *     };\n   *\n   *  They can also by TypedArrays\n   *\n   *     var arrays = {\n   *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n   *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n   *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n   *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n   *     };\n   *\n   *  Or augmentedTypedArrays\n   *\n   *     var positions = createAugmentedTypedArray(3, 4);\n   *     var texcoords = createAugmentedTypedArray(2, 4);\n   *     var normals   = createAugmentedTypedArray(3, 4);\n   *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n   *\n   *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n   *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n   *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n   *     indices.push([0, 1, 2, 1, 2, 3]);\n   *\n   *     var arrays = {\n   *        position: positions,\n   *        texcoord: texcoords,\n   *        normal:   normals,\n   *        indices:  indices,\n   *     };\n   *\n   * For the last example it is equivalent to\n   *\n   *     var bufferInfo = {\n   *       attribs: {\n   *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n   *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n   *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n   *       },\n   *       indices: gl.createBuffer(),\n   *       numElements: 6,\n   *     };\n   *\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n   *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n   *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n   *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n   *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n   *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {module:twgl.Arrays} arrays Your data\n   * @return {module:twgl.BufferInfo} A BufferInfo\n   * @memberOf module:twgl/attributes\n   */\n  function createBufferInfoFromArrays(gl, arrays) {\n    var bufferInfo = {\n      attribs: createAttribsFromArrays(gl, arrays),\n    };\n    var indices = arrays.indices;\n    if (indices) {\n      indices = makeTypedArray(indices, \"indices\");\n      bufferInfo.indices = createBufferFromTypedArray(gl, indices, gl.ELEMENT_ARRAY_BUFFER);\n      bufferInfo.numElements = indices.length;\n      bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(indices);\n    } else {\n      bufferInfo.numElements = getNumElementsFromNonIndexedArrays(arrays);\n    }\n\n    return bufferInfo;\n  }\n\n  /**\n   * Creates a buffer from an array, typed array, or array spec\n   *\n   * Given something like this\n   *\n   *     [1, 2, 3],\n   *\n   * or\n   *\n   *     new Uint16Array([1,2,3]);\n   *\n   * or\n   *\n   *     {\n   *        data: [1, 2, 3],\n   *        type: Uint8Array,\n   *     }\n   *\n   * returns a WebGLBuffer that constains the given data.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n   * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n   * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n   * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n   * @memberOf module:twgl/attributes\n   */\n  function createBufferFromArray(gl, array, arrayName) {\n    var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n    var typedArray = makeTypedArray(array, arrayName);\n    return createBufferFromTypedArray(gl, typedArray, type);\n  }\n\n  /**\n   * Creates buffers from arrays or typed arrays\n   *\n   * Given something like this\n   *\n   *     var arrays = {\n   *        positions: [1, 2, 3],\n   *        normals: [0, 0, 1],\n   *     }\n   *\n   * returns something like\n   *\n   *     buffers = {\n   *       positions: WebGLBuffer,\n   *       normals: WebGLBuffer,\n   *     }\n   *\n   * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n   * @param {module:twgl.Arrays} arrays\n   * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n   * @memberOf module:twgl/attributes\n   */\n  function createBuffersFromArrays(gl, arrays) {\n    var buffers = { };\n    Object.keys(arrays).forEach(function(key) {\n      buffers[key] = createBufferFromArray(gl, arrays[key], key);\n    });\n\n    return buffers;\n  }\n\n  /**\n   * Creates a BufferInfo from an object of arrays.\n   *\n   * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n   * {@link module:twgl:drawBufferInfo}.\n   *\n   * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n   *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n   *   who's attributes use the same attribute locations for the same purposes.\n   *\n   * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n   *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n   *\n   * also\n   *\n   * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n   *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n   *   will affect the Vertex Array Object state.\n   *\n   * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n   *\n   *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n   *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n   *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n   *    now attribute D's location.\n   *\n   *    So, you can pass in both shader 1 and shader 2's programInfo\n   *\n   * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n   *\n   * @memberOf module:twgl/attributes\n   */\n  function createVertexArrayInfo(gl, programInfos, bufferInfo) {\n    var vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    if (!programInfos.length) {\n      programInfos = [programInfos];\n    }\n    programInfos.forEach(function(programInfo) {\n      twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    });\n    gl.bindVertexArray(null);\n    return {\n      numElements: bufferInfo.numElements,\n      elementType: bufferInfo.elementType,\n      vertexArrayObject: vao,\n    };\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"createAttribsFromArrays\": createAttribsFromArrays,\n    \"createBuffersFromArrays\": createBuffersFromArrays,\n    \"createBufferFromArray\": createBufferFromArray,\n    \"createBufferFromTypedArray\": createBufferFromTypedArray,\n    \"createBufferInfoFromArrays\": createBufferInfoFromArrays,\n    \"setAttribInfoBufferFromArray\": setAttribInfoBufferFromArray,\n\n    \"createVertexArrayInfo\": createVertexArrayInfo,\n\n    \"setAttributePrefix\": setAttributePrefix,\n\n    \"setDefaults_\": setDefaults,\n    \"getNumComponents_\": getNumComponents,\n    \"getArray_\": getArray,\n  };\n\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/programs',[\n    './utils',\n  ], function(\n    utils) {\n  \n\n  /**\n   * Low level shader program related functions\n   *\n   * You should generally not need to use these functions. They are provided\n   * for those cases where you're doing something out of the ordinary\n   * and you need lower level access.\n   *\n   * For backward compatibily they are available at both `twgl.programs` and `twgl`\n   * itself\n   *\n   * See {@link module:twgl} for core functions\n   *\n   * @module twgl/programs\n   */\n\n  var error = utils.error;\n  var warn = utils.warn;\n\n  var FLOAT                         = 0x1406;\n  var FLOAT_VEC2                    = 0x8B50;\n  var FLOAT_VEC3                    = 0x8B51;\n  var FLOAT_VEC4                    = 0x8B52;\n  var INT                           = 0x1404;\n  var INT_VEC2                      = 0x8B53;\n  var INT_VEC3                      = 0x8B54;\n  var INT_VEC4                      = 0x8B55;\n  var BOOL                          = 0x8B56;\n  var BOOL_VEC2                     = 0x8B57;\n  var BOOL_VEC3                     = 0x8B58;\n  var BOOL_VEC4                     = 0x8B59;\n  var FLOAT_MAT2                    = 0x8B5A;\n  var FLOAT_MAT3                    = 0x8B5B;\n  var FLOAT_MAT4                    = 0x8B5C;\n  var SAMPLER_2D                    = 0x8B5E;\n  var SAMPLER_CUBE                  = 0x8B60;\n  var SAMPLER_3D                    = 0x8B5F;\n  var SAMPLER_2D_SHADOW             = 0x8B62;\n  var FLOAT_MAT2x3                  = 0x8B65;\n  var FLOAT_MAT2x4                  = 0x8B66;\n  var FLOAT_MAT3x2                  = 0x8B67;\n  var FLOAT_MAT3x4                  = 0x8B68;\n  var FLOAT_MAT4x2                  = 0x8B69;\n  var FLOAT_MAT4x3                  = 0x8B6A;\n  var SAMPLER_2D_ARRAY              = 0x8DC1;\n  var SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\n  var SAMPLER_CUBE_SHADOW           = 0x8DC5;\n  var UNSIGNED_INT                  = 0x1405;\n  var UNSIGNED_INT_VEC2             = 0x8DC6;\n  var UNSIGNED_INT_VEC3             = 0x8DC7;\n  var UNSIGNED_INT_VEC4             = 0x8DC8;\n  var INT_SAMPLER_2D                = 0x8DCA;\n  var INT_SAMPLER_3D                = 0x8DCB;\n  var INT_SAMPLER_CUBE              = 0x8DCC;\n  var INT_SAMPLER_2D_ARRAY          = 0x8DCF;\n  var UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\n  var UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\n  var UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\n  var UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\n  var TEXTURE_2D                    = 0x0DE1;\n  var TEXTURE_CUBE_MAP              = 0x8513;\n  var TEXTURE_3D                    = 0x806F;\n  var TEXTURE_2D_ARRAY              = 0x8C1A;\n\n  var typeMap = {};\n\n  /**\n   * Returns the corresponding bind point for a given sampler type\n   */\n  function getBindPointForSamplerType(gl, type) {\n    return typeMap[type].bindPoint;\n  }\n\n  // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n  // this code could be a lot smaller but that is sadly really slow (T_T)\n\n  function floatSetter(gl, location) {\n    return function(v) {\n      gl.uniform1f(location, v);\n    };\n  }\n\n  function floatArraySetter(gl, location) {\n    return function(v) {\n      gl.uniform1fv(location, v);\n    };\n  }\n\n  function floatVec2Setter(gl, location) {\n    return function(v) {\n      gl.uniform2fv(location, v);\n    };\n  }\n\n  function floatVec3Setter(gl, location) {\n    return function(v) {\n      gl.uniform3fv(location, v);\n    };\n  }\n\n  function floatVec4Setter(gl, location) {\n    return function(v) {\n      gl.uniform4fv(location, v);\n    };\n  }\n\n  function intSetter(gl, location) {\n    return function(v) {\n      gl.uniform1i(location, v);\n    };\n  }\n\n  function intArraySetter(gl, location) {\n    return function(v) {\n      gl.uniform1iv(location, v);\n    };\n  }\n\n  function intVec2Setter(gl, location) {\n    return function(v) {\n      gl.uniform2iv(location, v);\n    };\n  }\n\n  function intVec3Setter(gl, location) {\n    return function(v) {\n      gl.uniform3iv(location, v);\n    };\n  }\n\n  function intVec4Setter(gl, location) {\n    return function(v) {\n      gl.uniform4iv(location, v);\n    };\n  }\n\n  function uintSetter(gl, location) {\n    return function(v) {\n      gl.uniform1ui(location, v);\n    };\n  }\n\n  function uintArraySetter(gl, location) {\n    return function(v) {\n      gl.uniform1uiv(location, v);\n    };\n  }\n\n  function uintVec2Setter(gl, location) {\n    return function(v) {\n      gl.uniform2uiv(location, v);\n    };\n  }\n\n  function uintVec3Setter(gl, location) {\n    return function(v) {\n      gl.uniform3uiv(location, v);\n    };\n  }\n\n  function uintVec4Setter(gl, location) {\n    return function(v) {\n      gl.uniform4uiv(location, v);\n    };\n  }\n\n  function floatMat2Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix2fv(location, false, v);\n    };\n  }\n\n  function floatMat3Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix3fv(location, false, v);\n    };\n  }\n\n  function floatMat4Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix4fv(location, false, v);\n    };\n  }\n\n  function floatMat23Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix2x3fv(location, false, v);\n    };\n  }\n\n  function floatMat32Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix3x2fv(location, false, v);\n    };\n  }\n\n  function floatMat24Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix2x4fv(location, false, v);\n    };\n  }\n\n  function floatMat42Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix4x2fv(location, false, v);\n    };\n  }\n\n  function floatMat34Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix3x4fv(location, false, v);\n    };\n  }\n\n  function floatMat43Setter(gl, location) {\n    return function(v) {\n      gl.uniformMatrix4x3fv(location, false, v);\n    };\n  }\n\n  function samplerSetter(gl, type, unit, location) {\n    var bindPoint = getBindPointForSamplerType(gl, type);\n    return function(texture) {\n      gl.uniform1i(location, unit);\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(bindPoint, texture);\n    };\n  }\n\n  function samplerArraySetter(gl, type, unit, location, size) {\n    var bindPoint = getBindPointForSamplerType(gl, type);\n    var units = new Int32Array(size);\n    for (var ii = 0; ii < size; ++ii) {\n      units[ii] = unit + ii;\n    }\n\n    return function(textures) {\n      gl.uniform1iv(location, units);\n      textures.forEach(function(texture, index) {\n        gl.activeTexture(gl.TEXTURE0 + units[index]);\n        gl.bindTexture(bindPoint, texture);\n      });\n    };\n  }\n\n  typeMap[FLOAT]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\n  typeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  };\n  typeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  };\n  typeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  };\n  typeMap[INT]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\n  typeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    };\n  typeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    };\n  typeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    };\n  typeMap[UNSIGNED_INT]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\n  typeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   };\n  typeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   };\n  typeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   };\n  typeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\n  typeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    };\n  typeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    };\n  typeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    };\n  typeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 16, setter: floatMat2Setter,  };\n  typeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 36, setter: floatMat3Setter,  };\n  typeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  };\n  typeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 24, setter: floatMat23Setter, };\n  typeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, };\n  typeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 24, setter: floatMat32Setter, };\n  typeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, };\n  typeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 32, setter: floatMat42Setter, };\n  typeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 48, setter: floatMat43Setter, };\n  typeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n  typeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n  typeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\n  typeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n  typeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n  typeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n  typeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n  typeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n  typeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\n  typeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n  typeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n  typeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n  typeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\n  typeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n  typeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n\n  // make sure we don't see a global gl\n  var gl = undefined;  // eslint-disable-line\n\n  /**\n   * Error Callback\n   * @callback ErrorCallback\n   * @param {string} msg error message.\n   * @param {number} [lineOffset] amount to add to line number\n   * @memberOf module:twgl\n   */\n\n  function addLineNumbers(src, lineOffset) {\n    lineOffset = lineOffset || 0;\n    ++lineOffset;\n\n    return src.split(\"\\n\").map(function(line, ndx) {\n      return (ndx + lineOffset) + \": \" + line;\n    }).join(\"\\n\");\n  }\n\n  var spaceRE = /^[ \\t]*\\n/;\n\n  /**\n   * Loads a shader.\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n   * @param {string} shaderSource The shader source.\n   * @param {number} shaderType The type of shader.\n   * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n   * @return {WebGLShader} The created shader.\n   */\n  function loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n    var errFn = opt_errorCallback || error;\n    // Create the shader object\n    var shader = gl.createShader(shaderType);\n\n    // Remove the first end of line because WebGL 2.0 notrequirebecasebrowserifymessesups\n    // #version 300 es\n    // as the first line. No whitespace allowed before that line\n    // so\n    //\n    // <script>\n    // #version 300 es\n    // </script>\n    //\n    // Has one line before it which is invalid according to GLSL ES 3.00\n    //\n    var lineOffset = 0;\n    if (spaceRE.test(shaderSource)) {\n      lineOffset = 1;\n      shaderSource = shaderSource.replace(spaceRE, '');\n    }\n\n    // Load the shader source\n    gl.shaderSource(shader, shaderSource);\n\n    // Compile the shader\n    gl.compileShader(shader);\n\n    // Check the compile status\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      // Something went wrong during compilation; get the error\n      var lastError = gl.getShaderInfoLog(shader);\n      errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  /**\n   * Creates a program, attaches shaders, binds attrib locations, links the\n   * program and calls useProgram.\n   * @param {WebGLShader[]} shaders The shaders to attach\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {WebGLProgram?} the created program or null if error.\n   * @memberOf module:twgl/programs\n   */\n  function createProgram(\n      gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n    var errFn = opt_errorCallback || error;\n    var program = gl.createProgram();\n    shaders.forEach(function(shader) {\n      gl.attachShader(program, shader);\n    });\n    if (opt_attribs) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        gl.bindAttribLocation(\n            program,\n            opt_locations ? opt_locations[ndx] : ndx,\n            attrib);\n      });\n    }\n    gl.linkProgram(program);\n\n    // Check the link status\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n        // something went wrong with the link\n        var lastError = gl.getProgramInfoLog(program);\n        errFn(\"Error in program linking:\" + lastError);\n\n        gl.deleteProgram(program);\n        return null;\n    }\n    return program;\n  }\n\n  /**\n   * Loads a shader from a script tag.\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n   * @param {string} scriptId The id of the script tag.\n   * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n   *     be derived from the type of the script tag.\n   * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n   * @return {WebGLShader?} The created shader or null if error.\n   */\n  function createShaderFromScript(\n      gl, scriptId, opt_shaderType, opt_errorCallback) {\n    var shaderSource = \"\";\n    var shaderType;\n    var shaderScript = document.getElementById(scriptId);\n    if (!shaderScript) {\n      throw \"*** Error: unknown script element\" + scriptId;\n    }\n    shaderSource = shaderScript.text;\n\n    if (!opt_shaderType) {\n      if (shaderScript.type === \"x-shader/x-vertex\") {\n        shaderType = gl.VERTEX_SHADER;\n      } else if (shaderScript.type === \"x-shader/x-fragment\") {\n        shaderType = gl.FRAGMENT_SHADER;\n      } else if (shaderType !== gl.VERTEX_SHADER && shaderType !== gl.FRAGMENT_SHADER) {\n        throw \"*** Error: unknown shader type\";\n      }\n    }\n\n    return loadShader(\n        gl, shaderSource, opt_shaderType ? opt_shaderType : shaderType,\n        opt_errorCallback);\n  }\n\n  var defaultShaderType = [\n    \"VERTEX_SHADER\",\n    \"FRAGMENT_SHADER\",\n  ];\n\n  /**\n   * Creates a program from 2 script tags.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {string[]} shaderScriptIds Array of ids of the script\n   *        tags for the shaders. The first is assumed to be the\n   *        vertex shader, the second the fragment shader.\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {WebGLProgram} The created program.\n   * @memberOf module:twgl/programs\n   */\n  function createProgramFromScripts(\n      gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n    var shaders = [];\n    for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n      var shader = createShaderFromScript(\n          gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], opt_errorCallback);\n      if (!shader) {\n        return null;\n      }\n      shaders.push(shader);\n    }\n    return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\n  }\n\n  /**\n   * Creates a program from 2 sources.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {string[]} shaderSourcess Array of sources for the\n   *        shaders. The first is assumed to be the vertex shader,\n   *        the second the fragment shader.\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {WebGLProgram} The created program.\n   * @memberOf module:twgl/programs\n   */\n  function createProgramFromSources(\n      gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n    var shaders = [];\n    for (var ii = 0; ii < shaderSources.length; ++ii) {\n      var shader = loadShader(\n          gl, shaderSources[ii], gl[defaultShaderType[ii]], opt_errorCallback);\n      if (!shader) {\n        return null;\n      }\n      shaders.push(shader);\n    }\n    return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\n  }\n\n  /**\n   * Creates setter functions for all uniforms of a shader\n   * program.\n   *\n   * @see {@link module:twgl.setUniforms}\n   *\n   * @param {WebGLProgram} program the program to create setters for.\n   * @returns {Object.<string, function>} an object with a setter by name for each uniform\n   * @memberOf module:twgl/programs\n   */\n  function createUniformSetters(gl, program) {\n    var textureUnit = 0;\n\n    /**\n     * Creates a setter for a uniform of the given program with it's\n     * location embedded in the setter.\n     * @param {WebGLProgram} program\n     * @param {WebGLUniformInfo} uniformInfo\n     * @returns {function} the created setter.\n     */\n    function createUniformSetter(program, uniformInfo) {\n      var location = gl.getUniformLocation(program, uniformInfo.name);\n      var isArray = (uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\");\n      var type = uniformInfo.type;\n      var typeInfo = typeMap[type];\n      if (!typeInfo) {\n        throw (\"unknown type: 0x\" + type.toString(16)); // we should never get here.\n      }\n      if (typeInfo.bindPoint) {\n        // it's a sampler\n        var unit = textureUnit;\n        textureUnit += uniformInfo.size;\n\n        if (isArray) {\n          return typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n        } else {\n          return typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n        }\n      } else {\n        if (typeInfo.arraySetter && isArray) {\n          return typeInfo.arraySetter(gl, location);\n        } else {\n          return typeInfo.setter(gl, location);\n        }\n      }\n    }\n\n    var uniformSetters = { };\n    var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var ii = 0; ii < numUniforms; ++ii) {\n      var uniformInfo = gl.getActiveUniform(program, ii);\n      if (!uniformInfo) {\n        break;\n      }\n      var name = uniformInfo.name;\n      // remove the array suffix.\n      if (name.substr(-3) === \"[0]\") {\n        name = name.substr(0, name.length - 3);\n      }\n      var setter = createUniformSetter(program, uniformInfo);\n      uniformSetters[name] = setter;\n    }\n    return uniformSetters;\n  }\n\n  /**\n   * @typedef {Object} UniformData\n   * @property {number} type The WebGL type enum for this uniform\n   * @property {number} size The number of elements for this uniform\n   * @property {number} blockNdx The block index this uniform appears in\n   * @property {number} offset The byte offset in the block for this uniform's value\n   * @memberOf module:twgl\n   */\n\n  /**\n   * The specification for one UniformBlockObject\n   *\n   * @typedef {Object} BlockSpec\n   * @property {number} index The index of the block.\n   * @property {number} size The size in bytes needed for the block\n   * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n   *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n   * @property {bool} usedByVertexShader Self explanitory\n   * @property {bool} usedByFragmentShader Self explanitory\n   * @property {bool} used Self explanitory\n   * @memberOf module:twgl\n   */\n\n  /**\n   * A `UniformBlockSpec` represents the data needed to create and bind\n   * UniformBlockObjects for a given program\n   *\n   * @typedef {Object} UniformBlockSpec\n   * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n   * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Creates a UniformBlockSpec for the given program.\n   *\n   * A UniformBlockSpec represents the data needed to create and bind\n   * UniformBlockObjects\n   *\n   * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n   * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n   * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n   * @memberOf module:twgl/programs\n   */\n  function createUniformBlockSpecFromProgram(gl, program) {\n    var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    var uniformData = [];\n    var uniformIndices = [];\n\n    for (var ii = 0; ii < numUniforms; ++ii) {\n      uniformIndices.push(ii);\n      uniformData.push({});\n      var uniformInfo = gl.getActiveUniform(program, ii);\n      if (!uniformInfo) {\n        break;\n      }\n      // REMOVE [0]?\n      uniformData[ii].name = uniformInfo.name;\n    }\n\n    [\n      [ \"UNIFORM_TYPE\", \"type\" ],\n      [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n      [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n      [ \"UNIFORM_OFFSET\", \"offset\", ],\n    ].forEach(function(pair) {\n      var pname = pair[0];\n      var key = pair[1];\n      gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n        uniformData[ndx][key] = value;\n      });\n    });\n\n    var blockSpecs = {};\n\n    var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n    for (ii = 0; ii < numUniformBlocks; ++ii) {\n      var name = gl.getActiveUniformBlockName(program, ii);\n      var blockSpec = {\n        index: ii,\n        usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n        usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n        size: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n        uniformIndices: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n      };\n      blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n      blockSpecs[name] = blockSpec;\n    }\n\n    return {\n      blockSpecs: blockSpecs,\n      uniformData: uniformData,\n    };\n  }\n\n  var arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\n  /**\n   * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n   * and a corresponding WebGLBuffer to hold those values on the GPU\n   *\n   * @typedef {Object} UniformBlockInfo\n   * @property {string} name The name of the block\n   * @property {ArrayBuffer} array The array buffer that contains the uniform values\n   * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n   *    inspecting the contents of the buffer in the debugger.\n   * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n   * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n   *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n   *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n   *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n   *   `Int32Array` view, etc.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Creates a `UniformBlockInfo` for the specified block\n   *\n   * Note: **A warning is printed to the console of the blockName makes no existing blocks and a dummy\n   * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n   * it is common to comment out large portions of a shader or for example set\n   * the final output to a constant. When that happens blocks get optimized out.\n   * If this function did not create dummy blocks your code would crash when debugging.\n   *\n   * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n   * @param {WebGLProgram} program A WebGLProgram\n   * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n   *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n   * @param {string} blockName The name of the block.\n   * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n   * @memberOf module:twgl/programs\n   */\n  function createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n    var blockSpecs = uniformBlockSpec.blockSpecs;\n    var uniformData = uniformBlockSpec.uniformData;\n    var blockSpec = blockSpecs[blockName];\n    if (!blockSpec) {\n      warn(\"no uniform block object named:\", blockName);\n      return {\n        name: blockName,\n        uniforms: {},\n      };\n    }\n    var array = new ArrayBuffer(blockSpec.size);\n    var buffer = gl.createBuffer();\n    var uniformBufferIndex = blockSpec.index;\n    gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n    gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n    var prefix = blockName + \".\";\n    if (arraySuffixRE.test(prefix)) {\n      prefix = prefix.replace(arraySuffixRE, \".\");\n    }\n    var uniforms = {};\n    blockSpec.uniformIndices.forEach(function(uniformNdx) {\n      var data = uniformData[uniformNdx];\n      var typeInfo = typeMap[data.type];\n      var Type = typeInfo.Type;\n      var length = data.size * typeInfo.size;\n      var name = data.name;\n      if (name.substr(0, prefix.length) === prefix) {\n        name = name.substr(prefix.length);\n      }\n      uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n    });\n    return {\n      name: blockName,\n      array: array,\n      asFloat: new Float32Array(array),  // for debugging\n      buffer: buffer,\n      uniforms: uniforms,\n    };\n  }\n\n  /**\n   * Creates a `UniformBlockInfo` for the specified block\n   *\n   * Note: **A warning is printed to the console of the blockName makes no existing blocks and a dummy\n   * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n   * it is common to comment out large portions of a shader or for example set\n   * the final output to a constant. When that happens blocks get optimized out.\n   * If this function did not create dummy blocks your code would crash when debugging.\n   *\n   * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n   * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n   *     as returned from {@link module:twgl.createProgramInfo}\n   * @param {string} blockName The name of the block.\n   * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n   * @memberOf module:twgl/programs\n   */\n  function createUniformBlockInfo(gl, programInfo, blockName) {\n    return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n  }\n\n  /**\n   * Binds a unform block to the matching uniform block point.\n   * Matches by blocks by name so blocks must have the same name not just the same\n   * structure.\n   *\n   * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n   * call {@link module:twgl.setUniformBlock} instead.\n   *\n   * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n   * @param {{module:twgl.ProgramInfo|module:twgl.UniformBlockSpec} programInfo a `ProgramInfo`\n   *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n   *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n   * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n   *     {@link module:twgl.createUniformBlockInfo}.\n   * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n   *     no buffer is bound.\n   * @memberOf module:twgl/programs\n   */\n  function bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n    var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n    var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n    if (blockSpec) {\n      var bufferBindIndex = blockSpec.index;\n      gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, 0, uniformBlockInfo.array.byteLength);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Uploads the current uniform values to the corresponding WebGLBuffer\n   * and binds that buffer to the program's corresponding bind point for the uniform block object.\n   *\n   * If you haven't changed any values and you only need to bind the uniform block object\n   * call {@link module:twgl.bindUniformBlock} instead.\n   *\n   * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n   * @param {{module:twgl.ProgramInfo|module:twgl.UniformBlockSpec} programInfo a `ProgramInfo`\n   *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n   *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n   * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n   *     {@link module:twgl.createUniformBlockInfo}.\n   * @memberOf module:twgl/programs\n   */\n  function setUniformBlock(gl, programInfo, uniformBlockInfo) {\n    if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n      gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n    }\n  }\n\n  /**\n   * Sets values of a uniform block object\n   *\n   * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n   * @param {Object.<string, ???> values A uniform name to value map where the value is correct for the given\n   *    type of uniform. So for example given a block like\n   *\n   *       uniform SomeBlock {\n   *         float someFloat;\n   *         vec2 someVec2;\n   *         vec3 someVec3Array[2];\n   *         int someInt;\n   *       }\n   *\n   *  You can set the values of the uniform block with\n   *\n   *       twgl.setBlockUniforms(someBlockInfo, {\n   *          someFloat: 12.3,\n   *          someVec2: [1, 2],\n   *          someVec3Array: [1, 2, 3, 4, 5, 6],\n   *          someInt: 5,\n   *       }\n   *\n   *  Arrays can be JavaScript arrays or typed arrays\n   *\n   *  Any name that doesn't match will be ignored\n   * @memberOf module:twgl/programs\n   */\n  function setBlockUniforms(uniformBlockInfo, values) {\n    var uniforms = uniformBlockInfo.uniforms;\n    for (var name in values) {\n      var array = uniforms[name];\n      if (array) {\n        var value = values[name];\n        if (value.length) {\n          array.set(value);\n        } else {\n          array[0] = value;\n        }\n      }\n    }\n  }\n\n  /**\n   * Set uniforms and binds related textures.\n   *\n   * example:\n   *\n   *     var programInfo = createProgramInfo(\n   *         gl, [\"some-vs\", \"some-fs\"]);\n   *\n   *     var tex1 = gl.createTexture();\n   *     var tex2 = gl.createTexture();\n   *\n   *     ... assume we setup the textures with data ...\n   *\n   *     var uniforms = {\n   *       u_someSampler: tex1,\n   *       u_someOtherSampler: tex2,\n   *       u_someColor: [1,0,0,1],\n   *       u_somePosition: [0,1,1],\n   *       u_someMatrix: [\n   *         1,0,0,0,\n   *         0,1,0,0,\n   *         0,0,1,0,\n   *         0,0,0,0,\n   *       ],\n   *     };\n   *\n   *     gl.useProgram(program);\n   *\n   * This will automatically bind the textures AND set the\n   * uniforms.\n   *\n   *     twgl.setUniforms(programInfo, uniforms);\n   *\n   * For the example above it is equivalent to\n   *\n   *     var texUnit = 0;\n   *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n   *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n   *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n   *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n   *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n   *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n   *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n   *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n   *     gl.uniformMatrix4fv(u_someMatrix, false, [\n   *         1,0,0,0,\n   *         0,1,0,0,\n   *         0,0,1,0,\n   *         0,0,0,0,\n   *       ]);\n   *\n   * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n   *\n   *     var uniforms = {\n   *       u_someSampler: tex1,\n   *       u_someOtherSampler: tex2,\n   *     };\n   *\n   *     var moreUniforms {\n   *       u_someColor: [1,0,0,1],\n   *       u_somePosition: [0,1,1],\n   *       u_someMatrix: [\n   *         1,0,0,0,\n   *         0,1,0,0,\n   *         0,0,1,0,\n   *         0,0,0,0,\n   *       ],\n   *     };\n   *\n   *     twgl.setUniforms(programInfo, uniforms);\n   *     twgl.setUniforms(programInfo, moreUniforms);\n   *\n   * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n   *        `createUniformSetters`.\n   * @param {Object.<string, ?>} values an object with values for the\n   *        uniforms.\n   *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n   *\n   *     var sharedUniforms = {\n   *       u_fogNear: 10,\n   *       u_projection: ...\n   *       ...\n   *     };\n   *\n   *     var localUniforms = {\n   *       u_world: ...\n   *       u_diffuseColor: ...\n   *     };\n   *\n   *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n   *\n   *     // is the same as\n   *\n   *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n   *\n   *     // is the same as\n   *\n   *     twgl.setUniforms(programInfo, sharedUniforms);\n   *     twgl.setUniforms(programInfo, localUniforms};\n   *\n   * @memberOf module:twgl/programs\n   */\n  function setUniforms(setters, values) {  // eslint-disable-line\n    var actualSetters = setters.uniformSetters || setters;\n    var numArgs = arguments.length;\n    for (var andx = 1; andx < numArgs; ++andx) {\n      var vals = arguments[andx];\n      if (Array.isArray(vals)) {\n        var numValues = vals.length;\n        for (var ii = 0; ii < numValues; ++ii) {\n          setUniforms(actualSetters, vals[ii]);\n        }\n      } else {\n        for (var name in vals) {\n          var setter = actualSetters[name];\n          if (setter) {\n            setter(vals[name]);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Creates setter functions for all attributes of a shader\n   * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n   *\n   * @see {@link module:twgl.setAttributes} for example\n   * @param {WebGLProgram} program the program to create setters for.\n   * @return {Object.<string, function>} an object with a setter for each attribute by name.\n   * @memberOf module:twgl/programs\n   */\n  function createAttributeSetters(gl, program) {\n    var attribSetters = {\n    };\n\n    function createAttribSetter(index) {\n      return function(b) {\n          gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n          gl.enableVertexAttribArray(index);\n          gl.vertexAttribPointer(\n              index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n        };\n    }\n\n    var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (var ii = 0; ii < numAttribs; ++ii) {\n      var attribInfo = gl.getActiveAttrib(program, ii);\n      if (!attribInfo) {\n        break;\n      }\n      var index = gl.getAttribLocation(program, attribInfo.name);\n      attribSetters[attribInfo.name] = createAttribSetter(index);\n    }\n\n    return attribSetters;\n  }\n\n  /**\n   * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n   *\n   * Example:\n   *\n   *     var program = createProgramFromScripts(\n   *         gl, [\"some-vs\", \"some-fs\");\n   *\n   *     var attribSetters = createAttributeSetters(program);\n   *\n   *     var positionBuffer = gl.createBuffer();\n   *     var texcoordBuffer = gl.createBuffer();\n   *\n   *     var attribs = {\n   *       a_position: {buffer: positionBuffer, numComponents: 3},\n   *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n   *     };\n   *\n   *     gl.useProgram(program);\n   *\n   * This will automatically bind the buffers AND set the\n   * attributes.\n   *\n   *     setAttributes(attribSetters, attribs);\n   *\n   * Properties of attribs. For each attrib you can add\n   * properties:\n   *\n   * *   type: the type of data in the buffer. Default = gl.FLOAT\n   * *   normalize: whether or not to normalize the data. Default = false\n   * *   stride: the stride. Default = 0\n   * *   offset: offset into the buffer. Default = 0\n   *\n   * For example if you had 3 value float positions, 2 value\n   * float texcoord and 4 value uint8 colors you'd setup your\n   * attribs like this\n   *\n   *     var attribs = {\n   *       a_position: {buffer: positionBuffer, numComponents: 3},\n   *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n   *       a_color: {\n   *         buffer: colorBuffer,\n   *         numComponents: 4,\n   *         type: gl.UNSIGNED_BYTE,\n   *         normalize: true,\n   *       },\n   *     };\n   *\n   * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n   * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n   * @memberOf module:twgl/programs\n   * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n   */\n  function setAttributes(setters, buffers) {\n    for (var name in buffers) {\n      var setter = setters[name];\n      if (setter) {\n        setter(buffers[name]);\n      }\n    }\n  }\n\n  /**\n   * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n   *\n   * Example:\n   *\n   *     var programInfo = createProgramInfo(\n   *         gl, [\"some-vs\", \"some-fs\");\n   *\n   *     var arrays = {\n   *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *     };\n   *\n   *     var bufferInfo = createBufferInfoFromArrays(gl, arrays);\n   *\n   *     gl.useProgram(programInfo.program);\n   *\n   * This will automatically bind the buffers AND set the\n   * attributes.\n   *\n   *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n   *\n   * For the example above it is equivilent to\n   *\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n   *     gl.enableVertexAttribArray(a_positionLocation);\n   *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n   *     gl.enableVertexAttribArray(a_texcoordLocation);\n   *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n   * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n   * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n   *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n   * @memberOf module:twgl/programs\n   */\n  function setBuffersAndAttributes(gl, programInfo, buffers) {\n    if (buffers.vertexArrayObject) {\n      gl.bindVertexArray(buffers.vertexArrayObject);\n    } else {\n      setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n      if (buffers.indices) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} ProgramInfo\n   * @property {WebGLProgram} program A shader program\n   * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n   * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Creates a ProgramInfo from an existing program.\n   *\n   * A ProgramInfo contains\n   *\n   *     programInfo = {\n   *        program: WebGLProgram,\n   *        uniformSetters: object of setters as returned from createUniformSetters,\n   *        attribSetters: object of setters as returned from createAttribSetters,\n   *     }\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {WebGLProgram} program an existing WebGLProgram.\n   * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n   * @memberOf module:twgl/programs\n   */\n  function createProgramInfoFromProgram(gl, program) {\n    var uniformSetters = createUniformSetters(gl, program);\n    var attribSetters = createAttributeSetters(gl, program);\n    var programInfo = {\n      program: program,\n      uniformSetters: uniformSetters,\n      attribSetters: attribSetters,\n    };\n\n    if (utils.isWebGL2(gl)) {\n      programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    }\n\n    return programInfo;\n  }\n\n  /**\n   * Creates a ProgramInfo from 2 sources.\n   *\n   * A ProgramInfo contains\n   *\n   *     programInfo = {\n   *        program: WebGLProgram,\n   *        uniformSetters: object of setters as returned from createUniformSetters,\n   *        attribSetters: object of setters as returned from createAttribSetters,\n   *     }\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {string[]} shaderSourcess Array of sources for the\n   *        shaders or ids. The first is assumed to be the vertex shader,\n   *        the second the fragment shader.\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {module:twgl.ProgramInfo?} The created ProgramInfo.\n   * @memberOf module:twgl/programs\n   */\n  function createProgramInfo(\n      gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n    shaderSources = shaderSources.map(function(source) {\n      var script = document.getElementById(source);\n      return script ? script.text : source;\n    });\n    var program = createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback);\n    if (!program) {\n      return null;\n    }\n    return createProgramInfoFromProgram(gl, program);\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"createAttributeSetters\": createAttributeSetters,\n\n    \"createProgram\": createProgram,\n    \"createProgramFromScripts\": createProgramFromScripts,\n    \"createProgramFromSources\": createProgramFromSources,\n    \"createProgramInfo\": createProgramInfo,\n    \"createProgramInfoFromProgram\": createProgramInfoFromProgram,\n    \"createUniformSetters\": createUniformSetters,\n    \"createUniformBlockSpecFromProgram\": createUniformBlockSpecFromProgram,\n    \"createUniformBlockInfoFromProgram\": createUniformBlockInfoFromProgram,\n    \"createUniformBlockInfo\": createUniformBlockInfo,\n\n    \"setAttributes\": setAttributes,\n    \"setBuffersAndAttributes\": setBuffersAndAttributes,\n    \"setUniforms\": setUniforms,\n    \"setUniformBlock\": setUniformBlock,\n    \"setBlockUniforms\": setBlockUniforms,\n    \"bindUniformBlock\": bindUniformBlock,\n  };\n\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/draw',[\n    './programs',\n  ], function(\n    programs) {\n  \n\n  /**\n   * Drawing related functions\n   *\n   * For backward compatibily they are available at both `twgl.draw` and `twgl`\n   * itself\n   *\n   * See {@link module:twgl} for core functions\n   *\n   * @module twgl/draw\n   */\n\n  /**\n   * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n   *\n   * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n   * but calling this means if you switch from indexed data to non-indexed\n   * data you don't have to remember to update your draw call.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {enum} type eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...)\n   * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n   *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n   * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n   * @param {number} [offset] An optional offset. Defaults to 0.\n   * @memberOf module:twgl/draw\n   */\n  function drawBufferInfo(gl, type, bufferInfo, count, offset) {\n    var indices = bufferInfo.indices;\n    var elementType = bufferInfo.elementType;\n    var numElements = count === undefined ? bufferInfo.numElements : count;\n    offset = offset === undefined ? 0 : offset;\n    if (elementType || indices) {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n\n  /**\n   * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n   *\n   * You need either a `BufferInfo` or a `VertexArrayInfo`.\n   *\n   * @typedef {Object} DrawObject\n   * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n   * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n   * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n   * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n   * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n   * @property {Object<string, ?>} uniforms The values for the uniforms.\n   *   You can pass multiple objects by putting them in an array. For example\n   *\n   *     var sharedUniforms = {\n   *       u_fogNear: 10,\n   *       u_projection: ...\n   *       ...\n   *     };\n   *\n   *     var localUniforms = {\n   *       u_world: ...\n   *       u_diffuseColor: ...\n   *     };\n   *\n   *     var drawObj = {\n   *       ...\n   *       uniforms: [sharedUniforms, localUniforms],\n   *     };\n   *\n   * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n   * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Draws a list of objects\n   * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n   * @memberOf module:twgl/draw\n   */\n  function drawObjectList(gl, objectsToDraw) {\n    var lastUsedProgramInfo = null;\n    var lastUsedBufferInfo = null;\n\n    objectsToDraw.forEach(function(object) {\n      if (object.active === false) {\n        return;\n      }\n\n      var programInfo = object.programInfo;\n      var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n      var bindBuffers = false;\n\n      if (programInfo !== lastUsedProgramInfo) {\n        lastUsedProgramInfo = programInfo;\n        gl.useProgram(programInfo.program);\n\n        // We have to rebind buffers when changing programs because we\n        // only bind buffers the program uses. So if 2 programs use the same\n        // bufferInfo but the 1st one uses only positions the when the\n        // we switch to the 2nd one some of the attributes will not be on.\n        bindBuffers = true;\n      }\n\n      // Setup all the needed attributes.\n      if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n        if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n          gl.bindVertexArray(null);\n        }\n        lastUsedBufferInfo = bufferInfo;\n        programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n      }\n\n      // Set the uniforms.\n      programs.setUniforms(programInfo, object.uniforms);\n\n      // Draw\n      drawBufferInfo(gl, object.type || gl.TRIANGLES, bufferInfo, object.count, object.offset);\n    });\n\n    if (lastUsedBufferInfo.vertexArrayObject) {\n      gl.bindVertexArray(null);\n    }\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"drawBufferInfo\": drawBufferInfo,\n    \"drawObjectList\": drawObjectList,\n  };\n\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/textures',[\n    './typedarrays',\n    './utils',\n  ], function(\n    typedArrays,\n    utils) {\n  \n\n  /**\n   * Low level texture related functions\n   *\n   * You should generally not need to use these functions. They are provided\n   * for those cases where you're doing something out of the ordinary\n   * and you need lower level access.\n   *\n   * For backward compatibily they are available at both `twgl.textures` and `twgl`\n   * itself\n   *\n   * See {@link module:twgl} for core functions\n   *\n   * @module twgl/textures\n   */\n\n  // make sure we don't see a global gl\n  var gl = undefined;  // eslint-disable-line\n  var defaults = {\n    textureColor: new Uint8Array([128, 192, 255, 255]),\n    textureOptions: {},\n    crossOrigin: undefined,\n  };\n  var isArrayBuffer = typedArrays.isArrayBuffer;\n\n  /* PixelFormat */\n  var ALPHA                          = 0x1906;\n  var RGB                            = 0x1907;\n  var RGBA                           = 0x1908;\n  var LUMINANCE                      = 0x1909;\n  var LUMINANCE_ALPHA                = 0x190A;\n\n  /* TextureWrapMode */\n  var REPEAT                         = 0x2901;  // eslint-disable-line\n  var MIRRORED_REPEAT                = 0x8370;  // eslint-disable-line\n\n  /* TextureMagFilter */\n  var NEAREST                        = 0x2600;  // eslint-disable-line\n\n  /* TextureMinFilter */\n  var NEAREST_MIPMAP_NEAREST         = 0x2700;  // eslint-disable-line\n  var LINEAR_MIPMAP_NEAREST          = 0x2701;  // eslint-disable-line\n  var NEAREST_MIPMAP_LINEAR          = 0x2702;  // eslint-disable-line\n  var LINEAR_MIPMAP_LINEAR           = 0x2703;  // eslint-disable-line\n\n  /**\n   * Sets the default texture color.\n   *\n   * The default texture color is used when loading textures from\n   * urls. Because the URL will be loaded async we'd like to be\n   * able to use the texture immediately. By putting a 1x1 pixel\n   * color in the texture we can start using the texture before\n   * the URL has loaded.\n   *\n   * @param {number[]} color Array of 4 values in the range 0 to 1\n   * @deprecated see {@link module:twgl.setDefaults}\n   * @memberOf module:twgl/textures\n   */\n  function setDefaultTextureColor(color) {\n    defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n  }\n\n  function setDefaults(newDefaults) {\n    utils.copyExistingProperties(newDefaults, defaults);\n    if (newDefaults.textureColor) {\n      setDefaultTextureColor(newDefaults.textureColor);\n    }\n  }\n\n  /**\n   * Gets a string for gl enum\n   *\n   * Note: Several enums are the same. Without more\n   * context (which function) it's impossible to always\n   * give the correct enum.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {number} value the value of the enum you want to look up.\n   */\n  var glEnumToString = (function() {\n    var enums;\n\n    function init(gl) {\n      if (!enums) {\n        enums = {};\n        Object.keys(gl).forEach(function(key) {\n          if (typeof gl[key] === 'number') {\n            enums[gl[key]] = key;\n          }\n        });\n      }\n    }\n\n    return function glEnumToString(gl, value) {\n      init();\n      return enums[value] || (\"0x\" + value.toString(16));\n    };\n  }());\n\n  /**\n   * A function to generate the source for a texture.\n   * @callback TextureFunc\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {module:twgl.TextureOptions} options the texture options\n   * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Texture options passed to most texture functions. Each function will use whatever options\n   * are appropriate for its needs. This lets you pass the same options to all functions.\n   *\n   * @typedef {Object} TextureOptions\n   * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n   * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n   * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n   * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n   *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n   * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n   * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n   * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBuffer. If `src`\n   *     is ArrayBuffer defaults to type that matches ArrayBuffer type.\n   * @property {number} [wrap] Texture wrapping for both S and T. Defaults to `gl.REPEAT` for 2D and `gl.CLAMP_TO_EDGE` for cube\n   * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n   * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n   * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n   * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n   *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n   *     the current setting for specific textures.\n   * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n   *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n   *     the current setting for specific textures.\n   * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n   *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n   *     the current setting for specific textures.\n   * @property {(number[]|ArrayBuffer)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n   *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n   *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n   * @property {boolean} [auto] If not `false` then texture working filtering is set automatically for non-power of 2 images and\n   *    mips are generated for power of 2 images.\n   * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n   *\n   *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n   *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n   *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n   *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n   *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n   *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n   *\n   * @property {(number[]|ArrayBuffer|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n   *\n   *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n   *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n   *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n   *    The pieces will be uploaded in `cubeFaceOrder`\n   *\n   *    If `string[]` then it must have 6 entries, one for each face of a cube map. Target must be `gl.TEXTURE_CUBE_MAP`.\n   *\n   *    If `HTMLElement` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n   *    `HTMLCanvasElement`, `HTMLVideoElement`.\n   *\n   *    If `number[]` or `ArrayBuffer` it's assumed to be data for a texture. If `width` or `height` is\n   *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponets`\n   *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n   *    by 6. Then\n   *\n   *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n   *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n   *\n   *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n   *\n   * If `number[]` will be converted to `type`.\n   *\n   * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n   * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n   * an array etc...\n   *\n   * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n   *\n   * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n   *    default: undefined. Also see {@link module:twgl.setDefaults}.\n   *\n   * @memberOf module:twgl\n   */\n\n  // NOTE: While querying GL is considered slow it's not remotely as slow\n  // as uploading a texture. On top of that you're unlikely to call this in\n  // a perf critical loop. Even if upload a texture every frame that's unlikely\n  // to be more than 1 or 2 textures a frame. In other words, the benefits of\n  // making the API easy to use outweigh any supposed perf benefits\n  var lastPackState = {};\n\n  /**\n   * Saves any packing state that will be set based on the options.\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   */\n  function savePackState(gl, options) {\n    if (options.colorspaceConversion !== undefined) {\n      lastPackState.colorSpaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    }\n    if (options.premultiplyAlpha !== undefined) {\n      lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    }\n    if (options.flipY !== undefined) {\n      lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    }\n  }\n\n  /**\n   * Restores any packing state that was set based on the options.\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   */\n  function restorePackState(gl, options) {\n    if (options.colorspaceConversion !== undefined) {\n      gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorSpaceConversion);\n    }\n    if (options.premultiplyAlpha !== undefined) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n    }\n    if (options.flipY !== undefined) {\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n    }\n  }\n\n  /**\n   * Sets the texture parameters of a texture.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   *   This is often the same options you passed in when you created the texture.\n   * @memberOf module:twgl/textures\n   */\n  function setTextureParameters(gl, tex, options) {\n    var target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture(target, tex);\n    if (options.min) {\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, options.min);\n    }\n    if (options.mag) {\n      gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, options.mag);\n    }\n    if (options.wrap) {\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, options.wrap);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, options.wrap);\n    }\n    if (options.wrapS) {\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, options.wrapS);\n    }\n    if (options.wrapT) {\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, options.wrapT);\n    }\n  }\n\n  /**\n   * Makes a 1x1 pixel\n   * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n   * @param {(number[]|ArrayBuffer)} [color] The color using 0-1 values\n   * @return {Uint8Array} Unit8Array with color.\n   */\n  function make1Pixel(color) {\n    color = color || defaults.textureColor;\n    if (isArrayBuffer(color)) {\n      return color;\n    }\n    return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n  }\n\n  /**\n   * Returns true if value is power of 2\n   * @param {number} value number to check.\n   * @return true if value is power of 2\n   */\n  function isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n  }\n\n  /**\n   * Sets filtering or generates mips for texture based on width or height\n   * If width or height is not passed in uses `options.width` and//or `options.height`\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n   *   This is often the same options you passed in when you created the texture.\n   * @param {number} [width] width of texture\n   * @param {number} [height] height of texture\n   * @memberOf module:twgl/textures\n   */\n  function setTextureFilteringForSize(gl, tex, options, width, height) {\n    options = options || defaults.textureOptions;\n    var target = options.target || gl.TEXTURE_2D;\n    width = width || options.width;\n    height = height || options.height;\n    gl.bindTexture(target, tex);\n    if (!isPowerOf2(width) || !isPowerOf2(height)) {\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    } else {\n      gl.generateMipmap(target);\n    }\n  }\n\n  /**\n   * Gets an array of cubemap face enums\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   *   This is often the same options you passed in when you created the texture.\n   * @return {number[]} cubemap face enums\n   */\n  function getCubeFaceOrder(gl, options) {\n    options = options || {};\n    return options.cubeFaceOrder || [\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n      ];\n  }\n\n  /**\n   * @typedef {Object} FaceInfo\n   * @property {number} face gl enum for texImage2D\n   * @property {number} ndx face index (0 - 5) into source data\n   * @ignore\n   */\n\n  /**\n   * Gets an array of FaceInfos\n   * There's a bug in some NVidia drivers that will crash the driver if\n   * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n   * the user's desired order from his faces to WebGL and make sure we\n   * do the faces in WebGL order\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n   *    it's needed internally to sort the array of `ndx` properties by `face`.\n   */\n  function getCubeFacesWithNdx(gl, options) {\n    var faces = getCubeFaceOrder(gl, options);\n    // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n    var facesWithNdx = faces.map(function(face, ndx) {\n      return { face: face, ndx: ndx };\n    });\n    facesWithNdx.sort(function(a, b) {\n      return a.face - b.face;\n    });\n    return facesWithNdx;\n  }\n\n  /**\n   * Set a texture from the contents of an element. Will also set\n   * texture filtering or generate mips based on the dimensions of the element\n   * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n   * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {HTMLElement} element a canvas, img, or video element.\n   * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n   *   This is often the same options you passed in when you created the texture.\n   * @memberOf module:twgl/textures\n   * @kind function\n   */\n  var setTextureFromElement = function() {\n    var ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    return function setTextureFromElement(gl, tex, element, options) {\n      options = options || defaults.textureOptions;\n      var target = options.target || gl.TEXTURE_2D;\n      var width = element.width;\n      var height = element.height;\n      var format = options.format || gl.RGBA;\n      var type = options.type || gl.UNSIGNED_BYTE;\n      savePackState(gl, options);\n      gl.bindTexture(target, tex);\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        // guess the parts\n        var imgWidth  = element.width;\n        var imgHeight = element.height;\n        var size;\n        var slices;\n        if (imgWidth / 6 === imgHeight) {\n          // It's 6x1\n          size = imgHeight;\n          slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n        } else if (imgHeight / 6 === imgWidth) {\n          // It's 1x6\n          size = imgWidth;\n          slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n        } else if (imgWidth / 3 === imgHeight / 2) {\n          // It's 3x2\n          size = imgWidth / 3;\n          slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n        } else if (imgWidth / 2 === imgHeight / 3) {\n          // It's 2x3\n          size = imgWidth / 2;\n          slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n        } else {\n          throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n        }\n        ctx.canvas.width = size;\n        ctx.canvas.height = size;\n        width = size;\n        height = size;\n        getCubeFacesWithNdx(gl, options).forEach(function(f) {\n          var xOffset = slices[f.ndx * 2 + 0] * size;\n          var yOffset = slices[f.ndx * 2 + 1] * size;\n          ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n          gl.texImage2D(f.face, 0, format, format, type, ctx.canvas);\n        });\n        // Free up the canvas memory\n        ctx.canvas.width = 1;\n        ctx.canvas.height = 1;\n      } else {\n        gl.texImage2D(target, 0, format, format, type, element);\n      }\n      restorePackState(gl, options);\n      if (options.auto !== false) {\n        setTextureFilteringForSize(gl, tex, options, width, height);\n      }\n      setTextureParameters(gl, tex, options);\n    };\n  }();\n\n  function noop() {\n  }\n\n  /**\n   * Loads an image\n   * @param {string} url url to image\n   * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n   *     if there was an error\n   * @return {HTMLImageElement} the image being loaded.\n   */\n  function loadImage(url, crossOrigin, callback) {\n    callback = callback || noop;\n    var img = new Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    }\n\n    function onError() {\n      var msg = \"couldn't load image: \" + url;\n      utils.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    }\n\n    function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    }\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  }\n\n  /**\n   * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n   * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n   *   This is often the same options you passed in when you created the texture.\n   * @memberOf module:twgl/textures\n   */\n  function setTextureTo1PixelColor(gl, tex, options) {\n    options = options || defaults.textureOptions;\n    var target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture(target, tex);\n    if (options.color === false) {\n      return;\n    }\n    // Assume it's a URL\n    // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n    var color = make1Pixel(options.color);\n    if (target === gl.TEXTURE_CUBE_MAP) {\n      for (var ii = 0; ii < 6; ++ii) {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n      }\n    } else {\n      gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  }\n\n  /**\n   * The src image(s) used to create a texture.\n   *\n   * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n   * you can pass in urls for images to load into the textures. If it's a single url\n   * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n   * this will be a corresponding array of images for the cubemap.\n   *\n   * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n   * @memberOf module:twgl\n   */\n\n  /**\n   * A callback for when an image finished downloading and been uploaded into a texture\n   * @callback TextureReadyCallback\n   * @param {*} err If truthy there was an error.\n   * @param {WebGLTexture} texture the texture.\n   * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n   * @memberOf module:twgl\n   */\n\n  /**\n   * A callback for when all images have finished downloading and been uploaded into their respective textures\n   * @callback TexturesReadyCallback\n   * @param {*} err If truthy there was an error.\n   * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n   * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * A callback for when an image finished downloading and been uploaded into a texture\n   * @callback CubemapReadyCallback\n   * @param {*} err If truthy there was an error.\n   * @param {WebGLTexture} tex the texture.\n   * @param {HTMLImageElement[]} imgs the images for each face.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Loads a texture from an image from a Url as specified in `options.src`\n   * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n   * immediately useable. It will be updated with the contents of the image once the image has finished\n   * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n   * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n   *    be non null if there was an error.\n   * @return {HTMLImageElement} the image being downloaded.\n   * @memberOf module:twgl/textures\n   */\n  function loadTextureFromUrl(gl, tex, options, callback) {\n    callback = callback || noop;\n    options = options || defaults.textureOptions;\n    setTextureTo1PixelColor(gl, tex, options);\n    // Because it's async we need to copy the options.\n    options = utils.shallowCopy(options);\n    var img = loadImage(options.src, options.crossOrigin, function(err, img) {\n      if (err) {\n        callback(err, tex, img);\n      } else {\n        setTextureFromElement(gl, tex, img, options);\n        callback(null, tex, img);\n      }\n    });\n    return img;\n  }\n\n  /**\n   * Loads a cubemap from 6 urls as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n   * so that it is usable immediately unless `option.color === false`.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n   *    be non null if there was an error.\n   * @memberOf module:twgl/textures\n   */\n  function loadCubemapFromUrls(gl, tex, options, callback) {\n    callback = callback || noop;\n    var urls = options.src;\n    if (urls.length !== 6) {\n      throw \"there must be 6 urls for a cubemap\";\n    }\n    var format = options.format || gl.RGBA;\n    var type = options.type || gl.UNSIGNED_BYTE;\n    var target = options.target || gl.TEXTURE_2D;\n    if (target !== gl.TEXTURE_CUBE_MAP) {\n      throw \"target must be TEXTURE_CUBE_MAP\";\n    }\n    setTextureTo1PixelColor(gl, tex, options);\n    // Because it's async we need to copy the options.\n    options = utils.shallowCopy(options);\n    var numToLoad = 6;\n    var errors = [];\n    var imgs;\n    var faces = getCubeFaceOrder(gl, options);\n\n    function uploadImg(faceTarget) {\n      return function(err, img) {\n        --numToLoad;\n        if (err) {\n          errors.push(err);\n        } else {\n          if (img.width !== img.height) {\n            errors.push(\"cubemap face img is not a square: \" + img.src);\n          } else {\n            savePackState(gl, options);\n            gl.bindTexture(target, tex);\n\n            // So assuming this is the first image we now have one face that's img sized\n            // and 5 faces that are 1x1 pixel so size the other faces\n            if (numToLoad === 5) {\n              // use the default order\n              getCubeFaceOrder(gl).forEach(function(otherTarget) {\n                // Should we re-use the same face or a color?\n                gl.texImage2D(otherTarget, 0, format, format, type, img);\n              });\n            } else {\n              gl.texImage2D(faceTarget, 0, format, format, type, img);\n            }\n\n            restorePackState(gl, options);\n            gl.generateMipmap(target);\n          }\n        }\n\n        if (numToLoad === 0) {\n          callback(errors.length ? errors : undefined, imgs, tex);\n        }\n      };\n    }\n\n    imgs = urls.map(function(url, ndx) {\n      return loadImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n    });\n  }\n\n  /**\n   * Gets the number of compontents for a given image format.\n   * @param {number} format the format.\n   * @return {number} the number of components for the format.\n   * @memberOf module:twgl/textures\n   */\n  function getNumComponentsForFormat(format) {\n    switch (format) {\n      case ALPHA:\n      case LUMINANCE:\n        return 1;\n      case LUMINANCE_ALPHA:\n        return 2;\n      case RGB:\n        return 3;\n      case RGBA:\n        return 4;\n      default:\n        throw \"unknown type: \" + format;\n    }\n  }\n\n  /**\n   * Gets the texture type for a given array type.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @return {number} the gl texture type\n   */\n  function getTextureTypeForArrayType(gl, src) {\n    if (isArrayBuffer(src)) {\n      return typedArrays.getGLTypeForTypedArray(src);\n    }\n    return gl.UNSIGNED_BYTE;\n  }\n\n  /**\n   * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n   * guess the size. See {@link module:twgl.TextureOptions}.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {(number[]|ArrayBuffer)} src An array or typed arry with texture data.\n   * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n   *   This is often the same options you passed in when you created the texture.\n   * @memberOf module:twgl/textures\n   */\n  function setTextureFromArray(gl, tex, src, options) {\n    options = options || defaults.textureOptions;\n    var target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture(target, tex);\n    var width = options.width;\n    var height = options.height;\n    var format = options.format || gl.RGBA;\n    var type = options.type || getTextureTypeForArrayType(gl, src);\n    var numComponents = getNumComponentsForFormat(format);\n    var numElements = src.length / numComponents;\n    if (numElements % 1) {\n      throw \"length wrong size for format: \" + glEnumToString(gl, format);\n    }\n    if (!width && !height) {\n      var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n      if (size % 1 === 0) {\n        width = size;\n        height = size;\n      } else {\n        width = numElements;\n        height = 1;\n      }\n    } else if (!height) {\n      height = numElements / width;\n      if (height % 1) {\n        throw \"can't guess height\";\n      }\n    } else if (!width) {\n      width = numElements / height;\n      if (width % 1) {\n        throw \"can't guess width\";\n      }\n    }\n    if (!isArrayBuffer(src)) {\n      var Type = typedArrays.getTypedArrayTypeForGLType(type);\n      src = new Type(src);\n    } else {\n      if (src instanceof Uint8ClampedArray) {\n        src = new Uint8Array(src.buffer);\n      }\n    }\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n    savePackState(gl, options);\n    if (target === gl.TEXTURE_CUBE_MAP) {\n      var faceSize = numElements / 6 * numComponents;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        var offset = faceSize * f.ndx;\n        var data = src.subarray(offset, offset + faceSize);\n        gl.texImage2D(f.face, 0, format, width, height, 0, format, type, data);\n      });\n    } else {\n      gl.texImage2D(target, 0, format, width, height, 0, format, type, src);\n    }\n    restorePackState(gl, options);\n    return {\n      width: width,\n      height: height,\n    };\n  }\n\n  /**\n   * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n   * You must set `options.width` and `options.height`.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   * @memberOf module:twgl/textures\n   */\n  function setEmptyTexture(gl, tex, options) {\n    var target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture(target, tex);\n    var format = options.format || gl.RGBA;\n    var type = options.type || gl.UNSIGNED_BYTE;\n    savePackState(gl, options);\n    if (target === gl.TEXTURE_CUBE_MAP) {\n      for (var ii = 0; ii < 6; ++ii) {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, format, options.width, options.height, 0, format, type, null);\n      }\n    } else {\n      gl.texImage2D(target, 0, format, options.width, options.height, 0, format, type, null);\n    }\n  }\n\n  /**\n   * Creates a texture based on the options passed in.\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n   * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n   * @return {WebGLTexture} the created texture.\n   * @memberOf module:twgl/textures\n   */\n  function createTexture(gl, options, callback) {\n    callback = callback || noop;\n    options = options || defaults.textureOptions;\n    var tex = gl.createTexture();\n    var target = options.target || gl.TEXTURE_2D;\n    var width  = options.width  || 1;\n    var height = options.height || 1;\n    gl.bindTexture(target, tex);\n    if (target === gl.TEXTURE_CUBE_MAP) {\n      // this should have been the default for CUBEMAPS :(\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    }\n    var src = options.src;\n    if (src) {\n      if (typeof src === \"function\") {\n        src = src(gl, options);\n      }\n      if (typeof (src) === \"string\") {\n        loadTextureFromUrl(gl, tex, options, callback);\n      } else if (isArrayBuffer(src) ||\n                 (Array.isArray(src) && (\n                      typeof src[0] === 'number' ||\n                      Array.isArray(src[0]) ||\n                      isArrayBuffer(src[0]))\n                 )\n                ) {\n        var dimensions = setTextureFromArray(gl, tex, src, options);\n        width  = dimensions.width;\n        height = dimensions.height;\n      } else if (Array.isArray(src) && typeof (src[0]) === 'string') {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else if (src instanceof HTMLElement) {\n        setTextureFromElement(gl, tex, src, options);\n        width  = src.width;\n        height = src.height;\n      } else {\n        throw \"unsupported src type\";\n      }\n    } else {\n      setEmptyTexture(gl, tex, options);\n    }\n    if (options.auto !== false) {\n      setTextureFilteringForSize(gl, tex, options, width, height);\n    }\n    setTextureParameters(gl, tex, options);\n    return tex;\n  }\n\n  /**\n   * Resizes a texture based on the options passed in.\n   *\n   * Note: This is not a generic resize anything function.\n   * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n   * It will use `options.src` if it exists to try to determine a `type`\n   * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n   * for the texture. Texture parameters will be set accordingly\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {WebGLTexture} tex the texture to resize\n   * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n   * @param {number} [width] the new width. If not passed in will use `options.width`\n   * @param {number} [height] the new height. If not passed in will use `options.height`\n   * @memberOf module:twgl/textures\n   */\n  function resizeTexture(gl, tex, options, width, height) {\n    width = width || options.width;\n    height = height || options.height;\n    var target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture(target, tex);\n    var format = options.format || gl.RGBA;\n    var type;\n    var src = options.src;\n    if (!src) {\n      type = options.type || gl.UNSIGNED_BYTE;\n    } else if (isArrayBuffer(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n      type = options.type || getTextureTypeForArrayType(gl, src);\n    } else {\n      type = options.type || gl.UNSIGNED_BYTE;\n    }\n    if (target === gl.TEXTURE_CUBE_MAP) {\n      for (var ii = 0; ii < 6; ++ii) {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, format, width, height, 0, format, type, null);\n      }\n    } else {\n      gl.texImage2D(target, 0, format, width, height, 0, format, type, null);\n    }\n  }\n\n  /**\n   * Check if a src is an async request.\n   * if src is a string we're going to download an image\n   * if src is an array of strings we're going to download cubemap images\n   * @param {*} src The src from a TextureOptions\n   * @returns {bool} true if src is async.\n   */\n  function isAsyncSrc(src) {\n    return typeof src === 'string' ||\n           (Array.isArray(src) && typeof src[0] === 'string');\n  }\n\n  /**\n   * Creates a bunch of textures based on the passed in options.\n   *\n   * Example:\n   *\n   *     var textures = twgl.createTextures(gl, {\n   *       // a power of 2 image\n   *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n   *       // a non-power of 2 image\n   *       clover: { src: \"images/clover.jpg\" },\n   *       // From a canvas\n   *       fromCanvas: { src: ctx.canvas },\n   *       // A cubemap from 6 images\n   *       yokohama: {\n   *         target: gl.TEXTURE_CUBE_MAP,\n   *         src: [\n   *           'images/yokohama/posx.jpg',\n   *           'images/yokohama/negx.jpg',\n   *           'images/yokohama/posy.jpg',\n   *           'images/yokohama/negy.jpg',\n   *           'images/yokohama/posz.jpg',\n   *           'images/yokohama/negz.jpg',\n   *         ],\n   *       },\n   *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n   *       goldengate: {\n   *         target: gl.TEXTURE_CUBE_MAP,\n   *         src: 'images/goldengate.jpg',\n   *       },\n   *       // A 2x2 pixel texture from a JavaScript array\n   *       checker: {\n   *         mag: gl.NEAREST,\n   *         min: gl.LINEAR,\n   *         src: [\n   *           255,255,255,255,\n   *           192,192,192,255,\n   *           192,192,192,255,\n   *           255,255,255,255,\n   *         ],\n   *       },\n   *       // a 1x2 pixel texture from a typed array.\n   *       stripe: {\n   *         mag: gl.NEAREST,\n   *         min: gl.LINEAR,\n   *         format: gl.LUMINANCE,\n   *         src: new Uint8Array([\n   *           255,\n   *           128,\n   *           255,\n   *           128,\n   *           255,\n   *           128,\n   *           255,\n   *           128,\n   *         ]),\n   *         width: 1,\n   *       },\n   *     });\n   *\n   * Now\n   *\n   * *   `textures.hftIcon` will be a 2d texture\n   * *   `textures.clover` will be a 2d texture\n   * *   `textures.fromCanvas` will be a 2d texture\n   * *   `textures.yohohama` will be a cubemap texture\n   * *   `textures.goldengate` will be a cubemap texture\n   * *   `textures.checker` will be a 2d texture\n   * *   `textures.stripe` will be a 2d texture\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n   * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n   * @return {Object.<string,WebGLTexture>} the created textures by name\n   * @memberOf module:twgl/textures\n   */\n  function createTextures(gl, textureOptions, callback) {\n    callback = callback || noop;\n    var numDownloading = 0;\n    var errors = [];\n    var textures = {};\n    var images = {};\n\n    function callCallbackIfReady() {\n      if (numDownloading === 0) {\n        setTimeout(function() {\n          callback(errors.length ? errors : undefined, textures, images);\n        }, 0);\n      }\n    }\n\n    Object.keys(textureOptions).forEach(function(name) {\n      var options = textureOptions[name];\n      var onLoadFn;\n      if (isAsyncSrc(options.src)) {\n        onLoadFn = function(err, tex, img) {\n          images[name] = img;\n          --numDownloading;\n          if (err) {\n            errors.push(err);\n          }\n          callCallbackIfReady();\n        };\n        ++numDownloading;\n      }\n      textures[name] = createTexture(gl, options, onLoadFn);\n    });\n\n    // queue the callback if there are no images to download.\n    // We do this because if your code is structured to wait for\n    // images to download but then you comment out all the async\n    // images your code would break.\n    callCallbackIfReady();\n\n    return textures;\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"setDefaults_\": setDefaults,\n\n    \"createTexture\": createTexture,\n    \"setEmptyTexture\": setEmptyTexture,\n    \"setTextureFromArray\": setTextureFromArray,\n    \"loadTextureFromUrl\": loadTextureFromUrl,\n    \"setTextureFromElement\": setTextureFromElement,\n    \"setTextureFilteringForSize\": setTextureFilteringForSize,\n    \"setTextureParameters\": setTextureParameters,\n    \"setDefaultTextureColor\": setDefaultTextureColor,\n    \"createTextures\": createTextures,\n    \"resizeTexture\": resizeTexture,\n    \"getNumComponentsForFormat\": getNumComponentsForFormat,\n  };\n});\n\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/framebuffers',[\n    './textures',\n    './utils',\n  ], function(\n    textures,\n    utils) {\n  \n\n  /**\n   * Framebuffer related functions\n   *\n   * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n   * itself\n   *\n   * See {@link module:twgl} for core functions\n   *\n   * @module twgl/framebuffers\n   */\n\n  // make sure we don't see a global gl\n  var gl = undefined;  // eslint-disable-line\n\n  var UNSIGNED_BYTE                  = 0x1401;\n\n  /* PixelFormat */\n  var DEPTH_COMPONENT                = 0x1902;\n  var RGBA                           = 0x1908;\n\n  /* Framebuffer Object. */\n  var RGBA4                          = 0x8056;\n  var RGB5_A1                        = 0x8057;\n  var RGB565                         = 0x8D62;\n  var DEPTH_COMPONENT16              = 0x81A5;\n  var STENCIL_INDEX                  = 0x1901;\n  var STENCIL_INDEX8                 = 0x8D48;\n  var DEPTH_STENCIL                  = 0x84F9;\n  var COLOR_ATTACHMENT0              = 0x8CE0;\n  var DEPTH_ATTACHMENT               = 0x8D00;\n  var STENCIL_ATTACHMENT             = 0x8D20;\n  var DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n  /* TextureWrapMode */\n  var REPEAT                         = 0x2901;  // eslint-disable-line\n  var CLAMP_TO_EDGE                  = 0x812F;\n  var MIRRORED_REPEAT                = 0x8370;  // eslint-disable-line\n\n  /* TextureMagFilter */\n  var NEAREST                        = 0x2600;  // eslint-disable-line\n  var LINEAR                         = 0x2601;\n\n  /* TextureMinFilter */\n  var NEAREST_MIPMAP_NEAREST         = 0x2700;  // eslint-disable-line\n  var LINEAR_MIPMAP_NEAREST          = 0x2701;  // eslint-disable-line\n  var NEAREST_MIPMAP_LINEAR          = 0x2702;  // eslint-disable-line\n  var LINEAR_MIPMAP_LINEAR           = 0x2703;  // eslint-disable-line\n\n  /**\n   * The options for a framebuffer attachment.\n   *\n   * Note: For a `format` that is a texture include all the texture\n   * options from {@link module:twgl.TextureOptions} for example\n   * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n   * `auto` defaults to `false` for attachment textures\n   *\n   * @typedef {Object} AttachmentOptions\n   * @property {number} [attach] The attachment point. Defaults\n   *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n   *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n   *   on the format or attachment type.\n   * @property {number} [format] The format. If one of `gl.RGBA4`,\n   *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n   *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n   *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n   * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n   * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n   *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n   * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n   * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n   *    If provided will attach this Object. This allows you to share\n   *    attachemnts across framebuffers.\n   * @memberOf module:twgl\n   */\n\n  var defaultAttachments = [\n    { format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE, },\n    { format: DEPTH_STENCIL, },\n  ];\n\n  var attachmentsByFormat = {};\n  attachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\n  attachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\n  attachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\n  attachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\n  attachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\n  function getAttachmentPointForFormat(format) {\n    return attachmentsByFormat[format];\n  }\n\n  var renderbufferFormats = {};\n  renderbufferFormats[RGBA4] = true;\n  renderbufferFormats[RGB5_A1] = true;\n  renderbufferFormats[RGB565] = true;\n  renderbufferFormats[DEPTH_STENCIL] = true;\n  renderbufferFormats[DEPTH_COMPONENT16] = true;\n  renderbufferFormats[STENCIL_INDEX] = true;\n  renderbufferFormats[STENCIL_INDEX8] = true;\n\n  function isRenderbufferFormat(format) {\n    return renderbufferFormats[format];\n  }\n\n  /**\n   * @typedef {Object} FramebufferInfo\n   * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n   * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Creates a framebuffer and attachments.\n   *\n   * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n   *\n   * The simplest usage\n   *\n   *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n   *     var fbi = twgl.createFramebuffer(gl);\n   *\n   * More complex usage\n   *\n   *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n   *     var attachments = [\n   *       { format: RGB565, mag: NEAREST },\n   *       { format: STENCIL_INDEX8 },\n   *     ]\n   *     var fbi = twgl.createFramebuffer(gl, attachments);\n   *\n   * Passing in a specific size\n   *\n   *     var width = 256;\n   *     var height = 256;\n   *     var fbi = twgl.createFramebuffer(gl, attachments, width, height);\n   *\n   * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n   * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n   *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n   * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n   * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n   * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n   * @memberOf module:twgl/framebuffers\n   */\n  function createFramebufferInfo(gl, attachments, width, height) {\n    var target = gl.FRAMEBUFFER;\n    var fb = gl.createFramebuffer();\n    gl.bindFramebuffer(target, fb);\n    width  = width  || gl.drawingBufferWidth;\n    height = height || gl.drawingBufferHeight;\n    attachments = attachments || defaultAttachments;\n    var colorAttachmentCount = 0;\n    var framebufferInfo = {\n      framebuffer: fb,\n      attachments: [],\n      width: width,\n      height: height,\n    };\n    attachments.forEach(function(attachmentOptions) {\n      var attachment = attachmentOptions.attachment;\n      var format = attachmentOptions.format;\n      var attachmentPoint = getAttachmentPointForFormat(format);\n      if (!attachmentPoint) {\n        attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n      }\n      if (!attachment) {\n        if (isRenderbufferFormat(format)) {\n          attachment = gl.createRenderbuffer();\n          gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n          gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n        } else {\n          var textureOptions = utils.shallowCopy(attachmentOptions);\n          textureOptions.width = width;\n          textureOptions.height = height;\n          textureOptions.auto = attachmentOptions.auto === undefined ? false : attachmentOptions.auto;\n          attachment = textures.createTexture(gl, textureOptions);\n        }\n      }\n      if (attachment instanceof WebGLRenderbuffer) {\n        gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n      } else if (attachment instanceof WebGLTexture) {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.texTarget || gl.TEXTURE_2D,\n            attachment,\n            attachmentOptions.level || 0);\n      } else {\n        throw \"unknown attachment type\";\n      }\n      framebufferInfo.attachments.push(attachment);\n    });\n    return framebufferInfo;\n  }\n\n  /**\n   * Resizes the attachments of a framebuffer.\n   *\n   * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebuffer}\n   * because TWGL has no idea the format/type of each attachment.\n   *\n   * The simplest usage\n   *\n   *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n   *     var fbi = twgl.createFramebuffer(gl);\n   *\n   *     ...\n   *\n   *     function render() {\n   *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n   *         // resize the attachments\n   *         twgl.resizeFramebufferInfo(gl, fbi);\n   *       }\n   *\n   * More complex usage\n   *\n   *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n   *     var attachments = [\n   *       { format: RGB565, mag: NEAREST },\n   *       { format: STENCIL_INDEX8 },\n   *     ]\n   *     var fbi = twgl.createFramebuffer(gl, attachments);\n   *\n   *     ...\n   *\n   *     function render() {\n   *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n   *         // resize the attachments to match\n   *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n   *       }\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebuffer}.\n   * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebuffer}.\n   * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n   * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n   * @memberOf module:twgl/framebuffers\n   */\n  function resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n    width  = width  || gl.drawingBufferWidth;\n    height = height || gl.drawingBufferHeight;\n    framebufferInfo.width = width;\n    framebufferInfo.height = height;\n    attachments = attachments || defaultAttachments;\n    attachments.forEach(function(attachmentOptions, ndx) {\n      var attachment = framebufferInfo.attachments[ndx];\n      var format = attachmentOptions.format;\n      if (attachment instanceof WebGLRenderbuffer) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else if (attachment instanceof WebGLTexture) {\n        textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n      } else {\n        throw \"unknown attachment type\";\n      }\n    });\n  }\n\n  /**\n   * Binds a framebuffer\n   *\n   * This function pretty much soley exists because I spent hours\n   * trying to figure out why something I wrote wasn't working only\n   * to realize I forget to set the viewport dimensions.\n   * My hope is this function will fix that.\n   *\n   * It is effectively the same as\n   *\n   *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n   *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n   *\n   * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n   * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebuffer}.\n   *   If not passed will bind the canvas.\n   * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n   * @memberOf module:twgl/framebuffers\n   */\n\n  function bindFramebufferInfo(gl, framebufferInfo, target) {\n    target = target || gl.FRAMEBUFFER;\n    if (framebufferInfo) {\n      gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n      gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n    } else {\n      gl.bindFramebuffer(target, null);\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"bindFramebufferInfo\": bindFramebufferInfo,\n    \"createFramebufferInfo\": createFramebufferInfo,\n    \"resizeFramebufferInfo\": resizeFramebufferInfo,\n  };\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/twgl',[\n    './attributes',\n    './draw',\n    './framebuffers',\n    './programs',\n    './textures',\n    './typedarrays',\n    './utils',\n  ], function(\n    attributes,\n    draw,\n    framebuffers,\n    programs,\n    textures,\n    typedArrays,\n    utils) {\n  \n\n  /**\n   * The main TWGL module.\n   *\n   * For most use cases you shouldn't need anything outside this module.\n   * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n   *\n   * @module twgl\n   * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n   * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n   * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n   * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n   * @borrows module:twgl/draw.drawObjectList as drawObjectList\n   * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n   * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n   * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n   * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n   * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n   * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n   * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n   * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n   * @borrows module:twgl/programs.setUniforms as setUniforms\n   * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n   * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n   * @borrows module:twgl/textures.createTexture as createTexture\n   * @borrows module:twgl/textures.resizeTexture as resizeTexture\n   * @borrows module:twgl/textures.createTextures as createTextures\n   */\n\n  // make sure we don't see a global gl\n  var gl = undefined;  // eslint-disable-line\n  var defaults = {\n    enableVertexArrayObjects: true,\n  };\n\n  /**\n   * Various default settings for twgl.\n   *\n   * Note: You can call this any number of times. Example:\n   *\n   *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n   *     twgl.setDefaults({ attribPrefix: 'a_' });\n   *\n   * is equivalent to\n   *\n   *     twgl.setDefaults({\n   *       textureColor: [1, 0, 0, 1],\n   *       attribPrefix: 'a_',\n   *     });\n   *\n   * @typedef {Object} Defaults\n   * @property {string} attribPrefix The prefix to stick on attributes\n   *\n   *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n   *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n   *\n   *   In otherwords I'll create arrays of geometry like this\n   *\n   *       var arrays = {\n   *         position: ...\n   *         normal: ...\n   *         texcoord: ...\n   *       };\n   *\n   *   But need those mapped to attributes and my attributes start with `a_`.\n   *\n   *   Default: `\"\"`\n   *\n   * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n   *\n   *   The default texture color is used when loading textures from\n   *   urls. Because the URL will be loaded async we'd like to be\n   *   able to use the texture immediately. By putting a 1x1 pixel\n   *   color in the texture we can start using the texture before\n   *   the URL has loaded.\n   *\n   *   Default: `[0.5, 0.75, 1, 1]`\n   *\n   * @property {string} crossOrigin\n   *\n   *   If not undefined sets the crossOrigin attribute on images\n   *   that twgl creates when downloading images for textures.\n   *\n   *   Also see {@link module:twgl.TextureOptions}.\n   *\n   * @property {bool} enableVertexArrayObjects\n   *\n   *   If true then in WebGL 1.0 will attempt to get the `OES_vertex_array_object` extension.\n   *   If successful it will copy create/bind/delete/isVertexArrayOES from the extension to\n   *   the WebGLRenderingContext removing the OES at the end which is the standard entry point\n   *   for WebGL 2.\n   *\n   *   Note: According to webglstats.com 90% of devices support `OES_vertex_array_object`.\n   *   If you just want to count on support I suggest using [this polyfill](https://github.com/KhronosGroup/WebGL/blob/master/sdk/demos/google/resources/OESVertexArrayObject.js)\n   *   or ignoring devices that don't support them.\n   *\n   *   Default: `true`\n   *\n   * @memberOf module:twgl\n   */\n\n  /**\n   * Sets various defaults for twgl.\n   *\n   * In the interest of terseness which is kind of the point\n   * of twgl I've integrated a few of the older functions here\n   *\n   * @param {module:twgl.Defaults} newDefaults The default settings.\n   * @memberOf module:twgl\n   */\n  function setDefaults(newDefaults) {\n    utils.copyExistingProperties(newDefaults, defaults);\n    attributes.setDefaults_(newDefaults);  // eslint-disable-line\n    textures.setDefaults_(newDefaults);  // eslint-disable-line\n  }\n\n  /**\n   * Adds Vertex Array Objects to WebGL 1 GL contexts if available\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   */\n  function addVertexArrayObjectSupport(gl) {\n    if (!gl || !defaults.enableVertexArrayObjects) {\n      return;\n    }\n    if (utils.isWebGL1(gl)) {\n      var ext = gl.getExtension(\"OES_vertex_array_object\");\n      if (ext) {\n        gl.createVertexArray = function() {\n          return ext.createVertexArrayOES();\n        };\n        gl.deleteVertexArray = function(v) {\n          ext.deleteVertexArrayOES(v);\n        };\n        gl.isVertexArray = function(v) {\n          return ext.isVertexArrayOES(v);\n        };\n        gl.bindVertexArray = function(v) {\n          ext.bindVertexArrayOES(v);\n        };\n        gl.VERTEX_ARRAY_BINDING = ext.VERTEX_ARRAY_BINDING_OES;\n      }\n    }\n  }\n\n  /**\n   * Creates a webgl context.\n   * @param {HTMLCanvasElement} canvas The canvas tag to get\n   *     context from. If one is not passed in one will be\n   *     created.\n   * @return {WebGLRenderingContext} The created context.\n   */\n  function create3DContext(canvas, opt_attribs) {\n    var names = [\"webgl\", \"experimental-webgl\"];\n    var context = null;\n    for (var ii = 0; ii < names.length; ++ii) {\n      try {\n        context = canvas.getContext(names[ii], opt_attribs);\n      } catch(e) {}  // eslint-disable-line\n      if (context) {\n        break;\n      }\n    }\n    return context;\n  }\n\n  /**\n   * Gets a WebGL context.\n   * @param {HTMLCanvasElement} canvas a canvas element.\n   * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n   * @memberOf module:twgl\n   */\n  function getWebGLContext(canvas, opt_attribs) {\n    var gl = create3DContext(canvas, opt_attribs);\n    addVertexArrayObjectSupport(gl);\n    return gl;\n  }\n\n  /**\n   * Creates a webgl context.\n   *\n   * Will return a WebGL2 context if possible.\n   *\n   * You can check if it's WebGL2 with\n   *\n   *     twgl.isWebGL2(gl);\n   *\n   * @param {HTMLCanvasElement} canvas The canvas tag to get\n   *     context from. If one is not passed in one will be\n   *     created.\n   * @return {WebGLRenderingContext} The created context.\n   */\n  function createContext(canvas, opt_attribs) {\n    var names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\n    var context = null;\n    for (var ii = 0; ii < names.length; ++ii) {\n      try {\n        context = canvas.getContext(names[ii], opt_attribs);\n      } catch(e) {}  // eslint-disable-line\n      if (context) {\n        break;\n      }\n    }\n    return context;\n  }\n\n  /**\n   * Gets a WebGL context.  Will create a WebGL2 context if possible.\n   *\n   * You can check if it's WebGL2 with\n   *\n   *    function isWebGL2(gl) {\n   *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n   *    }\n   *\n   * @param {HTMLCanvasElement} canvas a canvas element.\n   * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n   * @return {WebGLRenderingContext} The created context.\n   * @memberOf module:twgl\n   */\n  function getContext(canvas, opt_attribs) {\n    var gl = createContext(canvas, opt_attribs);\n    addVertexArrayObjectSupport(gl);\n    return gl;\n  }\n\n  /**\n   * Resize a canvas to match the size it's displayed.\n   * @param {HTMLCanvasElement} canvas The canvas to resize.\n   * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` if you want to.\n   * @return {boolean} true if the canvas was resized.\n   * @memberOf module:twgl\n   */\n  function resizeCanvasToDisplaySize(canvas, multiplier) {\n    multiplier = multiplier || 1;\n    multiplier = Math.max(1, multiplier);\n    var width  = canvas.clientWidth  * multiplier | 0;\n    var height = canvas.clientHeight * multiplier | 0;\n    if (canvas.width !== width ||\n        canvas.height !== height) {\n      canvas.width = width;\n      canvas.height = height;\n      return true;\n    }\n    return false;\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  var api = {\n    \"getContext\": getContext,\n    \"getWebGLContext\": getWebGLContext,\n    \"isWebGL1\": utils.isWebGL1,\n    \"isWebGL2\": utils.isWebGL2,\n    \"resizeCanvasToDisplaySize\": resizeCanvasToDisplaySize,\n    \"setDefaults\": setDefaults,\n  };\n\n  function notPrivate(name) {\n    return name[name.length - 1] !== '_';\n  }\n\n  function copyPublicProperties(src, dst) {\n    Object.keys(src).filter(notPrivate).forEach(function(key) {\n      dst[key] = src[key];\n    });\n    return dst;\n  }\n\n  var apis = {\n    attributes: attributes,\n    draw: draw,\n    framebuffers: framebuffers,\n    programs: programs,\n    textures: textures,\n    typedArrays: typedArrays,\n  };\n  Object.keys(apis).forEach(function(name) {\n    var srcApi = apis[name];\n    copyPublicProperties(srcApi, api);\n    api[name] = copyPublicProperties(srcApi, {});\n  });\n\n  return api;\n\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/v3',[], function() {\n  \n\n  /**\n   *\n   * Vec3 math math functions.\n   *\n   * Almost all functions take an optional `dst` argument. If it is not passed in the\n   * functions will create a new Vec3. In other words you can do this\n   *\n   *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n   *\n   * or\n   *\n   *     var v3 = v3.create();\n   *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n   *\n   * The first style is often easier but depending on where it's used it generates garbage where\n   * as there is almost never allocation with the second style.\n   *\n   * It is always save to pass any vector as the destination. So for example\n   *\n   *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n   *\n   * @module twgl/v3\n   */\n\n  var VecType = Float32Array;\n\n  /**\n   * A JavaScript array with 3 values or a Float32Array with 3 values.\n   * When created by the library will create the default type which is `Float32Array`\n   * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n   * @typedef {(number[]|Float32Array)} Vec3\n   * @memberOf module:twgl/v3\n   */\n\n  /**\n   * Sets the type this library creates for a Vec3\n   * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n   * @return {constructor} previous constructor for Vec3\n   */\n  function setDefaultType(ctor) {\n    var oldType = VecType;\n    VecType = ctor;\n    return oldType;\n  }\n\n  /**\n   * Creates a vec3; may be called with x, y, z to set initial values.\n   * @return {Vec3} the created vector\n   * @memberOf module:twgl/v3\n   */\n  function create(x, y, z) {\n    var dst = new VecType(3);\n    if (x) {\n      dst[0] = x;\n    }\n    if (y) {\n      dst[1] = y;\n    }\n    if (z) {\n      dst[2] = z;\n    }\n    return dst;\n  }\n\n  /**\n   * Adds two vectors; assumes a and b have the same dimension.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @memberOf module:twgl/v3\n   */\n  function add(a, b, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n\n    return dst;\n  }\n\n  /**\n   * Subtracts two vectors.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @memberOf module:twgl/v3\n   */\n  function subtract(a, b, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n\n    return dst;\n  }\n\n  /**\n   * Performs linear interpolation on two vectors.\n   * Given vectors a and b and interpolation coefficient t, returns\n   * (1 - t) * a + t * b.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @param {number} t Interpolation coefficient.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @memberOf module:twgl/v3\n   */\n  function lerp(a, b, t, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = (1 - t) * a[0] + t * b[0];\n    dst[1] = (1 - t) * a[1] + t * b[1];\n    dst[2] = (1 - t) * a[2] + t * b[2];\n\n    return dst;\n  }\n\n  /**\n   * Mutiplies a vector by a scalar.\n   * @param {module:twgl/v3.Vec3} v The vector.\n   * @param {number} k The scalar.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} dst.\n   * @memberOf module:twgl/v3\n   */\n  function mulScalar(v, k, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n\n    return dst;\n  }\n\n  /**\n   * Divides a vector by a scalar.\n   * @param {module:twgl/v3.Vec3} v The vector.\n   * @param {number} k The scalar.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} dst.\n   * @memberOf module:twgl/v3\n   */\n  function divScalar(v, k, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n\n    return dst;\n  }\n\n  /**\n   * Computes the cross product of two vectors; assumes both vectors have\n   * three entries.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} The vector a cross b.\n   * @memberOf module:twgl/v3\n   */\n  function cross(a, b, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = a[1] * b[2] - a[2] * b[1];\n    dst[1] = a[2] * b[0] - a[0] * b[2];\n    dst[2] = a[0] * b[1] - a[1] * b[0];\n\n    return dst;\n  }\n\n  /**\n   * Computes the dot product of two vectors; assumes both vectors have\n   * three entries.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @return {number} dot product\n   * @memberOf module:twgl/v3\n   */\n  function dot(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n  }\n\n  /**\n   * Computes the length of vector\n   * @param {module:twgl/v3.Vec3} v vector.\n   * @return {number} length of vector.\n   * @memberOf module:twgl/v3\n   */\n  function length(v) {\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n  }\n\n  /**\n   * Computes the square of the length of vector\n   * @param {module:twgl/v3.Vec3} v vector.\n   * @return {number} square of the length of vector.\n   * @memberOf module:twgl/v3\n   */\n  function lengthSq(v) {\n    return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n  }\n\n  /**\n   * Divides a vector by its Euclidean length and returns the quotient.\n   * @param {module:twgl/v3.Vec3} a The vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} The normalized vector.\n   * @memberOf module:twgl/v3\n   */\n  function normalize(a, dst) {\n    dst = dst || new VecType(3);\n\n    var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n    var len = Math.sqrt(lenSq);\n    if (len > 0.00001) {\n      dst[0] = a[0] / len;\n      dst[1] = a[1] / len;\n      dst[2] = a[2] / len;\n    } else {\n      dst[0] = 0;\n      dst[1] = 0;\n      dst[2] = 0;\n    }\n\n    return dst;\n  }\n\n  /**\n   * Negates a vector.\n   * @param {module:twgl/v3.Vec3} v The vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} -v.\n   * @memberOf module:twgl/v3\n   */\n  function negate(v, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n\n    return dst;\n  }\n\n  /**\n   * Copies a vector.\n   * @param {module:twgl/v3.Vec3} v The vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} A copy of v.\n   * @memberOf module:twgl/v3\n   */\n  function copy(v, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n\n    return dst;\n  }\n\n  /**\n   * Multiplies a vector by another vector (component-wise); assumes a and\n   * b have the same length.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n   *     b.\n   * @memberOf module:twgl/v3\n   */\n  function multiply(a, b, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n\n    return dst;\n  }\n\n  /**\n   * Divides a vector by another vector (component-wise); assumes a and\n   * b have the same length.\n   * @param {module:twgl/v3.Vec3} a Operand vector.\n   * @param {module:twgl/v3.Vec3} b Operand vector.\n   * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n   * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n   *     b.\n   * @memberOf module:twgl/v3\n   */\n  function divide(a, b, dst) {\n    dst = dst || new VecType(3);\n\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n\n    return dst;\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"add\": add,\n    \"copy\": copy,\n    \"create\": create,\n    \"cross\": cross,\n    \"divide\": divide,\n    \"divScalar\": divScalar,\n    \"dot\": dot,\n    \"lerp\": lerp,\n    \"length\": length,\n    \"lengthSq\": lengthSq,\n    \"mulScalar\": mulScalar,\n    \"multiply\": multiply,\n    \"negate\": negate,\n    \"normalize\": normalize,\n    \"setDefaultType\": setDefaultType,\n    \"subtract\": subtract,\n  };\n\n});\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndefine('twgl/m4',['./v3'], function(v3) {\n  \n\n  /**\n   * 4x4 Matrix math math functions.\n   *\n   * Almost all functions take an optional `dst` argument. If it is not passed in the\n   * functions will create a new matrix. In other words you can do this\n   *\n   *     var mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n   *\n   * or\n   *\n   *     var mat = m4.create();\n   *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n   *\n   * The first style is often easier but depending on where it's used it generates garbage where\n   * as there is almost never allocation with the second style.\n   *\n   * It is always save to pass any matrix as the destination. So for example\n   *\n   *     var mat = m4.identity();\n   *     var trans = m4.translation([1, 2, 3]);\n   *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n   *\n   * @module twgl/m4\n   */\n  var MatType = Float32Array;\n\n  var tempV3a = v3.create();\n  var tempV3b = v3.create();\n  var tempV3c = v3.create();\n\n  /**\n   * A JavaScript array with 16 values or a Float32Array with 16 values.\n   * When created by the library will create the default type which is `Float32Array`\n   * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n   * @typedef {(number[]|Float32Array)} Mat4\n   * @memberOf module:twgl/m4\n   */\n\n  /**\n   * Sets the type this library creates for a Mat4\n   * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n   * @return {constructor} previous constructor for Mat4\n   */\n  function setDefaultType(ctor) {\n    var oldType = MatType;\n    MatType = ctor;\n    return oldType;\n  }\n\n  /**\n   * Negates a matrix.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} -m.\n   * @memberOf module:twgl/m4\n   */\n  function negate(m, dst) {\n    dst = dst || new MatType(16);\n\n    dst[ 0] = -m[ 0];\n    dst[ 1] = -m[ 1];\n    dst[ 2] = -m[ 2];\n    dst[ 3] = -m[ 3];\n    dst[ 4] = -m[ 4];\n    dst[ 5] = -m[ 5];\n    dst[ 6] = -m[ 6];\n    dst[ 7] = -m[ 7];\n    dst[ 8] = -m[ 8];\n    dst[ 9] = -m[ 9];\n    dst[10] = -m[10];\n    dst[11] = -m[11];\n    dst[12] = -m[12];\n    dst[13] = -m[13];\n    dst[14] = -m[14];\n    dst[15] = -m[15];\n\n    return dst;\n  }\n\n  /**\n   * Copies a matrix.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {module:twgl/m4.Mat4} [dst] The matrix.\n   * @return {module:twgl/m4.Mat4} A copy of m.\n   * @memberOf module:twgl/m4\n   */\n  function copy(m, dst) {\n    dst = dst || new MatType(16);\n\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n\n    return dst;\n  }\n\n  /**\n   * Creates an n-by-n identity matrix.\n   *\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n   * @memberOf module:twgl/m4\n   */\n  function identity(dst) {\n    dst = dst || new MatType(16);\n\n    dst[ 0] = 1;\n    dst[ 1] = 0;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = 1;\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = 0;\n    dst[ 9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Takes the transpose of a matrix.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The transpose of m.\n   * @memberOf module:twgl/m4\n   */\n   function transpose(m, dst) {\n    dst = dst || new MatType(16);\n    if (dst === m) {\n      var t;\n\n      t = m[1];\n      m[1] = m[4];\n      m[4] = t;\n\n      t = m[2];\n      m[2] = m[8];\n      m[8] = t;\n\n      t = m[3];\n      m[3] = m[12];\n      m[12] = t;\n\n      t = m[6];\n      m[6] = m[9];\n      m[9] = t;\n\n      t = m[7];\n      m[7] = m[13];\n      m[13] = t;\n\n      t = m[11];\n      m[11] = m[14];\n      m[14] = t;\n      return dst;\n    }\n\n    var m00 = m[0 * 4 + 0];\n    var m01 = m[0 * 4 + 1];\n    var m02 = m[0 * 4 + 2];\n    var m03 = m[0 * 4 + 3];\n    var m10 = m[1 * 4 + 0];\n    var m11 = m[1 * 4 + 1];\n    var m12 = m[1 * 4 + 2];\n    var m13 = m[1 * 4 + 3];\n    var m20 = m[2 * 4 + 0];\n    var m21 = m[2 * 4 + 1];\n    var m22 = m[2 * 4 + 2];\n    var m23 = m[2 * 4 + 3];\n    var m30 = m[3 * 4 + 0];\n    var m31 = m[3 * 4 + 1];\n    var m32 = m[3 * 4 + 2];\n    var m33 = m[3 * 4 + 3];\n\n    dst[ 0] = m00;\n    dst[ 1] = m10;\n    dst[ 2] = m20;\n    dst[ 3] = m30;\n    dst[ 4] = m01;\n    dst[ 5] = m11;\n    dst[ 6] = m21;\n    dst[ 7] = m31;\n    dst[ 8] = m02;\n    dst[ 9] = m12;\n    dst[10] = m22;\n    dst[11] = m32;\n    dst[12] = m03;\n    dst[13] = m13;\n    dst[14] = m23;\n    dst[15] = m33;\n\n    return dst;\n  }\n\n  /**\n   * Computes the inverse of a 4-by-4 matrix.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The inverse of m.\n   * @memberOf module:twgl/m4\n   */\n  function inverse(m, dst) {\n    dst = dst || new MatType(16);\n\n    var m00 = m[0 * 4 + 0];\n    var m01 = m[0 * 4 + 1];\n    var m02 = m[0 * 4 + 2];\n    var m03 = m[0 * 4 + 3];\n    var m10 = m[1 * 4 + 0];\n    var m11 = m[1 * 4 + 1];\n    var m12 = m[1 * 4 + 2];\n    var m13 = m[1 * 4 + 3];\n    var m20 = m[2 * 4 + 0];\n    var m21 = m[2 * 4 + 1];\n    var m22 = m[2 * 4 + 2];\n    var m23 = m[2 * 4 + 3];\n    var m30 = m[3 * 4 + 0];\n    var m31 = m[3 * 4 + 1];\n    var m32 = m[3 * 4 + 2];\n    var m33 = m[3 * 4 + 3];\n    var tmp_0  = m22 * m33;\n    var tmp_1  = m32 * m23;\n    var tmp_2  = m12 * m33;\n    var tmp_3  = m32 * m13;\n    var tmp_4  = m12 * m23;\n    var tmp_5  = m22 * m13;\n    var tmp_6  = m02 * m33;\n    var tmp_7  = m32 * m03;\n    var tmp_8  = m02 * m23;\n    var tmp_9  = m22 * m03;\n    var tmp_10 = m02 * m13;\n    var tmp_11 = m12 * m03;\n    var tmp_12 = m20 * m31;\n    var tmp_13 = m30 * m21;\n    var tmp_14 = m10 * m31;\n    var tmp_15 = m30 * m11;\n    var tmp_16 = m10 * m21;\n    var tmp_17 = m20 * m11;\n    var tmp_18 = m00 * m31;\n    var tmp_19 = m30 * m01;\n    var tmp_20 = m00 * m21;\n    var tmp_21 = m20 * m01;\n    var tmp_22 = m00 * m11;\n    var tmp_23 = m10 * m01;\n\n    var t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n        (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n    var t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n        (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n    var t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n        (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n    var t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n        (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n    var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n    dst[ 0] = d * t0;\n    dst[ 1] = d * t1;\n    dst[ 2] = d * t2;\n    dst[ 3] = d * t3;\n    dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n            (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n    dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n            (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n    dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n            (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n    dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n            (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n    dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n            (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n    dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n            (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n    dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n            (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n    dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n            (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n    dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n            (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n    dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n            (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n    dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n            (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n    dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n            (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n    return dst;\n  }\n\n  /**\n   * Multiplies two 4-by-4 matrices; assumes that the given matrices are 4-by-4;\n   * assumes matrix entries are accessed in [row][column] fashion.\n   * @param {module:twgl/m4.Mat4} a The matrix on the left.\n   * @param {module:twgl/m4.Mat4} b The matrix on the right.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n   * @memberOf module:twgl/m4\n   */\n  function multiply(a, b, dst) {\n    dst = dst || new MatType(16);\n\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[ 4 + 0];\n    var a11 = a[ 4 + 1];\n    var a12 = a[ 4 + 2];\n    var a13 = a[ 4 + 3];\n    var a20 = a[ 8 + 0];\n    var a21 = a[ 8 + 1];\n    var a22 = a[ 8 + 2];\n    var a23 = a[ 8 + 3];\n    var a30 = a[12 + 0];\n    var a31 = a[12 + 1];\n    var a32 = a[12 + 2];\n    var a33 = a[12 + 3];\n    var b00 = b[0];\n    var b01 = b[1];\n    var b02 = b[2];\n    var b03 = b[3];\n    var b10 = b[ 4 + 0];\n    var b11 = b[ 4 + 1];\n    var b12 = b[ 4 + 2];\n    var b13 = b[ 4 + 3];\n    var b20 = b[ 8 + 0];\n    var b21 = b[ 8 + 1];\n    var b22 = b[ 8 + 2];\n    var b23 = b[ 8 + 3];\n    var b30 = b[12 + 0];\n    var b31 = b[12 + 1];\n    var b32 = b[12 + 2];\n    var b33 = b[12 + 3];\n\n    dst[ 0] = a00 * b00 + a01 * b10 + a02 * b20 + a03 * b30;\n    dst[ 1] = a00 * b01 + a01 * b11 + a02 * b21 + a03 * b31;\n    dst[ 2] = a00 * b02 + a01 * b12 + a02 * b22 + a03 * b32;\n    dst[ 3] = a00 * b03 + a01 * b13 + a02 * b23 + a03 * b33;\n    dst[ 4] = a10 * b00 + a11 * b10 + a12 * b20 + a13 * b30;\n    dst[ 5] = a10 * b01 + a11 * b11 + a12 * b21 + a13 * b31;\n    dst[ 6] = a10 * b02 + a11 * b12 + a12 * b22 + a13 * b32;\n    dst[ 7] = a10 * b03 + a11 * b13 + a12 * b23 + a13 * b33;\n    dst[ 8] = a20 * b00 + a21 * b10 + a22 * b20 + a23 * b30;\n    dst[ 9] = a20 * b01 + a21 * b11 + a22 * b21 + a23 * b31;\n    dst[10] = a20 * b02 + a21 * b12 + a22 * b22 + a23 * b32;\n    dst[11] = a20 * b03 + a21 * b13 + a22 * b23 + a23 * b33;\n    dst[12] = a30 * b00 + a31 * b10 + a32 * b20 + a33 * b30;\n    dst[13] = a30 * b01 + a31 * b11 + a32 * b21 + a33 * b31;\n    dst[14] = a30 * b02 + a31 * b12 + a32 * b22 + a33 * b32;\n    dst[15] = a30 * b03 + a31 * b13 + a32 * b23 + a33 * b33;\n\n    return dst;\n  }\n\n  /**\n   * Sets the translation component of a 4-by-4 matrix to the given\n   * vector.\n   * @param {module:twgl/m4.Mat4} a The matrix.\n   * @param {Vec3} v The vector.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} a once modified.\n   * @memberOf module:twgl/m4\n   */\n  function setTranslation(a, v, dst) {\n    dst = dst || identity();\n    if (a !== dst) {\n      dst[ 0] = a[ 0];\n      dst[ 1] = a[ 1];\n      dst[ 2] = a[ 2];\n      dst[ 3] = a[ 3];\n      dst[ 4] = a[ 4];\n      dst[ 5] = a[ 5];\n      dst[ 6] = a[ 6];\n      dst[ 7] = a[ 7];\n      dst[ 8] = a[ 8];\n      dst[ 9] = a[ 9];\n      dst[10] = a[10];\n      dst[11] = a[11];\n    }\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n  }\n\n  /**\n   * Returns the translation component of a 4-by-4 matrix as a vector with 3\n   * entries.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {Vec3} [dst] vector..\n   * @return {Vec3} The translation component of m.\n   * @memberOf module:twgl/m4\n   */\n  function getTranslation(m, dst) {\n    dst = dst || v3.create();\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n  }\n\n  /**\n   * Returns an axis of a 4x4 matrix as a vector with 3 entries\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n   * @return {Vec3} [dst] vector.\n   * @return {Vec3} The axis component of m.\n   * @memberOf module:twgl/m4\n   */\n  function getAxis(m, axis, dst) {\n    dst = dst || v3.create();\n    var off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n  }\n\n  /**\n   * Sets an axis of a 4x4 matrix as a vector with 3 entries\n   * @param {Vec3} v the axis vector\n   * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n   * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n   * @return {module:twgl/m4.Mat4} dst\n   * @memberOf module:twgl/m4\n   */\n  function setAxis(a, v, axis, dst) {\n    if (dst !== a) {\n      dst = copy(a, dst);\n    }\n    var off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    dst[off + 2] = v[2];\n    return dst;\n  }\n\n  /**\n   * Computes a 4-by-4 perspective transformation matrix given the angular height\n   * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n   * arguments define a frustum extending in the negative z direction.  The given\n   * angle is the vertical angle of the frustum, and the horizontal angle is\n   * determined to produce the given aspect ratio.  The arguments near and far are\n   * the distances to the near and far clipping planes.  Note that near and far\n   * are not z coordinates, but rather they are distances along the negative\n   * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n   * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n   * from 0 to 1 in the z dimension.\n   * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n   * @param {number} aspect The aspect ratio width / height.\n   * @param {number} zNear The depth (negative z coordinate)\n   *     of the near clipping plane.\n   * @param {number} zFar The depth (negative z coordinate)\n   *     of the far clipping plane.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The perspective matrix.\n   * @memberOf module:twgl/m4\n   */\n  function perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n    dst = dst || new MatType(16);\n\n    var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n    var rangeInv = 1.0 / (zNear - zFar);\n\n    dst[0]  = f / aspect;\n    dst[1]  = 0;\n    dst[2]  = 0;\n    dst[3]  = 0;\n\n    dst[4]  = 0;\n    dst[5]  = f;\n    dst[6]  = 0;\n    dst[7]  = 0;\n\n    dst[8]  = 0;\n    dst[9]  = 0;\n    dst[10] = (zNear + zFar) * rangeInv;\n    dst[11] = -1;\n\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = zNear * zFar * rangeInv * 2;\n    dst[15] = 0;\n\n    return dst;\n  }\n\n  /**\n   * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n   * bottom, and top dimensions of the near clipping plane as well as the\n   * near and far clipping plane distances.\n   * @param {number} left Left side of the near clipping plane viewport.\n   * @param {number} right Right side of the near clipping plane viewport.\n   * @param {number} top Top of the near clipping plane viewport.\n   * @param {number} bottom Bottom of the near clipping plane viewport.\n   * @param {number} near The depth (negative z coordinate)\n   *     of the near clipping plane.\n   * @param {number} far The depth (negative z coordinate)\n   *     of the far clipping plane.\n   * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n   * @return {module:twgl/m4.Mat4} The perspective matrix.\n   * @memberOf module:twgl/m4\n   */\n  function ortho(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n\n    dst[0]  = 2 / (right - left);\n    dst[1]  = 0;\n    dst[2]  = 0;\n    dst[3]  = 0;\n\n    dst[4]  = 0;\n    dst[5]  = 2 / (top - bottom);\n    dst[6]  = 0;\n    dst[7]  = 0;\n\n    dst[8]  = 0;\n    dst[9]  = 0;\n    dst[10] = -1 / (far - near);\n    dst[11] = 0;\n\n    dst[12] = (right + left) / (left - right);\n    dst[13] = (top + bottom) / (bottom - top);\n    dst[14] = -near / (near - far);\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Computes a 4-by-4 perspective transformation matrix given the left, right,\n   * top, bottom, near and far clipping planes. The arguments define a frustum\n   * extending in the negative z direction. The arguments near and far are the\n   * distances to the near and far clipping planes. Note that near and far are not\n   * z coordinates, but rather they are distances along the negative z-axis. The\n   * matrix generated sends the viewing frustum to the unit box. We assume a unit\n   * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n   * dimension.\n   * @param {number} left The x coordinate of the left plane of the box.\n   * @param {number} right The x coordinate of the right plane of the box.\n   * @param {number} bottom The y coordinate of the bottom plane of the box.\n   * @param {number} top The y coordinate of the right plane of the box.\n   * @param {number} near The negative z coordinate of the near plane of the box.\n   * @param {number} far The negative z coordinate of the far plane of the box.\n   * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n   * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n   * @memberOf module:twgl/m4\n   */\n  function frustum(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n\n    var dx = (right - left);\n    var dy = (top - bottom);\n    var dz = (near - far);\n\n    dst[ 0] = 2 * near / dx;\n    dst[ 1] = 0;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = 2 * near / dy;\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = (left + right) / dx;\n    dst[ 9] = (top + bottom) / dy;\n    dst[10] = far / dz;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = near * far / dz;\n    dst[15] = 0;\n\n    return dst;\n  }\n\n  /**\n   * Computes a 4-by-4 look-at transformation.\n   *\n   * This is a matrix which positions the camera itself. If you want\n   * a view matrix (a matrix which moves things in front of the camera)\n   * take the inverse of this.\n   *\n   * @param {Vec3} eye The position of the eye.\n   * @param {Vec3} target The position meant to be viewed.\n   * @param {Vec3} up A vector pointing up.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The look-at matrix.\n   * @memberOf module:twgl/m4\n   */\n  function lookAt(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n\n    var xAxis = tempV3a;\n    var yAxis = tempV3b;\n    var zAxis = tempV3c;\n\n    v3.normalize(\n        v3.subtract(eye, target, zAxis), zAxis);\n    v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n    v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n\n    dst[ 0] = xAxis[0];\n    dst[ 1] = xAxis[1];\n    dst[ 2] = xAxis[2];\n    dst[ 3] = 0;\n    dst[ 4] = yAxis[0];\n    dst[ 5] = yAxis[1];\n    dst[ 6] = yAxis[2];\n    dst[ 7] = 0;\n    dst[ 8] = zAxis[0];\n    dst[ 9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = eye[0];\n    dst[13] = eye[1];\n    dst[14] = eye[2];\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Creates a 4-by-4 matrix which translates by the given vector v.\n   * @param {Vec3} v The vector by\n   *     which to translate.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The translation matrix.\n   * @memberOf module:twgl/m4\n   */\n  function translation(v, dst) {\n    dst = dst || new MatType(16);\n\n    dst[ 0] = 1;\n    dst[ 1] = 0;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = 1;\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = 0;\n    dst[ 9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n  }\n\n  /**\n   * Modifies the given 4-by-4 matrix by translation by the given vector v.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {Vec3} v The vector by\n   *     which to translate.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} m once modified.\n   * @memberOf module:twgl/m4\n   */\n  function translate(m, v, dst) {\n    dst = dst || new MatType(16);\n\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n    var m00 = m[0];\n    var m01 = m[1];\n    var m02 = m[2];\n    var m03 = m[3];\n    var m10 = m[1 * 4 + 0];\n    var m11 = m[1 * 4 + 1];\n    var m12 = m[1 * 4 + 2];\n    var m13 = m[1 * 4 + 3];\n    var m20 = m[2 * 4 + 0];\n    var m21 = m[2 * 4 + 1];\n    var m22 = m[2 * 4 + 2];\n    var m23 = m[2 * 4 + 3];\n    var m30 = m[3 * 4 + 0];\n    var m31 = m[3 * 4 + 1];\n    var m32 = m[3 * 4 + 2];\n    var m33 = m[3 * 4 + 3];\n\n    if (m !== dst) {\n      dst[ 0] = m00;\n      dst[ 1] = m01;\n      dst[ 2] = m02;\n      dst[ 3] = m03;\n      dst[ 4] = m10;\n      dst[ 5] = m11;\n      dst[ 6] = m12;\n      dst[ 7] = m13;\n      dst[ 8] = m20;\n      dst[ 9] = m21;\n      dst[10] = m22;\n      dst[11] = m23;\n    }\n\n    dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n    dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n    dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n    dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n    return dst;\n  }\n\n  /**\n   * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The rotation matrix.\n   * @memberOf module:twgl/m4\n   */\n  function rotationX(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    dst[ 0] = 1;\n    dst[ 1] = 0;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = c;\n    dst[ 6] = s;\n    dst[ 7] = 0;\n    dst[ 8] = 0;\n    dst[ 9] = -s;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n   * angle.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} m once modified.\n   * @memberOf module:twgl/m4\n   */\n  function rotateX(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var m10 = m[4];\n    var m11 = m[5];\n    var m12 = m[6];\n    var m13 = m[7];\n    var m20 = m[8];\n    var m21 = m[9];\n    var m22 = m[10];\n    var m23 = m[11];\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    dst[4]  = c * m10 + s * m20;\n    dst[5]  = c * m11 + s * m21;\n    dst[6]  = c * m12 + s * m22;\n    dst[7]  = c * m13 + s * m23;\n    dst[8]  = c * m20 - s * m10;\n    dst[9]  = c * m21 - s * m11;\n    dst[10] = c * m22 - s * m12;\n    dst[11] = c * m23 - s * m13;\n\n    if (m !== dst) {\n      dst[ 0] = m[ 0];\n      dst[ 1] = m[ 1];\n      dst[ 2] = m[ 2];\n      dst[ 3] = m[ 3];\n      dst[12] = m[12];\n      dst[13] = m[13];\n      dst[14] = m[14];\n      dst[15] = m[15];\n    }\n\n    return dst;\n  }\n\n  /**\n   * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The rotation matrix.\n   * @memberOf module:twgl/m4\n   */\n  function rotationY(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    dst[ 0] = c;\n    dst[ 1] = 0;\n    dst[ 2] = -s;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = 1;\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = s;\n    dst[ 9] = 0;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n   * angle.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} m once modified.\n   * @memberOf module:twgl/m4\n   */\n  function rotateY(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var m00 = m[0 * 4 + 0];\n    var m01 = m[0 * 4 + 1];\n    var m02 = m[0 * 4 + 2];\n    var m03 = m[0 * 4 + 3];\n    var m20 = m[2 * 4 + 0];\n    var m21 = m[2 * 4 + 1];\n    var m22 = m[2 * 4 + 2];\n    var m23 = m[2 * 4 + 3];\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    dst[ 0] = c * m00 - s * m20;\n    dst[ 1] = c * m01 - s * m21;\n    dst[ 2] = c * m02 - s * m22;\n    dst[ 3] = c * m03 - s * m23;\n    dst[ 8] = c * m20 + s * m00;\n    dst[ 9] = c * m21 + s * m01;\n    dst[10] = c * m22 + s * m02;\n    dst[11] = c * m23 + s * m03;\n\n    if (m !== dst) {\n      dst[ 4] = m[ 4];\n      dst[ 5] = m[ 5];\n      dst[ 6] = m[ 6];\n      dst[ 7] = m[ 7];\n      dst[12] = m[12];\n      dst[13] = m[13];\n      dst[14] = m[14];\n      dst[15] = m[15];\n    }\n\n    return dst;\n  }\n\n  /**\n   * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The rotation matrix.\n   * @memberOf module:twgl/m4\n   */\n  function rotationZ(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    dst[ 0] = c;\n    dst[ 1] = s;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = -s;\n    dst[ 5] = c;\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = 0;\n    dst[ 9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n   * angle.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} m once modified.\n   * @memberOf module:twgl/m4\n   */\n  function rotateZ(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var m00 = m[0 * 4 + 0];\n    var m01 = m[0 * 4 + 1];\n    var m02 = m[0 * 4 + 2];\n    var m03 = m[0 * 4 + 3];\n    var m10 = m[1 * 4 + 0];\n    var m11 = m[1 * 4 + 1];\n    var m12 = m[1 * 4 + 2];\n    var m13 = m[1 * 4 + 3];\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    dst[ 0] = c * m00 + s * m10;\n    dst[ 1] = c * m01 + s * m11;\n    dst[ 2] = c * m02 + s * m12;\n    dst[ 3] = c * m03 + s * m13;\n    dst[ 4] = c * m10 - s * m00;\n    dst[ 5] = c * m11 - s * m01;\n    dst[ 6] = c * m12 - s * m02;\n    dst[ 7] = c * m13 - s * m03;\n\n    if (m !== dst) {\n      dst[ 8] = m[ 8];\n      dst[ 9] = m[ 9];\n      dst[10] = m[10];\n      dst[11] = m[11];\n      dst[12] = m[12];\n      dst[13] = m[13];\n      dst[14] = m[14];\n      dst[15] = m[15];\n    }\n\n    return dst;\n  }\n\n  /**\n   * Creates a 4-by-4 matrix which rotates around the given axis by the given\n   * angle.\n   * @param {Vec3} axis The axis\n   *     about which to rotate.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n   *     around the axis.\n   * @memberOf module:twgl/m4\n   */\n  function axisRotation(axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var x = axis[0];\n    var y = axis[1];\n    var z = axis[2];\n    var n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    var xx = x * x;\n    var yy = y * y;\n    var zz = z * z;\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n    var oneMinusCosine = 1 - c;\n\n    dst[ 0] = xx + (1 - xx) * c;\n    dst[ 1] = x * y * oneMinusCosine + z * s;\n    dst[ 2] = x * z * oneMinusCosine - y * s;\n    dst[ 3] = 0;\n    dst[ 4] = x * y * oneMinusCosine - z * s;\n    dst[ 5] = yy + (1 - yy) * c;\n    dst[ 6] = y * z * oneMinusCosine + x * s;\n    dst[ 7] = 0;\n    dst[ 8] = x * z * oneMinusCosine + y * s;\n    dst[ 9] = y * z * oneMinusCosine - x * s;\n    dst[10] = zz + (1 - zz) * c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n   * given angle.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {Vec3} axis The axis\n   *     about which to rotate.\n   * @param {number} angleInRadians The angle by which to rotate (in radians).\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} m once modified.\n   * @memberOf module:twgl/m4\n   */\n  function axisRotate(m, axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n\n    var x = axis[0];\n    var y = axis[1];\n    var z = axis[2];\n    var n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    var xx = x * x;\n    var yy = y * y;\n    var zz = z * z;\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n    var oneMinusCosine = 1 - c;\n\n    var r00 = xx + (1 - xx) * c;\n    var r01 = x * y * oneMinusCosine + z * s;\n    var r02 = x * z * oneMinusCosine - y * s;\n    var r10 = x * y * oneMinusCosine - z * s;\n    var r11 = yy + (1 - yy) * c;\n    var r12 = y * z * oneMinusCosine + x * s;\n    var r20 = x * z * oneMinusCosine + y * s;\n    var r21 = y * z * oneMinusCosine - x * s;\n    var r22 = zz + (1 - zz) * c;\n\n    var m00 = m[0];\n    var m01 = m[1];\n    var m02 = m[2];\n    var m03 = m[3];\n    var m10 = m[4];\n    var m11 = m[5];\n    var m12 = m[6];\n    var m13 = m[7];\n    var m20 = m[8];\n    var m21 = m[9];\n    var m22 = m[10];\n    var m23 = m[11];\n\n    dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n    dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n    dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n    dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n    dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n    dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n    dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n    dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n    dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n    dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n    dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n    dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n    if (m !== dst) {\n      dst[12] = m[12];\n      dst[13] = m[13];\n      dst[14] = m[14];\n      dst[15] = m[15];\n    }\n\n    return dst;\n  }\n\n  /**\n   * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n   * the corresponding entry in the given vector; assumes the vector has three\n   * entries.\n   * @param {Vec3} v A vector of\n   *     three entries specifying the factor by which to scale in each dimension.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} The scaling matrix.\n   * @memberOf module:twgl/m4\n   */\n  function scaling(v, dst) {\n    dst = dst || new MatType(16);\n\n    dst[ 0] = v[0];\n    dst[ 1] = 0;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = v[1];\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = 0;\n    dst[ 9] = 0;\n    dst[10] = v[2];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  }\n\n  /**\n   * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n   * given by the corresponding entry in the given vector; assumes the vector has\n   * three entries.\n   * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n   * @param {Vec3} v A vector of three entries specifying the\n   *     factor by which to scale in each dimension.\n   * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n   * @return {module:twgl/m4.Mat4} m once modified.\n   * @memberOf module:twgl/m4\n   */\n  function scale(m, v, dst) {\n    dst = dst || new MatType(16);\n\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n\n    dst[ 0] = v0 * m[0 * 4 + 0];\n    dst[ 1] = v0 * m[0 * 4 + 1];\n    dst[ 2] = v0 * m[0 * 4 + 2];\n    dst[ 3] = v0 * m[0 * 4 + 3];\n    dst[ 4] = v1 * m[1 * 4 + 0];\n    dst[ 5] = v1 * m[1 * 4 + 1];\n    dst[ 6] = v1 * m[1 * 4 + 2];\n    dst[ 7] = v1 * m[1 * 4 + 3];\n    dst[ 8] = v2 * m[2 * 4 + 0];\n    dst[ 9] = v2 * m[2 * 4 + 1];\n    dst[10] = v2 * m[2 * 4 + 2];\n    dst[11] = v2 * m[2 * 4 + 3];\n\n    if (m !== dst) {\n      dst[12] = m[12];\n      dst[13] = m[13];\n      dst[14] = m[14];\n      dst[15] = m[15];\n    }\n\n    return dst;\n  }\n\n  /**\n   * Takes a 4-by-4 matrix and a vector with 3 entries,\n   * interprets the vector as a point, transforms that point by the matrix, and\n   * returns the result as a vector with 3 entries.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {Vec3} v The point.\n   * @param {Vec3} dst optional vec3 to store result\n   * @return {Vec3} dst or new vec3 if not provided\n   * @memberOf module:twgl/m4\n   */\n  function transformPoint(m, v, dst) {\n    dst = dst || v3.create();\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n    var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n    dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n    dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n    dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n    return dst;\n  }\n\n  /**\n   * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n   * direction, transforms that direction by the matrix, and returns the result;\n   * assumes the transformation of 3-dimensional space represented by the matrix\n   * is parallel-preserving, i.e. any combination of rotation, scaling and\n   * translation, but not a perspective distortion. Returns a vector with 3\n   * entries.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {Vec3} v The direction.\n   * @param {Vec3} dst optional Vec3 to store result\n   * @return {Vec3} dst or new Vec3 if not provided\n   * @memberOf module:twgl/m4\n   */\n  function transformDirection(m, v, dst) {\n    dst = dst || v3.create();\n\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n\n    dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n    return dst;\n  }\n\n  /**\n   * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n   * as a normal to a surface, and computes a vector which is normal upon\n   * transforming that surface by the matrix. The effect of this function is the\n   * same as transforming v (as a direction) by the inverse-transpose of m.  This\n   * function assumes the transformation of 3-dimensional space represented by the\n   * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n   * translation, but not a perspective distortion.  Returns a vector with 3\n   * entries.\n   * @param {module:twgl/m4.Mat4} m The matrix.\n   * @param {Vec3} v The normal.\n   * @param {Vec3} [dst] The direction.\n   * @return {Vec3} The transformed direction.\n   * @memberOf module:twgl/m4\n   */\n  function transformNormal(m, v, dst) {\n    dst = dst || v3.create();\n    var mi = inverse(m);\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n\n    dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n    dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n    dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n    return dst;\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"axisRotate\": axisRotate,\n    \"axisRotation\": axisRotation,\n    \"create\": identity,\n    \"copy\": copy,\n    \"frustum\": frustum,\n    \"getAxis\": getAxis,\n    \"getTranslation\": getTranslation,\n    \"identity\": identity,\n    \"inverse\": inverse,\n    \"lookAt\": lookAt,\n    \"multiply\": multiply,\n    \"negate\": negate,\n    \"ortho\": ortho,\n    \"perspective\": perspective,\n    \"rotateX\": rotateX,\n    \"rotateY\": rotateY,\n    \"rotateZ\": rotateZ,\n    \"rotateAxis\": axisRotate,\n    \"rotationX\": rotationX,\n    \"rotationY\": rotationY,\n    \"rotationZ\": rotationZ,\n    \"scale\": scale,\n    \"scaling\": scaling,\n    \"setAxis\": setAxis,\n    \"setDefaultType\": setDefaultType,\n    \"setTranslation\": setTranslation,\n    \"transformDirection\": transformDirection,\n    \"transformNormal\": transformNormal,\n    \"transformPoint\": transformPoint,\n    \"translate\": translate,\n    \"translation\": translation,\n    \"transpose\": transpose,\n  };\n});\n\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        var arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\ndefine('twgl/primitives',[\n    './attributes',\n    './twgl',\n    './utils',\n    './m4',\n    './v3',\n  ], function(\n    attributes,\n    twgl,\n    utils,\n    m4,\n    v3\n  ) {\n  \n\n  var getArray = attributes.getArray_;  // eslint-disable-line\n  var getNumComponents = attributes.getNumComponents_;  // eslint-disable-line\n\n  /**\n   * Add `push` to a typed array. It just keeps a 'cursor'\n   * and allows use to `push` values into the array so we\n   * don't have to manually compute offsets\n   * @param {TypedArray} typedArray TypedArray to augment\n   * @param {number} numComponents number of components.\n   */\n  function augmentTypedArray(typedArray, numComponents) {\n    var cursor = 0;\n    typedArray.push = function() {\n      for (var ii = 0; ii < arguments.length; ++ii) {\n        var value = arguments[ii];\n        if (value instanceof Array || (value.buffer && value.buffer instanceof ArrayBuffer)) {\n          for (var jj = 0; jj < value.length; ++jj) {\n            typedArray[cursor++] = value[jj];\n          }\n        } else {\n          typedArray[cursor++] = value;\n        }\n      }\n    };\n    typedArray.reset = function(opt_index) {\n      cursor = opt_index || 0;\n    };\n    typedArray.numComponents = numComponents;\n    Object.defineProperty(typedArray, 'numElements', {\n      get: function() {\n        return this.length / this.numComponents | 0;\n      },\n    });\n    return typedArray;\n  }\n\n  /**\n   * creates a typed array with a `push` function attached\n   * so that you can easily *push* values.\n   *\n   * `push` can take multiple arguments. If an argument is an array each element\n   * of the array will be added to the typed array.\n   *\n   * Example:\n   *\n   *     var array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n   *     array.push(1, 2, 3);\n   *     array.push([4, 5, 6]);\n   *     // array now contains [1, 2, 3, 4, 5, 6]\n   *\n   * Also has `numComponents` and `numElements` properties.\n   *\n   * @param {number} numComponents number of components\n   * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n   * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n   * @return {ArrayBuffer} A typed array.\n   * @memberOf module:twgl/primitives\n   */\n  function createAugmentedTypedArray(numComponents, numElements, opt_type) {\n    var Type = opt_type || Float32Array;\n    return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n  }\n\n  function allButIndices(name) {\n    return name !== \"indices\";\n  }\n\n  /**\n   * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n   * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n   * @return {Object.<string, TypedArray>} The deindexed vertices\n   * @memberOf module:twgl/primitives\n   */\n  function deindexVertices(vertices) {\n    var indices = vertices.indices;\n    var newVertices = {};\n    var numElements = indices.length;\n\n    function expandToUnindexed(channel) {\n      var srcBuffer = vertices[channel];\n      var numComponents = srcBuffer.numComponents;\n      var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n      for (var ii = 0; ii < numElements; ++ii) {\n        var ndx = indices[ii];\n        var offset = ndx * numComponents;\n        for (var jj = 0; jj < numComponents; ++jj) {\n          dstBuffer.push(srcBuffer[offset + jj]);\n        }\n      }\n      newVertices[channel] = dstBuffer;\n    }\n\n    Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n    return newVertices;\n  }\n\n  /**\n   * flattens the normals of deindexed vertices in place.\n   * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n   * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n   * @memberOf module:twgl/primitives\n   */\n  function flattenNormals(vertices) {\n    if (vertices.indices) {\n      throw \"can't flatten normals of indexed vertices. deindex them first\";\n    }\n\n    var normals = vertices.normal;\n    var numNormals = normals.length;\n    for (var ii = 0; ii < numNormals; ii += 9) {\n      // pull out the 3 normals for this triangle\n      var nax = normals[ii + 0];\n      var nay = normals[ii + 1];\n      var naz = normals[ii + 2];\n\n      var nbx = normals[ii + 3];\n      var nby = normals[ii + 4];\n      var nbz = normals[ii + 5];\n\n      var ncx = normals[ii + 6];\n      var ncy = normals[ii + 7];\n      var ncz = normals[ii + 8];\n\n      // add them\n      var nx = nax + nbx + ncx;\n      var ny = nay + nby + ncy;\n      var nz = naz + nbz + ncz;\n\n      // normalize them\n      var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n      nx /= length;\n      ny /= length;\n      nz /= length;\n\n      // copy them back in\n      normals[ii + 0] = nx;\n      normals[ii + 1] = ny;\n      normals[ii + 2] = nz;\n\n      normals[ii + 3] = nx;\n      normals[ii + 4] = ny;\n      normals[ii + 5] = nz;\n\n      normals[ii + 6] = nx;\n      normals[ii + 7] = ny;\n      normals[ii + 8] = nz;\n    }\n\n    return vertices;\n  }\n\n  function applyFuncToV3Array(array, matrix, fn) {\n    var len = array.length;\n    var tmp = new Float32Array(3);\n    for (var ii = 0; ii < len; ii += 3) {\n      fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n      array[ii    ] = tmp[0];\n      array[ii + 1] = tmp[1];\n      array[ii + 2] = tmp[2];\n    }\n  }\n\n  function transformNormal(mi, v, dst) {\n    dst = dst || v3.create();\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n\n    dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n    dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n    dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n    return dst;\n  }\n\n  /**\n   * Reorients directions by the given matrix..\n   * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n   * @param {Matrix} matrix A matrix to multiply by.\n   * @return {number[]|TypedArray} the same array that was passed in\n   * @memberOf module:twgl/primitives\n   */\n  function reorientDirections(array, matrix) {\n    applyFuncToV3Array(array, matrix, m4.transformDirection);\n    return array;\n  }\n\n  /**\n   * Reorients normals by the inverse-transpose of the given\n   * matrix..\n   * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n   * @param {Matrix} matrix A matrix to multiply by.\n   * @return {number[]|TypedArray} the same array that was passed in\n   * @memberOf module:twgl/primitives\n   */\n  function reorientNormals(array, matrix) {\n    applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n    return array;\n  }\n\n  /**\n   * Reorients positions by the given matrix. In other words, it\n   * multiplies each vertex by the given matrix.\n   * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n   * @param {Matrix} matrix A matrix to multiply by.\n   * @return {number[]|TypedArray} the same array that was passed in\n   * @memberOf module:twgl/primitives\n   */\n  function reorientPositions(array, matrix) {\n    applyFuncToV3Array(array, matrix, m4.transformPoint);\n    return array;\n  }\n\n  /**\n   * Reorients arrays by the given matrix. Assumes arrays have\n   * names that contains 'pos' could be reoriented as positions,\n   * 'binorm' or 'tan' as directions, and 'norm' as normals.\n   *\n   * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n   * @param {Matrix} matrix matrix to reorient by.\n   * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n   * @memberOf module:twgl/primitives\n   */\n  function reorientVertices(arrays, matrix) {\n    Object.keys(arrays).forEach(function(name) {\n      var array = arrays[name];\n      if (name.indexOf(\"pos\") >= 0) {\n        reorientPositions(array, matrix);\n      } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n        reorientDirections(array, matrix);\n      } else if (name.indexOf(\"norm\") >= 0) {\n        reorientNormals(array, matrix);\n      }\n    });\n    return arrays;\n  }\n\n  /**\n   * Creates XY quad BufferInfo\n   *\n   * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n   * If you want a unit quad with that goes from 0 to 1 you'd call it with\n   *\n   *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n   *\n   * If you want a unit quad centered above 0,0 you'd call it with\n   *\n   *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n   * @param {number} [xOffset] the amount to offset the quad in X\n   * @param {number} [yOffset] the amount to offset the quad in Y\n   * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n   * @memberOf module:twgl/primitives\n   * @function createXYQuadBufferInfo\n   */\n\n  /**\n   * Creates XY quad Buffers\n   *\n   * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n   * If you want a unit quad with that goes from 0 to 1 you'd call it with\n   *\n   *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n   *\n   * If you want a unit quad centered above 0,0 you'd call it with\n   *\n   *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n   * @param {number} [xOffset] the amount to offset the quad in X\n   * @param {number} [yOffset] the amount to offset the quad in Y\n   * @return {module:twgl.BufferInfo} the created XY Quad buffers\n   * @memberOf module:twgl/primitives\n   * @function createXYQuadBuffers\n   */\n\n  /**\n   * Creates XY quad vertices\n   *\n   * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n   * If you want a unit quad with that goes from 0 to 1 you'd call it with\n   *\n   *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n   *\n   * If you want a unit quad centered above 0,0 you'd call it with\n   *\n   *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n   *\n   * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n   * @param {number} [xOffset] the amount to offset the quad in X\n   * @param {number} [yOffset] the amount to offset the quad in Y\n   * @return {Object.<string, TypedArray> the created XY Quad vertices\n   * @memberOf module:twgl/primitives\n   */\n  function createXYQuadVertices(size, xOffset, yOffset) {\n    size = size || 2;\n    xOffset = xOffset || 0;\n    yOffset = yOffset || 0;\n    size *= 0.5;\n    return {\n      position: {\n        numComponents: 2,\n        data: [\n          xOffset + -1 * size, yOffset + -1 * size,\n          xOffset +  1 * size, yOffset + -1 * size,\n          xOffset + -1 * size, yOffset +  1 * size,\n          xOffset +  1 * size, yOffset +  1 * size,\n        ],\n      },\n      normal: [\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n      ],\n      texcoord: [\n        0, 0,\n        1, 0,\n        0, 1,\n        1, 1,\n      ],\n      indices: [ 0, 1, 2, 2, 1, 3 ],\n    };\n  }\n\n  /**\n   * Creates XZ plane BufferInfo.\n   *\n   * The created plane has position, normal, and texcoord data\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} [width] Width of the plane. Default = 1\n   * @param {number} [depth] Depth of the plane. Default = 1\n   * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n   * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n   * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n   * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createPlaneBufferInfo\n   */\n\n  /**\n   * Creates XZ plane buffers.\n   *\n   * The created plane has position, normal, and texcoord data\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} [width] Width of the plane. Default = 1\n   * @param {number} [depth] Depth of the plane. Default = 1\n   * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n   * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n   * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n   * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n   * @memberOf module:twgl/primitives\n   * @function createPlaneBuffers\n   */\n\n  /**\n   * Creates XZ plane vertices.\n   *\n   * The created plane has position, normal, and texcoord data\n   *\n   * @param {number} [width] Width of the plane. Default = 1\n   * @param {number} [depth] Depth of the plane. Default = 1\n   * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n   * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n   * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n   * @return {Object.<string, TypedArray>} The created plane vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function createPlaneVertices(\n      width,\n      depth,\n      subdivisionsWidth,\n      subdivisionsDepth,\n      matrix) {\n    width = width || 1;\n    depth = depth || 1;\n    subdivisionsWidth = subdivisionsWidth || 1;\n    subdivisionsDepth = subdivisionsDepth || 1;\n    matrix = matrix || m4.identity();\n\n    var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n    var positions = createAugmentedTypedArray(3, numVertices);\n    var normals = createAugmentedTypedArray(3, numVertices);\n    var texcoords = createAugmentedTypedArray(2, numVertices);\n\n    for (var z = 0; z <= subdivisionsDepth; z++) {\n      for (var x = 0; x <= subdivisionsWidth; x++) {\n        var u = x / subdivisionsWidth;\n        var v = z / subdivisionsDepth;\n        positions.push(\n            width * u - width * 0.5,\n            0,\n            depth * v - depth * 0.5);\n        normals.push(0, 1, 0);\n        texcoords.push(u, v);\n      }\n    }\n\n    var numVertsAcross = subdivisionsWidth + 1;\n    var indices = createAugmentedTypedArray(\n        3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n    for (var z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n      for (var x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n        // Make triangle 1 of quad.\n        indices.push(\n            (z + 0) * numVertsAcross + x,\n            (z + 1) * numVertsAcross + x,\n            (z + 0) * numVertsAcross + x + 1);\n\n        // Make triangle 2 of quad.\n        indices.push(\n            (z + 1) * numVertsAcross + x,\n            (z + 1) * numVertsAcross + x + 1,\n            (z + 0) * numVertsAcross + x + 1);\n      }\n    }\n\n    var arrays = reorientVertices({\n      position: positions,\n      normal: normals,\n      texcoord: texcoords,\n      indices: indices,\n    }, matrix);\n    return arrays;\n  }\n\n  /**\n   * Creates sphere BufferInfo.\n   *\n   * The created sphere has position, normal, and texcoord data\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius radius of the sphere.\n   * @param {number} subdivisionsAxis number of steps around the sphere.\n   * @param {number} subdivisionsHeight number of vertically on the sphere.\n   * @param {number} [opt_startLatitudeInRadians] where to start the\n   *     top of the sphere. Default = 0.\n   * @param {number} [opt_endLatitudeInRadians] Where to end the\n   *     bottom of the sphere. Default = Math.PI.\n   * @param {number} [opt_startLongitudeInRadians] where to start\n   *     wrapping the sphere. Default = 0.\n   * @param {number} [opt_endLongitudeInRadians] where to end\n   *     wrapping the sphere. Default = 2 * Math.PI.\n   * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createSphereBufferInfo\n   */\n\n  /**\n   * Creates sphere buffers.\n   *\n   * The created sphere has position, normal, and texcoord data\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius radius of the sphere.\n   * @param {number} subdivisionsAxis number of steps around the sphere.\n   * @param {number} subdivisionsHeight number of vertically on the sphere.\n   * @param {number} [opt_startLatitudeInRadians] where to start the\n   *     top of the sphere. Default = 0.\n   * @param {number} [opt_endLatitudeInRadians] Where to end the\n   *     bottom of the sphere. Default = Math.PI.\n   * @param {number} [opt_startLongitudeInRadians] where to start\n   *     wrapping the sphere. Default = 0.\n   * @param {number} [opt_endLongitudeInRadians] where to end\n   *     wrapping the sphere. Default = 2 * Math.PI.\n   * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n   * @memberOf module:twgl/primitives\n   * @function createSphereBuffers\n   */\n\n  /**\n   * Creates sphere vertices.\n   *\n   * The created sphere has position, normal, and texcoord data\n   *\n   * @param {number} radius radius of the sphere.\n   * @param {number} subdivisionsAxis number of steps around the sphere.\n   * @param {number} subdivisionsHeight number of vertically on the sphere.\n   * @param {number} [opt_startLatitudeInRadians] where to start the\n   *     top of the sphere. Default = 0.\n   * @param {number} [opt_endLatitudeInRadians] Where to end the\n   *     bottom of the sphere. Default = Math.PI.\n   * @param {number} [opt_startLongitudeInRadians] where to start\n   *     wrapping the sphere. Default = 0.\n   * @param {number} [opt_endLongitudeInRadians] where to end\n   *     wrapping the sphere. Default = 2 * Math.PI.\n   * @return {Object.<string, TypedArray>} The created sphere vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function createSphereVertices(\n      radius,\n      subdivisionsAxis,\n      subdivisionsHeight,\n      opt_startLatitudeInRadians,\n      opt_endLatitudeInRadians,\n      opt_startLongitudeInRadians,\n      opt_endLongitudeInRadians) {\n    if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n      throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n    }\n\n    opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n    opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n    opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n    opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n    var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n    var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n    // We are going to generate our sphere by iterating through its\n    // spherical coordinates and generating 2 triangles for each quad on a\n    // ring of the sphere.\n    var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n    var positions = createAugmentedTypedArray(3, numVertices);\n    var normals   = createAugmentedTypedArray(3, numVertices);\n    var texcoords = createAugmentedTypedArray(2 , numVertices);\n\n    // Generate the individual vertices in our vertex buffer.\n    for (var y = 0; y <= subdivisionsHeight; y++) {\n      for (var x = 0; x <= subdivisionsAxis; x++) {\n        // Generate a vertex based on its spherical coordinates\n        var u = x / subdivisionsAxis;\n        var v = y / subdivisionsHeight;\n        var theta = longRange * u;\n        var phi = latRange * v;\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta);\n        var sinPhi = Math.sin(phi);\n        var cosPhi = Math.cos(phi);\n        var ux = cosTheta * sinPhi;\n        var uy = cosPhi;\n        var uz = sinTheta * sinPhi;\n        positions.push(radius * ux, radius * uy, radius * uz);\n        normals.push(ux, uy, uz);\n        texcoords.push(1 - u, v);\n      }\n    }\n\n    var numVertsAround = subdivisionsAxis + 1;\n    var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n    for (var x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n      for (var y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n        // Make triangle 1 of quad.\n        indices.push(\n            (y + 0) * numVertsAround + x,\n            (y + 0) * numVertsAround + x + 1,\n            (y + 1) * numVertsAround + x);\n\n        // Make triangle 2 of quad.\n        indices.push(\n            (y + 1) * numVertsAround + x,\n            (y + 0) * numVertsAround + x + 1,\n            (y + 1) * numVertsAround + x + 1);\n      }\n    }\n\n    return {\n      position: positions,\n      normal: normals,\n      texcoord: texcoords,\n      indices: indices,\n    };\n  }\n\n  /**\n   * Array of the indices of corners of each face of a cube.\n   * @type {Array.<number[]>}\n   */\n  var CUBE_FACE_INDICES = [\n    [3, 7, 5, 1],  // right\n    [6, 2, 0, 4],  // left\n    [6, 7, 3, 2],  // ??\n    [0, 1, 5, 4],  // ??\n    [7, 6, 4, 5],  // front\n    [2, 3, 1, 0],  // back\n  ];\n\n  /**\n   * Creates a BufferInfo for a cube.\n   *\n   * The cube is created around the origin. (-size / 2, size / 2).\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} [size] width, height and depth of the cube.\n   * @return {module:twgl.BufferInfo} The created BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createCubeBufferInfo\n   */\n\n  /**\n   * Creates the buffers and indices for a cube.\n   *\n   * The cube is created around the origin. (-size / 2, size / 2).\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} [size] width, height and depth of the cube.\n   * @return {Object.<string, WebGLBuffer>} The created buffers.\n   * @memberOf module:twgl/primitives\n   * @function createCubeBuffers\n   */\n\n  /**\n   * Creates the vertices and indices for a cube.\n   *\n   * The cube is created around the origin. (-size / 2, size / 2).\n   *\n   * @param {number} [size] width, height and depth of the cube.\n   * @return {Object.<string, TypedArray>} The created vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function createCubeVertices(size) {\n    size = size || 1;\n    var k = size / 2;\n\n    var cornerVertices = [\n      [-k, -k, -k],\n      [+k, -k, -k],\n      [-k, +k, -k],\n      [+k, +k, -k],\n      [-k, -k, +k],\n      [+k, -k, +k],\n      [-k, +k, +k],\n      [+k, +k, +k],\n    ];\n\n    var faceNormals = [\n      [+1, +0, +0],\n      [-1, +0, +0],\n      [+0, +1, +0],\n      [+0, -1, +0],\n      [+0, +0, +1],\n      [+0, +0, -1],\n    ];\n\n    var uvCoords = [\n      [1, 0],\n      [0, 0],\n      [0, 1],\n      [1, 1],\n    ];\n\n    var numVertices = 6 * 4;\n    var positions = createAugmentedTypedArray(3, numVertices);\n    var normals   = createAugmentedTypedArray(3, numVertices);\n    var texcoords = createAugmentedTypedArray(2 , numVertices);\n    var indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n    for (var f = 0; f < 6; ++f) {\n      var faceIndices = CUBE_FACE_INDICES[f];\n      for (var v = 0; v < 4; ++v) {\n        var position = cornerVertices[faceIndices[v]];\n        var normal = faceNormals[f];\n        var uv = uvCoords[v];\n\n        // Each face needs all four vertices because the normals and texture\n        // coordinates are not all the same.\n        positions.push(position);\n        normals.push(normal);\n        texcoords.push(uv);\n\n      }\n      // Two triangles make a square face.\n      var offset = 4 * f;\n      indices.push(offset + 0, offset + 1, offset + 2);\n      indices.push(offset + 0, offset + 2, offset + 3);\n    }\n\n    return {\n      position: positions,\n      normal: normals,\n      texcoord: texcoords,\n      indices: indices,\n    };\n  }\n\n  /**\n   * Creates a BufferInfo for a truncated cone, which is like a cylinder\n   * except that it has different top and bottom radii. A truncated cone\n   * can also be used to create cylinders and regular cones. The\n   * truncated cone will be created centered about the origin, with the\n   * y axis as its vertical axis.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} bottomRadius Bottom radius of truncated cone.\n   * @param {number} topRadius Top radius of truncated cone.\n   * @param {number} height Height of truncated cone.\n   * @param {number} radialSubdivisions The number of subdivisions around the\n   *     truncated cone.\n   * @param {number} verticalSubdivisions The number of subdivisions down the\n   *     truncated cone.\n   * @param {boolean} [opt_topCap] Create top cap. Default = true.\n   * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n   * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createTruncatedConeBufferInfo\n   */\n\n  /**\n   * Creates buffers for a truncated cone, which is like a cylinder\n   * except that it has different top and bottom radii. A truncated cone\n   * can also be used to create cylinders and regular cones. The\n   * truncated cone will be created centered about the origin, with the\n   * y axis as its vertical axis.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} bottomRadius Bottom radius of truncated cone.\n   * @param {number} topRadius Top radius of truncated cone.\n   * @param {number} height Height of truncated cone.\n   * @param {number} radialSubdivisions The number of subdivisions around the\n   *     truncated cone.\n   * @param {number} verticalSubdivisions The number of subdivisions down the\n   *     truncated cone.\n   * @param {boolean} [opt_topCap] Create top cap. Default = true.\n   * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n   * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n   * @memberOf module:twgl/primitives\n   * @function createTruncatedConeBuffers\n   */\n\n  /**\n   * Creates vertices for a truncated cone, which is like a cylinder\n   * except that it has different top and bottom radii. A truncated cone\n   * can also be used to create cylinders and regular cones. The\n   * truncated cone will be created centered about the origin, with the\n   * y axis as its vertical axis. .\n   *\n   * @param {number} bottomRadius Bottom radius of truncated cone.\n   * @param {number} topRadius Top radius of truncated cone.\n   * @param {number} height Height of truncated cone.\n   * @param {number} radialSubdivisions The number of subdivisions around the\n   *     truncated cone.\n   * @param {number} verticalSubdivisions The number of subdivisions down the\n   *     truncated cone.\n   * @param {boolean} [opt_topCap] Create top cap. Default = true.\n   * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n   * @return {Object.<string, TypedArray>} The created cone vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function createTruncatedConeVertices(\n      bottomRadius,\n      topRadius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      opt_topCap,\n      opt_bottomCap) {\n    if (radialSubdivisions < 3) {\n      throw Error('radialSubdivisions must be 3 or greater');\n    }\n\n    if (verticalSubdivisions < 1) {\n      throw Error('verticalSubdivisions must be 1 or greater');\n    }\n\n    var topCap = (opt_topCap === undefined) ? true : opt_topCap;\n    var bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n    var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n    var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n    var positions = createAugmentedTypedArray(3, numVertices);\n    var normals   = createAugmentedTypedArray(3, numVertices);\n    var texcoords = createAugmentedTypedArray(2, numVertices);\n    var indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n\n    var vertsAroundEdge = radialSubdivisions + 1;\n\n    // The slant of the cone is constant across its surface\n    var slant = Math.atan2(bottomRadius - topRadius, height);\n    var cosSlant = Math.cos(slant);\n    var sinSlant = Math.sin(slant);\n\n    var start = topCap ? -2 : 0;\n    var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n    for (var yy = start; yy <= end; ++yy) {\n      var v = yy / verticalSubdivisions;\n      var y = height * v;\n      var ringRadius;\n      if (yy < 0) {\n        y = 0;\n        v = 1;\n        ringRadius = bottomRadius;\n      } else if (yy > verticalSubdivisions) {\n        y = height;\n        v = 1;\n        ringRadius = topRadius;\n      } else {\n        ringRadius = bottomRadius +\n          (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n      }\n      if (yy === -2 || yy === verticalSubdivisions + 2) {\n        ringRadius = 0;\n        v = 0;\n      }\n      y -= height / 2;\n      for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n        var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n        var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n        positions.push(sin * ringRadius, y, cos * ringRadius);\n        normals.push(\n            (yy < 0 || yy > verticalSubdivisions) ? 0 : (sin * cosSlant),\n            (yy < 0) ? -1 : (yy > verticalSubdivisions ? 1 : sinSlant),\n            (yy < 0 || yy > verticalSubdivisions) ? 0 : (cos * cosSlant));\n        texcoords.push((ii / radialSubdivisions), 1 - v);\n      }\n    }\n\n    for (var yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n      for (var ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n        indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                     vertsAroundEdge * (yy + 0) + 1 + ii,\n                     vertsAroundEdge * (yy + 1) + 1 + ii);\n        indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                     vertsAroundEdge * (yy + 1) + 1 + ii,\n                     vertsAroundEdge * (yy + 1) + 0 + ii);\n      }\n    }\n\n    return {\n      position: positions,\n      normal: normals,\n      texcoord: texcoords,\n      indices: indices,\n    };\n  }\n\n  /**\n   * Expands RLE data\n   * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n   * @param {number[]} [padding] value to add each entry with.\n   * @return {number[]} the expanded rleData\n   */\n  function expandRLEData(rleData, padding) {\n    padding = padding || [];\n    var data = [];\n    for (var ii = 0; ii < rleData.length; ii += 4) {\n      var runLength = rleData[ii];\n      var element = rleData.slice(ii + 1, ii + 4);\n      element.push.apply(element, padding);\n      for (var jj = 0; jj < runLength; ++jj) {\n        data.push.apply(data, element);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Creates 3D 'F' BufferInfo.\n   * An 'F' is useful because you can easily tell which way it is oriented.\n   * The created 'F' has position, normal, texcoord, and color buffers.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @return {module:twgl.BufferInfo} The created BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function create3DFBufferInfo\n   */\n\n  /**\n   * Creates 3D 'F' buffers.\n   * An 'F' is useful because you can easily tell which way it is oriented.\n   * The created 'F' has position, normal, texcoord, and color buffers.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @return {Object.<string, WebGLBuffer>} The created buffers.\n   * @memberOf module:twgl/primitives\n   * @function create3DFBuffers\n   */\n\n  /**\n   * Creates 3D 'F' vertices.\n   * An 'F' is useful because you can easily tell which way it is oriented.\n   * The created 'F' has position, normal, texcoord, and color arrays.\n   *\n   * @return {Object.<string, TypedArray>} The created vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function create3DFVertices() {\n\n    var positions = [\n      // left column front\n      0,   0,  0,\n      0, 150,  0,\n      30,   0,  0,\n      0, 150,  0,\n      30, 150,  0,\n      30,   0,  0,\n\n      // top rung front\n      30,   0,  0,\n      30,  30,  0,\n      100,   0,  0,\n      30,  30,  0,\n      100,  30,  0,\n      100,   0,  0,\n\n      // middle rung front\n      30,  60,  0,\n      30,  90,  0,\n      67,  60,  0,\n      30,  90,  0,\n      67,  90,  0,\n      67,  60,  0,\n\n      // left column back\n        0,   0,  30,\n       30,   0,  30,\n        0, 150,  30,\n        0, 150,  30,\n       30,   0,  30,\n       30, 150,  30,\n\n      // top rung back\n       30,   0,  30,\n      100,   0,  30,\n       30,  30,  30,\n       30,  30,  30,\n      100,   0,  30,\n      100,  30,  30,\n\n      // middle rung back\n       30,  60,  30,\n       67,  60,  30,\n       30,  90,  30,\n       30,  90,  30,\n       67,  60,  30,\n       67,  90,  30,\n\n      // top\n        0,   0,   0,\n      100,   0,   0,\n      100,   0,  30,\n        0,   0,   0,\n      100,   0,  30,\n        0,   0,  30,\n\n      // top rung front\n      100,   0,   0,\n      100,  30,   0,\n      100,  30,  30,\n      100,   0,   0,\n      100,  30,  30,\n      100,   0,  30,\n\n      // under top rung\n      30,   30,   0,\n      30,   30,  30,\n      100,  30,  30,\n      30,   30,   0,\n      100,  30,  30,\n      100,  30,   0,\n\n      // between top rung and middle\n      30,   30,   0,\n      30,   60,  30,\n      30,   30,  30,\n      30,   30,   0,\n      30,   60,   0,\n      30,   60,  30,\n\n      // top of middle rung\n      30,   60,   0,\n      67,   60,  30,\n      30,   60,  30,\n      30,   60,   0,\n      67,   60,   0,\n      67,   60,  30,\n\n      // front of middle rung\n      67,   60,   0,\n      67,   90,  30,\n      67,   60,  30,\n      67,   60,   0,\n      67,   90,   0,\n      67,   90,  30,\n\n      // bottom of middle rung.\n      30,   90,   0,\n      30,   90,  30,\n      67,   90,  30,\n      30,   90,   0,\n      67,   90,  30,\n      67,   90,   0,\n\n      // front of bottom\n      30,   90,   0,\n      30,  150,  30,\n      30,   90,  30,\n      30,   90,   0,\n      30,  150,   0,\n      30,  150,  30,\n\n      // bottom\n      0,   150,   0,\n      0,   150,  30,\n      30,  150,  30,\n      0,   150,   0,\n      30,  150,  30,\n      30,  150,   0,\n\n      // left side\n      0,   0,   0,\n      0,   0,  30,\n      0, 150,  30,\n      0,   0,   0,\n      0, 150,  30,\n      0, 150,   0,\n    ];\n\n    var texcoords = [\n      // left column front\n      0.22, 0.19,\n      0.22, 0.79,\n      0.34, 0.19,\n      0.22, 0.79,\n      0.34, 0.79,\n      0.34, 0.19,\n\n      // top rung front\n      0.34, 0.19,\n      0.34, 0.31,\n      0.62, 0.19,\n      0.34, 0.31,\n      0.62, 0.31,\n      0.62, 0.19,\n\n      // middle rung front\n      0.34, 0.43,\n      0.34, 0.55,\n      0.49, 0.43,\n      0.34, 0.55,\n      0.49, 0.55,\n      0.49, 0.43,\n\n      // left column back\n      0, 0,\n      1, 0,\n      0, 1,\n      0, 1,\n      1, 0,\n      1, 1,\n\n      // top rung back\n      0, 0,\n      1, 0,\n      0, 1,\n      0, 1,\n      1, 0,\n      1, 1,\n\n      // middle rung back\n      0, 0,\n      1, 0,\n      0, 1,\n      0, 1,\n      1, 0,\n      1, 1,\n\n      // top\n      0, 0,\n      1, 0,\n      1, 1,\n      0, 0,\n      1, 1,\n      0, 1,\n\n      // top rung front\n      0, 0,\n      1, 0,\n      1, 1,\n      0, 0,\n      1, 1,\n      0, 1,\n\n      // under top rung\n      0, 0,\n      0, 1,\n      1, 1,\n      0, 0,\n      1, 1,\n      1, 0,\n\n      // between top rung and middle\n      0, 0,\n      1, 1,\n      0, 1,\n      0, 0,\n      1, 0,\n      1, 1,\n\n      // top of middle rung\n      0, 0,\n      1, 1,\n      0, 1,\n      0, 0,\n      1, 0,\n      1, 1,\n\n      // front of middle rung\n      0, 0,\n      1, 1,\n      0, 1,\n      0, 0,\n      1, 0,\n      1, 1,\n\n      // bottom of middle rung.\n      0, 0,\n      0, 1,\n      1, 1,\n      0, 0,\n      1, 1,\n      1, 0,\n\n      // front of bottom\n      0, 0,\n      1, 1,\n      0, 1,\n      0, 0,\n      1, 0,\n      1, 1,\n\n      // bottom\n      0, 0,\n      0, 1,\n      1, 1,\n      0, 0,\n      1, 1,\n      1, 0,\n\n      // left side\n      0, 0,\n      0, 1,\n      1, 1,\n      0, 0,\n      1, 1,\n      1, 0,\n    ];\n\n    var normals = expandRLEData([\n      // left column front\n      // top rung front\n      // middle rung front\n      18, 0, 0, 1,\n\n      // left column back\n      // top rung back\n      // middle rung back\n      18, 0, 0, -1,\n\n      // top\n      6, 0, 1, 0,\n\n      // top rung front\n      6, 1, 0, 0,\n\n      // under top rung\n      6, 0, -1, 0,\n\n      // between top rung and middle\n      6, 1, 0, 0,\n\n      // top of middle rung\n      6, 0, 1, 0,\n\n      // front of middle rung\n      6, 1, 0, 0,\n\n      // bottom of middle rung.\n      6, 0, -1, 0,\n\n      // front of bottom\n      6, 1, 0, 0,\n\n      // bottom\n      6, 0, -1, 0,\n\n      // left side\n      6, -1, 0, 0,\n    ]);\n\n    var colors = expandRLEData([\n          // left column front\n          // top rung front\n          // middle rung front\n        18, 200,  70, 120,\n\n          // left column back\n          // top rung back\n          // middle rung back\n        18, 80, 70, 200,\n\n          // top\n        6, 70, 200, 210,\n\n          // top rung front\n        6, 200, 200, 70,\n\n          // under top rung\n        6, 210, 100, 70,\n\n          // between top rung and middle\n        6, 210, 160, 70,\n\n          // top of middle rung\n        6, 70, 180, 210,\n\n          // front of middle rung\n        6, 100, 70, 210,\n\n          // bottom of middle rung.\n        6, 76, 210, 100,\n\n          // front of bottom\n        6, 140, 210, 80,\n\n          // bottom\n        6, 90, 130, 110,\n\n          // left side\n        6, 160, 160, 220,\n    ], [255]);\n\n    var numVerts = positions.length / 3;\n\n    var arrays = {\n      position: createAugmentedTypedArray(3, numVerts),\n      texcoord: createAugmentedTypedArray(2,  numVerts),\n      normal: createAugmentedTypedArray(3, numVerts),\n      color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n      indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n    };\n\n    arrays.position.push(positions);\n    arrays.texcoord.push(texcoords);\n    arrays.normal.push(normals);\n    arrays.color.push(colors);\n\n    for (var ii = 0; ii < numVerts; ++ii) {\n      arrays.indices.push(ii);\n    }\n\n    return arrays;\n  }\n\n  /**\n   * Creates cresent BufferInfo.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} verticalRadius The vertical radius of the cresent.\n   * @param {number} outerRadius The outer radius of the cresent.\n   * @param {number} innerRadius The inner radius of the cresent.\n   * @param {number} thickness The thickness of the cresent.\n   * @param {number} subdivisionsDown number of steps around the cresent.\n   * @param {number} subdivisionsThick number of vertically on the cresent.\n   * @param {number} [startOffset] Where to start arc. Default 0.\n   * @param {number} [endOffset] Where to end arg. Default 1.\n   * @return {module:twgl.BufferInfo} The created BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createCresentBufferInfo\n   */\n\n  /**\n   * Creates cresent buffers.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} verticalRadius The vertical radius of the cresent.\n   * @param {number} outerRadius The outer radius of the cresent.\n   * @param {number} innerRadius The inner radius of the cresent.\n   * @param {number} thickness The thickness of the cresent.\n   * @param {number} subdivisionsDown number of steps around the cresent.\n   * @param {number} subdivisionsThick number of vertically on the cresent.\n   * @param {number} [startOffset] Where to start arc. Default 0.\n   * @param {number} [endOffset] Where to end arg. Default 1.\n   * @return {Object.<string, WebGLBuffer>} The created buffers.\n   * @memberOf module:twgl/primitives\n   * @function createCresentBuffers\n   */\n\n  /**\n   * Creates cresent vertices.\n   *\n   * @param {number} verticalRadius The vertical radius of the cresent.\n   * @param {number} outerRadius The outer radius of the cresent.\n   * @param {number} innerRadius The inner radius of the cresent.\n   * @param {number} thickness The thickness of the cresent.\n   * @param {number} subdivisionsDown number of steps around the cresent.\n   * @param {number} subdivisionsThick number of vertically on the cresent.\n   * @param {number} [startOffset] Where to start arc. Default 0.\n   * @param {number} [endOffset] Where to end arg. Default 1.\n   * @return {Object.<string, TypedArray>} The created vertices.\n   * @memberOf module:twgl/primitives\n   */\n   function createCresentVertices(\n      verticalRadius,\n      outerRadius,\n      innerRadius,\n      thickness,\n      subdivisionsDown,\n      startOffset,\n      endOffset) {\n    if (subdivisionsDown <= 0) {\n      throw Error('subdivisionDown must be > 0');\n    }\n\n    startOffset = startOffset || 0;\n    endOffset   = endOffset || 1;\n\n    var subdivisionsThick = 2;\n\n    var offsetRange = endOffset - startOffset;\n    var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n    var positions   = createAugmentedTypedArray(3, numVertices);\n    var normals     = createAugmentedTypedArray(3, numVertices);\n    var texcoords   = createAugmentedTypedArray(2, numVertices);\n\n    function lerp(a, b, s) {\n      return a + (b - a) * s;\n    }\n\n    function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n      for (var z = 0; z <= subdivisionsDown; z++) {\n        var uBack = x / (subdivisionsThick - 1);\n        var v = z / subdivisionsDown;\n        var xBack = (uBack - 0.5) * 2;\n        var angle = (startOffset + (v * offsetRange)) * Math.PI;\n        var s = Math.sin(angle);\n        var c = Math.cos(angle);\n        var radius = lerp(verticalRadius, arcRadius, s);\n        var px = xBack * thickness;\n        var py = c * verticalRadius;\n        var pz = s * radius;\n        positions.push(px, py, pz);\n        var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n        normals.push(n);\n        texcoords.push(uBack * uMult + uAdd, v);\n      }\n    }\n\n    // Generate the individual vertices in our vertex buffer.\n    for (var x = 0; x < subdivisionsThick; x++) {\n      var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n      createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n      createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n      createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n      createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n    }\n\n    // Do outer surface.\n    var indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n    function createSurface(leftArcOffset, rightArcOffset) {\n      for (var z = 0; z < subdivisionsDown; ++z) {\n        // Make triangle 1 of quad.\n        indices.push(\n            leftArcOffset + z + 0,\n            leftArcOffset + z + 1,\n            rightArcOffset + z + 0);\n\n        // Make triangle 2 of quad.\n        indices.push(\n            leftArcOffset + z + 1,\n            rightArcOffset + z + 1,\n            rightArcOffset + z + 0);\n      }\n    }\n\n    var numVerticesDown = subdivisionsDown + 1;\n    // front\n    createSurface(numVerticesDown * 0, numVerticesDown * 4);\n    // right\n    createSurface(numVerticesDown * 5, numVerticesDown * 7);\n    // back\n    createSurface(numVerticesDown * 6, numVerticesDown * 2);\n    // left\n    createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n    return {\n      position: positions,\n      normal:   normals,\n      texcoord: texcoords,\n      indices:  indices,\n    };\n  }\n\n  /**\n   * Creates cylinder BufferInfo. The cylinder will be created around the origin\n   * along the y-axis.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius Radius of cylinder.\n   * @param {number} height Height of cylinder.\n   * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n   * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n   * @param {boolean} [topCap] Create top cap. Default = true.\n   * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n   * @return {module:twgl.BufferInfo} The created BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createCylinderBufferInfo\n   */\n\n   /**\n    * Creates cylinder buffers. The cylinder will be created around the origin\n    * along the y-axis.\n    *\n    * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n    * @param {number} radius Radius of cylinder.\n    * @param {number} height Height of cylinder.\n    * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n    * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n    * @param {boolean} [topCap] Create top cap. Default = true.\n    * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n    * @return {Object.<string, WebGLBuffer>} The created buffers.\n    * @memberOf module:twgl/primitives\n    * @function createCylinderBuffers\n    */\n\n   /**\n    * Creates cylinder vertices. The cylinder will be created around the origin\n    * along the y-axis.\n    *\n    * @param {number} radius Radius of cylinder.\n    * @param {number} height Height of cylinder.\n    * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n    * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n    * @param {boolean} [topCap] Create top cap. Default = true.\n    * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n    * @return {Object.<string, TypedArray>} The created vertices.\n    * @memberOf module:twgl/primitives\n    */\n  function createCylinderVertices(\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap) {\n    return createTruncatedConeVertices(\n        radius,\n        radius,\n        height,\n        radialSubdivisions,\n        verticalSubdivisions,\n        topCap,\n        bottomCap);\n  }\n\n  /**\n   * Creates BufferInfo for a torus\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius radius of center of torus circle.\n   * @param {number} thickness radius of torus ring.\n   * @param {number} radialSubdivisions The number of subdivisions around the torus.\n   * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n   * @param {boolean} [startAngle] start angle in radians. Default = 0.\n   * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n   * @return {module:twgl.BufferInfo} The created BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createTorusBufferInfo\n   */\n\n  /**\n   * Creates buffers for a torus\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius radius of center of torus circle.\n   * @param {number} thickness radius of torus ring.\n   * @param {number} radialSubdivisions The number of subdivisions around the torus.\n   * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n   * @param {boolean} [startAngle] start angle in radians. Default = 0.\n   * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n   * @return {Object.<string, WebGLBuffer>} The created buffers.\n   * @memberOf module:twgl/primitives\n   * @function createTorusBuffers\n   */\n\n  /**\n   * Creates vertices for a torus\n   *\n   * @param {number} radius radius of center of torus circle.\n   * @param {number} thickness radius of torus ring.\n   * @param {number} radialSubdivisions The number of subdivisions around the torus.\n   * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n   * @param {boolean} [startAngle] start angle in radians. Default = 0.\n   * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n   * @return {Object.<string, TypedArray>} The created vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function createTorusVertices(\n      radius,\n      thickness,\n      radialSubdivisions,\n      bodySubdivisions,\n      startAngle,\n      endAngle) {\n    if (radialSubdivisions < 3) {\n      throw Error('radialSubdivisions must be 3 or greater');\n    }\n\n    if (bodySubdivisions < 3) {\n      throw Error('verticalSubdivisions must be 3 or greater');\n    }\n\n    startAngle = startAngle || 0;\n    endAngle = endAngle || Math.PI * 2;\n    range = endAngle - startAngle;\n\n    var radialParts = radialSubdivisions + 1;\n    var bodyParts   = bodySubdivisions + 1;\n    var numVertices = radialParts * bodyParts;\n    var positions   = createAugmentedTypedArray(3, numVertices);\n    var normals     = createAugmentedTypedArray(3, numVertices);\n    var texcoords   = createAugmentedTypedArray(2, numVertices);\n    var indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n    for (var slice = 0; slice < bodyParts; ++slice) {\n      var v = slice / bodySubdivisions;\n      var sliceAngle = v * Math.PI * 2;\n      var sliceSin = Math.sin(sliceAngle);\n      var ringRadius = radius + sliceSin * thickness;\n      var ny = Math.cos(sliceAngle);\n      var y = ny * thickness;\n      for (var ring = 0; ring < radialParts; ++ring) {\n        var u = ring / radialSubdivisions;\n        var ringAngle = startAngle + u * range;\n        var xSin = Math.sin(ringAngle);\n        var zCos = Math.cos(ringAngle);\n        var x = xSin * ringRadius;\n        var z = zCos * ringRadius;\n        var nx = xSin * sliceSin;\n        var nz = zCos * sliceSin;\n        positions.push(x, y, z);\n        normals.push(nx, ny, nz);\n        texcoords.push(u, 1 - v);\n      }\n    }\n\n    for (var slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n      for (var ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n        var nextRingIndex  = 1 + ring;\n        var nextSliceIndex = 1 + slice;\n        indices.push(radialParts * slice          + ring,\n                     radialParts * nextSliceIndex + ring,\n                     radialParts * slice          + nextRingIndex);\n        indices.push(radialParts * nextSliceIndex + ring,\n                     radialParts * nextSliceIndex + nextRingIndex,\n                     radialParts * slice          + nextRingIndex);\n      }\n    }\n\n    return {\n      position: positions,\n      normal:   normals,\n      texcoord: texcoords,\n      indices:  indices,\n    };\n  }\n\n\n  /**\n   * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n   * the origin. When creating, at least 3 divisions, or pie\n   * pieces, need to be specified, otherwise the triangles making\n   * up the disc will be degenerate. You can also specify the\n   * number of radial pieces `stacks`. A value of 1 for\n   * stacks will give you a simple disc of pie pieces.  If you\n   * want to create an annulus you can set `innerRadius` to a\n   * value > 0. Finally, `stackPower` allows you to have the widths\n   * increase or decrease as you move away from the center. This\n   * is particularly useful when using the disc as a ground plane\n   * with a fixed camera such that you don't need the resolution\n   * of small triangles near the perimeter. For example, a value\n   * of 2 will produce stacks whose ouside radius increases with\n   * the square of the stack index. A value of 1 will give uniform\n   * stacks.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius Radius of the ground plane.\n   * @param {number} divisions Number of triangles in the ground plane (at least 3).\n   * @param {number} [stacks] Number of radial divisions (default=1).\n   * @param {number} [innerRadius] Default 0.\n   * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n   * @return {module:twgl.BufferInfo} The created BufferInfo.\n   * @memberOf module:twgl/primitives\n   * @function createDiscBufferInfo\n   */\n\n  /**\n   * Creates disc buffers. The disc will be in the xz plane, centered at\n   * the origin. When creating, at least 3 divisions, or pie\n   * pieces, need to be specified, otherwise the triangles making\n   * up the disc will be degenerate. You can also specify the\n   * number of radial pieces `stacks`. A value of 1 for\n   * stacks will give you a simple disc of pie pieces.  If you\n   * want to create an annulus you can set `innerRadius` to a\n   * value > 0. Finally, `stackPower` allows you to have the widths\n   * increase or decrease as you move away from the center. This\n   * is particularly useful when using the disc as a ground plane\n   * with a fixed camera such that you don't need the resolution\n   * of small triangles near the perimeter. For example, a value\n   * of 2 will produce stacks whose ouside radius increases with\n   * the square of the stack index. A value of 1 will give uniform\n   * stacks.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n   * @param {number} radius Radius of the ground plane.\n   * @param {number} divisions Number of triangles in the ground plane (at least 3).\n   * @param {number} [stacks] Number of radial divisions (default=1).\n   * @param {number} [innerRadius] Default 0.\n   * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n   * @return {Object.<string, WebGLBuffer>} The created buffers.\n   * @memberOf module:twgl/primitives\n   * @function createDiscBuffers\n   */\n\n  /**\n   * Creates disc vertices. The disc will be in the xz plane, centered at\n   * the origin. When creating, at least 3 divisions, or pie\n   * pieces, need to be specified, otherwise the triangles making\n   * up the disc will be degenerate. You can also specify the\n   * number of radial pieces `stacks`. A value of 1 for\n   * stacks will give you a simple disc of pie pieces.  If you\n   * want to create an annulus you can set `innerRadius` to a\n   * value > 0. Finally, `stackPower` allows you to have the widths\n   * increase or decrease as you move away from the center. This\n   * is particularly useful when using the disc as a ground plane\n   * with a fixed camera such that you don't need the resolution\n   * of small triangles near the perimeter. For example, a value\n   * of 2 will produce stacks whose ouside radius increases with\n   * the square of the stack index. A value of 1 will give uniform\n   * stacks.\n   *\n   * @param {number} radius Radius of the ground plane.\n   * @param {number} divisions Number of triangles in the ground plane (at least 3).\n   * @param {number} [stacks] Number of radial divisions (default=1).\n   * @param {number} [innerRadius] Default 0.\n   * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n   * @return {Object.<string, TypedArray>} The created vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function createDiscVertices(\n      radius,\n      divisions,\n      stacks,\n      innerRadius,\n      stackPower) {\n    if (divisions < 3) {\n      throw Error('divisions must be at least 3');\n    }\n\n    stacks = stacks ? stacks : 1;\n    stackPower = stackPower ? stackPower : 1;\n    innerRadius = innerRadius ? innerRadius : 0;\n\n    // Note: We don't share the center vertex because that would\n    // mess up texture coordinates.\n    var numVertices = (divisions + 1) * (stacks + 1);\n\n    var positions = createAugmentedTypedArray(3, numVertices);\n    var normals   = createAugmentedTypedArray(3, numVertices);\n    var texcoords = createAugmentedTypedArray(2, numVertices);\n    var indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n    var firstIndex = 0;\n    var radiusSpan = radius - innerRadius;\n    var pointsPerStack = divisions + 1;\n\n    // Build the disk one stack at a time.\n    for (var stack = 0; stack <= stacks; ++stack) {\n      var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n      for (var i = 0; i <= divisions; ++i) {\n        var theta = 2.0 * Math.PI * i / divisions;\n        var x = stackRadius * Math.cos(theta);\n        var z = stackRadius * Math.sin(theta);\n\n        positions.push(x, 0, z);\n        normals.push(0, 1, 0);\n        texcoords.push(1 - (i / divisions), stack / stacks);\n        if (stack > 0 && i !== divisions) {\n          // a, b, c and d are the indices of the vertices of a quad.  unless\n          // the current stack is the one closest to the center, in which case\n          // the vertices a and b connect to the center vertex.\n          var a = firstIndex + (i + 1);\n          var b = firstIndex + i;\n          var c = firstIndex + i - pointsPerStack;\n          var d = firstIndex + (i + 1) - pointsPerStack;\n\n          // Make a quad of the vertices a, b, c, d.\n          indices.push(a, b, c);\n          indices.push(a, c, d);\n        }\n      }\n\n      firstIndex += divisions + 1;\n    }\n\n    return {\n      position: positions,\n      normal: normals,\n      texcoord: texcoords,\n      indices: indices,\n    };\n  }\n\n  /**\n   * creates a random integer between 0 and range - 1 inclusive.\n   * @param {number} range\n   * @return {number} random value between 0 and range - 1 inclusive.\n   */\n  function randInt(range) {\n    return Math.random() * range | 0;\n  }\n\n  /**\n   * Used to supply random colors\n   * @callback RandomColorFunc\n   * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n   * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n   * @return {number} a number from 0 to 255\n   * @memberOf module:twgl/primitives\n   */\n\n  /**\n   * @typedef {Object} RandomVerticesOptions\n   * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n   * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n   * @memberOf module:twgl/primitives\n   */\n\n  /**\n   * Creates an augmentedTypedArray of random vertex colors.\n   * If the vertices are indexed (have an indices array) then will\n   * just make random colors. Otherwise assumes they are triangles\n   * and makes one random color for every 3 vertices.\n   * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n   * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n   * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n   * @memberOf module:twgl/primitives\n   */\n  function makeRandomVertexColors(vertices, options) {\n    options = options || {};\n    var numElements = vertices.position.numElements;\n    var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n    var rand = options.rand || function(ndx, channel) {\n      return channel < 3 ? randInt(256) : 255;\n    };\n    vertices.color = vcolors;\n    if (vertices.indices) {\n      // just make random colors if index\n      for (var ii = 0; ii < numElements; ++ii) {\n        vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n      }\n    } else {\n      // make random colors per triangle\n      var numVertsPerColor = options.vertsPerColor || 3;\n      var numSets = numElements / numVertsPerColor;\n      for (var ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n        var color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n        for (var jj = 0; jj < numVertsPerColor; ++jj) {\n          vcolors.push(color);\n        }\n      }\n    }\n    return vertices;\n  }\n\n  /**\n   * creates a function that calls fn to create vertices and then\n   * creates a buffers for them\n   */\n  function createBufferFunc(fn) {\n    return function(gl) {\n      var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n      return twgl.createBuffersFromArrays(gl, arrays);\n    };\n  }\n\n  /**\n   * creates a function that calls fn to create vertices and then\n   * creates a bufferInfo object for them\n   */\n  function createBufferInfoFunc(fn) {\n    return function(gl) {\n      var arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n      return twgl.createBufferInfoFromArrays(gl, arrays);\n    };\n  }\n\n  var arraySpecPropertyNames = [\n    \"numComponents\",\n    \"size\",\n    \"type\",\n    \"normalize\",\n    \"stride\",\n    \"offset\",\n    \"attrib\",\n    \"name\",\n    \"attribName\",\n  ];\n\n  /**\n   * Copy elements from one array to another\n   *\n   * @param {Array|TypedArray} src source array\n   * @param {Array|TypedArray} dst dest array\n   * @param {number} dstNdx index in dest to copy src\n   * @param {number} [offset] offset to add to copied values\n   */\n  function copyElements(src, dst, dstNdx, offset) {\n    offset = offset || 0;\n    var length = src.length;\n    for (var ii = 0; ii < length; ++ii) {\n      dst[dstNdx + ii] = src[ii] + offset;\n    }\n  }\n\n  /**\n   * Creates an array of the same time\n   *\n   * @param {(number[]|ArrayBuffer|module:twgl.FullArraySpec)} srcArray array who's type to copy\n   * @param {number} length size of new array\n   * @return {(number[]|ArrayBuffer|module:twgl.FullArraySpec)} array with same type as srcArray\n   */\n  function createArrayOfSameType(srcArray, length) {\n    var arraySrc = getArray(srcArray);\n    var newArray = new arraySrc.constructor(length);\n    var newArraySpec = newArray;\n    // If it appears to have been augmented make new one augemented\n    if (arraySrc.numComponents && arraySrc.numElements) {\n      augmentTypedArray(newArray, arraySrc.numComponents);\n    }\n    // If it was a fullspec make new one a fullspec\n    if (srcArray.data) {\n      newArraySpec = {\n        data: newArray,\n      };\n      utils.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n    }\n    return newArraySpec;\n  }\n\n  /**\n   * Concatinates sets of vertices\n   *\n   * Assumes the vertices match in composition. For example\n   * if one set of vertices has positions, normals, and indices\n   * all sets of vertices must have positions, normals, and indices\n   * and of the same type.\n   *\n   * Example:\n   *\n   *      var cubeVertices = twgl.primtiives.createCubeVertices(2);\n   *      var sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n   *      // move the sphere 2 units up\n   *      twgl.primitives.reorientVertices(\n   *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n   *      // merge the sphere with the cube\n   *      var cubeSphereVertices = twgl.primitives.concatVertices(\n   *          [cubeVertices, sphereVertices]);\n   *      // turn them into WebGL buffers and attrib data\n   *      var bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n   *\n   * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n   * @return {module:twgl.Arrays} The concatinated vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function concatVertices(arrayOfArrays) {\n    var names = {};\n    var baseName;\n    // get names of all arrays.\n    // and numElements for each set of vertices\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n        if (!names[name]) {\n          names[name] = [];\n        }\n        if (!baseName && name !== 'indices') {\n          baseName = name;\n        }\n        var arrayInfo = arrays[name];\n        var numComponents = getNumComponents(arrayInfo, name);\n        var array = getArray(arrayInfo);\n        var numElements = array.length / numComponents;\n        names[name].push(numElements);\n      });\n    }\n\n    // compute length of combined array\n    // and return one for reference\n    function getLengthOfCombinedArrays(name) {\n      var length = 0;\n      var arraySpec;\n      for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n        var arrays = arrayOfArrays[ii];\n        var arrayInfo = arrays[name];\n        var array = getArray(arrayInfo);\n        length += array.length;\n        if (!arraySpec || arrayInfo.data) {\n          arraySpec = arrayInfo;\n        }\n      }\n      return {\n        length: length,\n        spec: arraySpec,\n      };\n    }\n\n    function copyArraysToNewArray(name, base, newArray) {\n      var baseIndex = 0;\n      var offset = 0;\n      for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n        var arrays = arrayOfArrays[ii];\n        var arrayInfo = arrays[name];\n        var array = getArray(arrayInfo);\n        if (name === 'indices') {\n          copyElements(array, newArray, offset, baseIndex);\n          baseIndex += base[ii];\n        } else {\n          copyElements(array, newArray, offset);\n        }\n        offset += array.length;\n      }\n    }\n\n    var base = names[baseName];\n\n    var newArrays = {};\n    Object.keys(names).forEach(function(name) {\n      var info = getLengthOfCombinedArrays(name);\n      var newArraySpec = createArrayOfSameType(info.spec, info.length);\n      copyArraysToNewArray(name, base, getArray(newArraySpec));\n      newArrays[name] = newArraySpec;\n    });\n    return newArrays;\n  }\n\n  /**\n   * Creates a duplicate set of vertices\n   *\n   * This is useful for calling reorientVertices when you\n   * also want to keep the original available\n   *\n   * @param {module:twgl.Arrays} arrays of vertices\n   * @return {module:twgl.Arrays} The dupilicated vertices.\n   * @memberOf module:twgl/primitives\n   */\n  function duplicateVertices(arrays) {\n    var newArrays = {};\n    Object.keys(arrays).forEach(function(name) {\n      var arraySpec = arrays[name];\n      var srcArray = getArray(arraySpec);\n      var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n      copyElements(srcArray, getArray(newArraySpec), 0);\n      newArrays[name] = newArraySpec;\n    });\n    return newArrays;\n  }\n\n  // Using quotes prevents Uglify from changing the names.\n  // No speed diff AFAICT.\n  return {\n    \"create3DFBufferInfo\": createBufferInfoFunc(create3DFVertices),\n    \"create3DFBuffers\": createBufferFunc(create3DFVertices),\n    \"create3DFVertices\": create3DFVertices,\n    \"createAugmentedTypedArray\": createAugmentedTypedArray,\n    \"createCubeBufferInfo\": createBufferInfoFunc(createCubeVertices),\n    \"createCubeBuffers\": createBufferFunc(createCubeVertices),\n    \"createCubeVertices\": createCubeVertices,\n    \"createPlaneBufferInfo\": createBufferInfoFunc(createPlaneVertices),\n    \"createPlaneBuffers\": createBufferFunc(createPlaneVertices),\n    \"createPlaneVertices\": createPlaneVertices,\n    \"createSphereBufferInfo\": createBufferInfoFunc(createSphereVertices),\n    \"createSphereBuffers\": createBufferFunc(createSphereVertices),\n    \"createSphereVertices\": createSphereVertices,\n    \"createTruncatedConeBufferInfo\": createBufferInfoFunc(createTruncatedConeVertices),\n    \"createTruncatedConeBuffers\": createBufferFunc(createTruncatedConeVertices),\n    \"createTruncatedConeVertices\": createTruncatedConeVertices,\n    \"createXYQuadBufferInfo\": createBufferInfoFunc(createXYQuadVertices),\n    \"createXYQuadBuffers\": createBufferFunc(createXYQuadVertices),\n    \"createXYQuadVertices\": createXYQuadVertices,\n    \"createCresentBufferInfo\": createBufferInfoFunc(createCresentVertices),\n    \"createCresentBuffers\": createBufferFunc(createCresentVertices),\n    \"createCresentVertices\": createCresentVertices,\n    \"createCylinderBufferInfo\": createBufferInfoFunc(createCylinderVertices),\n    \"createCylinderBuffers\": createBufferFunc(createCylinderVertices),\n    \"createCylinderVertices\": createCylinderVertices,\n    \"createTorusBufferInfo\": createBufferInfoFunc(createTorusVertices),\n    \"createTorusBuffers\": createBufferFunc(createTorusVertices),\n    \"createTorusVertices\": createTorusVertices,\n    \"createDiscBufferInfo\": createBufferInfoFunc(createDiscVertices),\n    \"createDiscBuffers\": createBufferFunc(createDiscVertices),\n    \"createDiscVertices\": createDiscVertices,\n    \"deindexVertices\": deindexVertices,\n    \"flattenNormals\": flattenNormals,\n    \"makeRandomVertexColors\": makeRandomVertexColors,\n    \"reorientDirections\": reorientDirections,\n    \"reorientNormals\": reorientNormals,\n    \"reorientPositions\": reorientPositions,\n    \"reorientVertices\": reorientVertices,\n    \"concatVertices\": concatVertices,\n    \"duplicateVertices\": duplicateVertices,\n  };\n\n});\n\ndefine('main', [\n    'twgl/twgl',\n    'twgl/m4',\n    'twgl/v3',\n    'twgl/primitives',\n  ], function(\n    twgl,\n    m4,\n    v3,\n    primitives\n  ) {\n    twgl.m4 = m4;\n    twgl.v3 = v3;\n    twgl.primitives = primitives;\n    return twgl;\n})\n\nnotrequirebecasebrowserifymessesup(['main'], function(main) {\n  return main;\n}, undefined, true);   // forceSync = true\n\n\n;\ndefine(\"build/js/twgl-includer-full\", function(){});\n\n    return notrequirebecasebrowserifymessesup('main');\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/twgl.js/dist/twgl-full.js\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nvar window = require(\"global/window\")\nvar once = require(\"once\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    var callback = options.callback\n    if(typeof callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n    callback = once(callback)\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            loadFunc()\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else if (xhr.responseType === \"text\" || !xhr.responseType) {\n            body = xhr.responseText || xhr.responseXML\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    var failureResponse = {\n                body: undefined,\n                headers: {},\n                statusCode: 0,\n                method: method,\n                url: uri,\n                rawRequest: xhr\n            }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        callback(err, response, response.body)\n\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data || null\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n\n    if (\"json\" in options) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            aborted=true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    xhr.send(body)\n\n    return xhr\n\n\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/index.js\n ** module id = 9\n ** module chunks = 0\n **/","if (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else if (typeof self !== \"undefined\"){\n    module.exports = self;\n} else {\n    module.exports = {};\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/global/window.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = once\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return fn.apply(this, arguments)\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/once/once.js\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/is-function/index.js\n ** module id = 12\n ** module chunks = 0\n **/","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/parse-headers/parse-headers.js\n ** module id = 13\n ** module chunks = 0\n **/","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/parse-headers/~/trim/index.js\n ** module id = 14\n ** module chunks = 0\n **/","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/parse-headers/~/for-each/index.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/xtend/immutable.js\n ** module id = 16\n ** module chunks = 0\n **/","const twgl = require('twgl.js');\n\nconst Skin = require('./Skin');\n\nclass BitmapSkin extends Skin {\n    /**\n     * Create a new Bitmap Skin.\n     * @param {!int} id - The ID for this Skin.\n     * @param {!RenderWebGL} renderer - The renderer which will use this skin.\n     */\n    constructor (id, renderer) {\n        super(id);\n\n        /** @type {!int} */\n        this._costumeResolution = 1;\n\n        /** @type {!RenderWebGL} */\n        this._renderer = renderer;\n\n        /** @type {WebGLTexture} */\n        this._texture = null;\n\n        /** @type {[int, int]} */\n        this._textureSize = [0, 0];\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        if (this._texture) {\n            this._renderer.gl.deleteTexture(this._texture);\n            this._texture = null;\n        }\n        super.dispose();\n    }\n\n    /**\n     * @return {[number,number]} the \"native\" size, in texels, of this skin.\n     */\n    get size () {\n        return [this._textureSize[0] / this._costumeResolution, this._textureSize[1] / this._costumeResolution];\n    }\n\n    /**\n     * @param {[number,number]} scale - The scaling factors to be used.\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given scale.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (scale) {\n        return this._texture;\n    }\n\n    /**\n     * Set the contents of this skin to a snapshot of the provided bitmap data.\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} bitmapData - new contents for this skin.\n     * @param {int} [costumeResolution=1] - The resolution to use for this bitmap.\n     * @param {number[]=} rotationCenter - Optional rotation center for the bitmap. If not supplied, it will be\n     * calculated from the bounding box\n     */\n    setBitmap (bitmapData, costumeResolution, rotationCenter) {\n        const gl = this._renderer.gl;\n\n        if (this._texture) {\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmapData);\n        } else {\n            const textureOptions = {\n                auto: true,\n                mag: gl.NEAREST,\n                min: gl.NEAREST, // TODO: mipmaps, linear (except pixelate)\n                wrap: gl.CLAMP_TO_EDGE,\n                src: bitmapData\n            };\n\n            this._texture = twgl.createTexture(gl, textureOptions);\n        }\n\n        // Do these last in case any of the above throws an exception\n        this._costumeResolution = costumeResolution || 1;\n        this._textureSize = BitmapSkin._getBitmapSize(bitmapData);\n\n        if (typeof rotationCenter === 'undefined') rotationCenter = this.calculateRotationCenter();\n        this.setRotationCenter.apply(this, rotationCenter);\n\n        this.emit(Skin.Events.WasAltered);\n    }\n\n    /**\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} bitmapData - bitmap data to inspect.\n     * @returns {[int,int]} the width and height of the bitmap data, in pixels.\n     * @private\n     */\n    static _getBitmapSize (bitmapData) {\n        if (bitmapData instanceof HTMLImageElement) {\n            return [bitmapData.naturalWidth || bitmapData.width, bitmapData.naturalHeight || bitmapData.height];\n        }\n\n        if (bitmapData instanceof HTMLVideoElement) {\n            return [bitmapData.videoWidth || bitmapData.width, bitmapData.videoHeight || bitmapData.height];\n        }\n\n        // ImageData or HTMLCanvasElement\n        return [bitmapData.width, bitmapData.height];\n    }\n}\n\nmodule.exports = BitmapSkin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/BitmapSkin.js\n **/","const EventEmitter = require('events');\n\nconst twgl = require('twgl.js');\n\nconst RenderConstants = require('./RenderConstants');\n\nclass Skin extends EventEmitter {\n    /**\n     * Create a Skin, which stores and/or generates textures for use in rendering.\n     * @param {int} id - The unique ID for this Skin.\n     */\n    constructor (id) {\n        super();\n\n        /** @type {int} */\n        this._id = id;\n\n        /** @type {Vec3} */\n        this._rotationCenter = twgl.v3.create(0, 0);\n\n        /**\n         * The uniforms to be used by the vertex and pixel shaders.\n         * Some of these are used by other parts of the renderer as well.\n         * @type {Object.<string,*>}\n         * @private\n         */\n        this._uniforms = {\n            /**\n             * The nominal (not necessarily current) size of the current skin.\n             * @type {number[]}\n             */\n            u_skinSize: [0, 0],\n\n            /**\n             * The actual WebGL texture object for the skin.\n             * @type {WebGLTexture}\n             */\n            u_skin: null\n        };\n\n        this.setMaxListeners(RenderConstants.SKIN_SHARE_SOFT_LIMIT);\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        this._id = RenderConstants.ID_NONE;\n    }\n\n    /**\n     * @return {int} the unique ID for this Skin.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * @returns {Vec3} the origin, in object space, about which this Skin should rotate.\n     */\n    get rotationCenter () {\n        return this._rotationCenter;\n    }\n\n    /**\n     * @abstract\n     * @return {[number,number]} the \"native\" size, in texels, of this skin.\n     */\n    get size () {\n        return [0, 0];\n    }\n\n    /**\n     * Set the origin, in object space, about which this Skin should rotate.\n     * @param {number} x - The x coordinate of the new rotation center.\n     * @param {number} y - The y coordinate of the new rotation center.\n     */\n    setRotationCenter (x, y) {\n        if (x !== this._rotationCenter[0] || y !== this._rotationCenter[1]) {\n            this._rotationCenter[0] = x;\n            this._rotationCenter[1] = y;\n            this.emit(Skin.Events.WasAltered);\n        }\n    }\n\n    /**\n     * Get the center of the current bounding box\n     * @return {[number,number]} the center of the current bounding box\n     */\n    calculateRotationCenter () {\n        return [this.size[0] / 2, this.size[1] / 2];\n    }\n\n    /**\n     * @abstract\n     * @param {[number,number]} scale - The scaling factors to be used.\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given size.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (scale) {\n        return null;\n    }\n\n    /**\n     * Update and returns the uniforms for this skin.\n     * @param {[number,number]} scale - The scaling factors to be used.\n     * @returns {object.<string, *>} the shader uniforms to be used when rendering with this Skin.\n     */\n    getUniforms (scale) {\n        this._uniforms.u_skin = this.getTexture(scale);\n        this._uniforms.u_skinSize = this.size;\n        return this._uniforms;\n    }\n}\n\n/**\n * These are the events which can be emitted by instances of this class.\n * @type {object.<string,string>}\n */\nSkin.Events = {\n    /**\n     * Emitted when anything about the Skin has been altered, such as the appearance or rotation center.\n     */\n    WasAltered: 'WasAltered'\n};\n\nmodule.exports = Skin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Skin.js\n **/","const DEFAULT_SKIN = {\n    squirrel: 'https://cdn.assets.scratch.mit.edu/internalapi/asset/7e24c99c1b853e52f8e7f9004416fa34.png/get/',\n    bus: 'https://cdn.assets.scratch.mit.edu/internalapi/asset/66895930177178ea01d9e610917f8acf.png/get/',\n    scratch_cat: 'https://cdn.assets.scratch.mit.edu/internalapi/asset/09dc888b0b7df19f70d81588ae73420e.svg/get/',\n    gradient: 'https://cdn.assets.scratch.mit.edu/internalapi/asset/a49ff276b9b8f997a1ae163992c2c145.png/get/'\n}.squirrel;\n\n/**\n * Various constants meant for use throughout the renderer.\n * @type {object}\n */\nmodule.exports = {\n    /**\n     * The ID value to use for \"no item\" or when an object has been disposed.\n     * @type {int}\n     */\n    ID_NONE: -1,\n\n    /**\n     * The URL to use as the default skin for a Drawable.\n     * TODO: Remove this in favor of falling back on a built-in skin.\n     * @type {string}\n     */\n    DEFAULT_SKIN: DEFAULT_SKIN,\n\n    /**\n     * Optimize for fewer than this number of Drawables sharing the same Skin.\n     * Going above this may cause middleware warnings or a performance penalty but should otherwise behave correctly.\n     */\n    SKIN_SHARE_SOFT_LIMIT: 300,\n\n    Events: {\n        NativeSizeChanged: 'NativeSizeChanged'\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/RenderConstants.js\n **/","const twgl = require('twgl.js');\n\nconst Rectangle = require('./Rectangle');\nconst RenderConstants = require('./RenderConstants');\nconst ShaderManager = require('./ShaderManager');\nconst Skin = require('./Skin');\n\n\nclass Drawable {\n    /**\n     * An object which can be drawn by the renderer.\n     * TODO: double-buffer all rendering state (position, skin, effects, etc.)\n     * @param {!int} id - This Drawable's unique ID.\n     * @constructor\n     */\n    constructor (id) {\n        /** @type {!int} */\n        this._id = id;\n\n        /**\n         * The uniforms to be used by the vertex and pixel shaders.\n         * Some of these are used by other parts of the renderer as well.\n         * @type {Object.<string,*>}\n         * @private\n         */\n        this._uniforms = {\n            /**\n             * The model matrix, to concat with projection at draw time.\n             * @type {module:twgl/m4.Mat4}\n             */\n            u_modelMatrix: twgl.m4.identity(),\n\n            /**\n             * The color to use in the silhouette draw mode.\n             * @type {number[]}\n             */\n            u_silhouetteColor: Drawable.color4fFromID(this._id)\n        };\n\n        // Effect values are uniforms too\n        const numEffects = ShaderManager.EFFECTS.length;\n        for (let index = 0; index < numEffects; ++index) {\n            const effectName = ShaderManager.EFFECTS[index];\n            const converter = ShaderManager.EFFECT_INFO[effectName].converter;\n            this._uniforms[`u_${effectName}`] = converter(0);\n        }\n\n        this._position = twgl.v3.create(0, 0);\n        this._scale = twgl.v3.create(100, 100);\n        this._direction = 90;\n        this._transformDirty = true;\n        this._visible = true;\n        this._effectBits = 0;\n\n        // TODO: move convex hull functionality, maybe bounds functionality overall, to Skin classes\n        this._convexHullPoints = null;\n        this._convexHullDirty = true;\n\n        this._skinWasAltered = this._skinWasAltered.bind(this);\n    }\n\n    /**\n     * Dispose of this Drawable. Do not use it after calling this method.\n     */\n    dispose () {\n        // Use the setter: disconnect events\n        this.skin = null;\n    }\n\n    /**\n     * Mark this Drawable's transform as dirty.\n     * It will be recalculated next time it's needed.\n     */\n    setTransformDirty () {\n        this._transformDirty = true;\n    }\n\n    /**\n     * @returns {number} The ID for this Drawable.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * @returns {Skin} the current skin for this Drawable.\n     */\n    get skin () {\n        return this._skin;\n    }\n\n    /**\n     * @param {Skin} newSkin - A new Skin for this Drawable.\n     */\n    set skin (newSkin) {\n        if (this._skin !== newSkin) {\n            if (this._skin) {\n                this._skin.removeListener(Skin.Events.WasAltered, this._skinWasAltered);\n            }\n            this._skin = newSkin;\n            if (this._skin) {\n                this._skin.addListener(Skin.Events.WasAltered, this._skinWasAltered);\n            }\n            this._skinWasAltered();\n        }\n    }\n\n    /**\n     * @returns {[number,number]} the current scaling percentages applied to this Drawable. [100,100] is normal size.\n     */\n    get scale () {\n        return [this._scale[0], this._scale[1]];\n    }\n\n    /**\n     * @returns {int} A bitmask identifying which effects are currently in use.\n     */\n    getEnabledEffects () {\n        return this._effectBits;\n    }\n\n    /**\n     * @returns {object.<string, *>} the shader uniforms to be used when rendering this Drawable.\n     */\n    getUniforms () {\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n        return this._uniforms;\n    }\n\n    /**\n     * @returns {boolean} whether this Drawable is visible.\n     */\n    getVisible () {\n        return this._visible;\n    }\n\n    /**\n     * Update the position, direction, scale, or effect properties of this Drawable.\n     * @param {object.<string,*>} properties The new property values to set.\n     */\n    updateProperties (properties) {\n        let dirty = false;\n        if ('position' in properties && (\n            this._position[0] !== properties.position[0] ||\n            this._position[1] !== properties.position[1])) {\n            this._position[0] = properties.position[0];\n            this._position[1] = properties.position[1];\n            dirty = true;\n        }\n        if ('direction' in properties && this._direction !== properties.direction) {\n            this._direction = properties.direction;\n            dirty = true;\n        }\n        if ('scale' in properties && (\n            this._scale[0] !== properties.scale[0] ||\n            this._scale[1] !== properties.scale[1])) {\n            this._scale[0] = properties.scale[0];\n            this._scale[1] = properties.scale[1];\n            dirty = true;\n        }\n        if ('visible' in properties) {\n            this._visible = properties.visible;\n            this.setConvexHullDirty();\n        }\n        if (dirty) {\n            this.setTransformDirty();\n        }\n        const numEffects = ShaderManager.EFFECTS.length;\n        for (let index = 0; index < numEffects; ++index) {\n            const effectName = ShaderManager.EFFECTS[index];\n            if (effectName in properties) {\n                const rawValue = properties[effectName];\n                const effectInfo = ShaderManager.EFFECT_INFO[effectName];\n                if (rawValue) {\n                    this._effectBits |= effectInfo.mask;\n                } else {\n                    this._effectBits &= ~effectInfo.mask;\n                }\n                const converter = effectInfo.converter;\n                this._uniforms[`u_${effectName}`] = converter(rawValue);\n                if (effectInfo.shapeChanges) {\n                    this.setConvexHullDirty();\n                }\n            }\n        }\n    }\n\n    /**\n     * Calculate the transform to use when rendering this Drawable.\n     * @private\n     */\n    _calculateTransform () {\n        const modelMatrix = this._uniforms.u_modelMatrix;\n\n        twgl.m4.identity(modelMatrix);\n        twgl.m4.translate(modelMatrix, this._position, modelMatrix);\n\n        const rotation = (270 - this._direction) * Math.PI / 180;\n        twgl.m4.rotateZ(modelMatrix, rotation, modelMatrix);\n\n        // Adjust rotation center relative to the skin.\n        const rotationAdjusted = twgl.v3.subtract(this.skin.rotationCenter, twgl.v3.divScalar(this.skin.size, 2));\n        rotationAdjusted[1] *= -1; // Y flipped to Scratch coordinate.\n        rotationAdjusted[2] = 0; // Z coordinate is 0.\n\n        twgl.m4.translate(modelMatrix, rotationAdjusted, modelMatrix);\n\n        const scaledSize = twgl.v3.divScalar(twgl.v3.multiply(this.skin.size, this._scale), 100);\n        scaledSize[2] = 0; // was NaN because the vectors have only 2 components.\n        twgl.m4.scale(modelMatrix, scaledSize, modelMatrix);\n\n        this._transformDirty = false;\n    }\n\n    /**\n     * Whether the Drawable needs convex hull points provided by the renderer.\n     * @return {boolean} True when no convex hull known, or it's dirty.\n     */\n    needsConvexHullPoints () {\n        return !this._convexHullPoints || this._convexHullDirty;\n    }\n\n    /**\n     * Set the convex hull to be dirty.\n     * Do this whenever the Drawable's shape has possibly changed.\n     */\n    setConvexHullDirty () {\n        this._convexHullDirty = true;\n    }\n\n    /**\n     * Set the convex hull points for the Drawable.\n     * @param {Array.<Array.<number>>} points Convex hull points, as [[x, y], ...]\n     */\n    setConvexHullPoints (points) {\n        this._convexHullPoints = points;\n        this._convexHullDirty = false;\n    }\n\n    /**\n     * Get the precise bounds for a Drawable.\n     * This function applies the transform matrix to the known convex hull,\n     * and then finds the minimum box along the axes.\n     * Before calling this, ensure the renderer has updated convex hull points.\n     * @return {!Rectangle} Bounds for a tight box around the Drawable.\n     */\n    getBounds () {\n        if (this.needsConvexHullPoints()) {\n            throw new Error('Needs updated convex hull points before bounds calculation.');\n        }\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n        // First, transform all the convex hull points by the current Drawable's\n        // transform. This allows us to skip recalculating the convex hull\n        // for many Drawable updates, including translation, rotation, scaling.\n        const projection = twgl.m4.ortho(-1, 1, -1, 1, -1, 1);\n        const skinSize = this.skin.size;\n        const tm = twgl.m4.multiply(this._uniforms.u_modelMatrix, projection);\n        const transformedHullPoints = [];\n        for (let i = 0; i < this._convexHullPoints.length; i++) {\n            const point = this._convexHullPoints[i];\n            const glPoint = twgl.v3.create(\n                0.5 + (-point[0] / skinSize[0]),\n                0.5 + (-point[1] / skinSize[1]),\n                0\n            );\n            twgl.m4.transformPoint(tm, glPoint, glPoint);\n            transformedHullPoints.push(glPoint);\n        }\n        // Search through transformed points to generate box on axes.\n        const bounds = new Rectangle();\n        bounds.initFromPointsAABB(transformedHullPoints);\n        return bounds;\n    }\n\n    /**\n     * Get the rough axis-aligned bounding box for the Drawable.\n     * Calculated by transforming the skin's bounds.\n     * Note that this is less precise than the box returned by `getBounds`,\n     * which is tightly snapped to account for a Drawable's transparent regions.\n     * `getAABB` returns a much less accurate bounding box, but will be much\n     * faster to calculate so may be desired for quick checks/optimizations.\n     * @return {!Rectangle} Rough axis-aligned bounding box for Drawable.\n     */\n    getAABB () {\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n        const tm = this._uniforms.u_modelMatrix;\n        const bounds = new Rectangle();\n        bounds.initFromPointsAABB([\n            twgl.m4.transformPoint(tm, [-0.5, -0.5, 0]),\n            twgl.m4.transformPoint(tm, [0.5, -0.5, 0]),\n            twgl.m4.transformPoint(tm, [-0.5, 0.5, 0]),\n            twgl.m4.transformPoint(tm, [0.5, 0.5, 0])\n        ]);\n        return bounds;\n    }\n\n    /**\n     * Return the best Drawable bounds possible without performing graphics queries.\n     * I.e., returns the tight bounding box when the convex hull points are already\n     * known, but otherwise return the rough AABB of the Drawable.\n     * @return {!Rectangle} Bounds for the Drawable.\n     */\n    getFastBounds () {\n        if (!this.needsConvexHullPoints()) {\n            return this.getBounds();\n        }\n        return this.getAABB();\n    }\n\n    /**\n     * Respond to an internal change in the current Skin.\n     * @private\n     */\n    _skinWasAltered () {\n        this.setConvexHullDirty();\n        this.setTransformDirty();\n    }\n\n    /**\n     * Calculate a color to represent the given ID number. At least one component of\n     * the resulting color will be non-zero if the ID is not RenderConstants.ID_NONE.\n     * @param {int} id The ID to convert.\n     * @returns {number[]} An array of [r,g,b,a], each component in the range [0,1].\n     */\n    static color4fFromID (id) {\n        id -= RenderConstants.ID_NONE;\n        const r = ((id >> 0) & 255) / 255.0;\n        const g = ((id >> 8) & 255) / 255.0;\n        const b = ((id >> 16) & 255) / 255.0;\n        return [r, g, b, 1.0];\n    }\n\n    /**\n     * Calculate the ID number represented by the given color. If all components of\n     * the color are zero, the result will be RenderConstants.ID_NONE; otherwise the result\n     * will be a valid ID.\n     * @param {int} r The red value of the color, in the range [0,255].\n     * @param {int} g The green value of the color, in the range [0,255].\n     * @param {int} b The blue value of the color, in the range [0,255].\n     * @returns {int} The ID represented by that color.\n     */\n    static color3bToID (r, g, b) {\n        let id;\n        id = (r & 255) << 0;\n        id |= (g & 255) << 8;\n        id |= (b & 255) << 16;\n        return id + RenderConstants.ID_NONE;\n    }\n}\n\nmodule.exports = Drawable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Drawable.js\n **/","/**\n * @fileoverview\n * A utility for creating and comparing axis-aligned rectangles.\n */\n\nclass Rectangle {\n    /**\n     * Rectangles are always initialized to the \"largest possible rectangle\";\n     * use one of the init* methods below to set up a particular rectangle.\n     * @constructor\n     */\n    constructor () {\n        this.left = -Infinity;\n        this.right = Infinity;\n        this.bottom = -Infinity;\n        this.top = Infinity;\n    }\n\n    /**\n     * Initialize a Rectangle from given Scratch-coordinate bounds.\n     * @param {number} left Left bound of the rectangle.\n     * @param {number} right Right bound of the rectangle.\n     * @param {number} bottom Bottom bound of the rectangle.\n     * @param {number} top Top bound of the rectangle.\n     */\n    initFromBounds (left, right, bottom, top) {\n        this.left = left;\n        this.right = right;\n        this.bottom = bottom;\n        this.top = top;\n    }\n\n    /**\n     * Initialize a Rectangle to the minimum AABB around a set of points.\n     * @param {Array.<Array.<number>>} points Array of [x, y] points.\n     */\n    initFromPointsAABB (points) {\n        this.left = Infinity;\n        this.right = -Infinity;\n        this.top = -Infinity;\n        this.bottom = Infinity;\n        for (let i = 0; i < points.length; i++) {\n            const x = points[i][0];\n            const y = points[i][1];\n            if (x < this.left) {\n                this.left = x;\n            }\n            if (x > this.right) {\n                this.right = x;\n            }\n            if (y > this.top) {\n                this.top = y;\n            }\n            if (y < this.bottom) {\n                this.bottom = y;\n            }\n        }\n    }\n\n    /**\n     * Determine if this Rectangle intersects some other.\n     * Note that this is a comparison assuming the Rectangle was\n     * initialized with Scratch-space bounds or points.\n     * @param {!Rectangle} other Rectangle to check if intersecting.\n     * @return {boolean} True if this Rectangle intersects other.\n     */\n    intersects (other) {\n        return (\n            this.left <= other.right &&\n            other.left <= this.right &&\n            this.top >= other.bottom &&\n            other.top >= this.bottom\n        );\n    }\n\n    /**\n     * Determine if this Rectangle fully contains some other.\n     * Note that this is a comparison assuming the Rectangle was\n     * initialized with Scratch-space bounds or points.\n     * @param {!Rectangle} other Rectangle to check if fully contained.\n     * @return {boolean} True if this Rectangle fully contains other.\n     */\n    contains (other) {\n        return (\n            other.left > this.left &&\n            other.right < this.right &&\n            other.top < this.top &&\n            other.bottom > this.bottom\n        );\n    }\n\n    /**\n     * Clamp a Rectangle to bounds.\n     * @param {number} left Left clamp.\n     * @param {number} right Right clamp.\n     * @param {number} bottom Bottom clamp.\n     * @param {number} top Top clamp.\n     */\n    clamp (left, right, bottom, top) {\n        this.left = Math.max(this.left, left);\n        this.right = Math.min(this.right, right);\n        this.bottom = Math.max(this.bottom, bottom);\n        this.top = Math.min(this.top, top);\n        // Ensure rectangle coordinates in order.\n        this.left = Math.min(this.left, this.right);\n        this.right = Math.max(this.right, this.left);\n        this.bottom = Math.min(this.bottom, this.top);\n        this.top = Math.max(this.top, this.bottom);\n    }\n\n    /**\n     * Push out the Rectangle to integer bounds.\n     */\n    snapToInt () {\n        this.left = Math.floor(this.left);\n        this.right = Math.ceil(this.right);\n        this.bottom = Math.floor(this.bottom);\n        this.top = Math.ceil(this.top);\n    }\n\n    /**\n     * Width of the Rectangle.\n     * @return {number} Width of rectangle.\n     */\n    get width () {\n        return Math.abs(this.left - this.right);\n    }\n\n    /**\n     * Height of the Rectangle.\n     * @return {number} Height of rectangle.\n     */\n    get height () {\n        return Math.abs(this.top - this.bottom);\n    }\n}\n\nmodule.exports = Rectangle;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Rectangle.js\n **/","const twgl = require('twgl.js');\n\nconst vertexShaderText = require('./shaders/sprite.vert');\nconst fragmentShaderText = require('./shaders/sprite.frag');\n\n\nclass ShaderManager {\n    constructor (gl) {\n        this._gl = gl;\n\n        /**\n         * The cache of all shaders compiled so far, filled on demand.\n         * @type {Object.<ShaderManager.DRAW_MODE, Array.<ProgramInfo>>}\n         * @private\n         */\n        this._shaderCache = {};\n        for (const modeName in ShaderManager.DRAW_MODE) {\n            if (ShaderManager.DRAW_MODE.hasOwnProperty(modeName)) {\n                this._shaderCache[modeName] = [];\n            }\n        }\n    }\n\n    /**\n     * Fetch the shader for a particular set of active effects.\n     * Build the shader if necessary.\n     * @param {ShaderManager.DRAW_MODE} drawMode Draw normally, silhouette, etc.\n     * @param {int} effectBits Bitmask representing the enabled effects.\n     * @returns {ProgramInfo} The shader's program info.\n     */\n    getShader (drawMode, effectBits) {\n        const cache = this._shaderCache[drawMode];\n        if (drawMode === ShaderManager.DRAW_MODE.silhouette) {\n            // Silhouette mode isn't affected by these effects.\n            effectBits &= ~(ShaderManager.EFFECT_INFO.color.mask | ShaderManager.EFFECT_INFO.brightness.mask);\n        }\n        let shader = cache[effectBits];\n        if (!shader) {\n            shader = cache[effectBits] = this._buildShader(drawMode, effectBits);\n        }\n        return shader;\n    }\n\n    /**\n     * Build the shader for a particular set of active effects.\n     * @param {ShaderManager.DRAW_MODE} drawMode Draw normally, silhouette, etc.\n     * @param {int} effectBits Bitmask representing the enabled effects.\n     * @returns {ProgramInfo} The new shader's program info.\n     * @private\n     */\n    _buildShader (drawMode, effectBits) {\n        const numEffects = ShaderManager.EFFECTS.length;\n\n        const defines = [\n            `#define DRAW_MODE_${drawMode}`\n        ];\n        for (let index = 0; index < numEffects; ++index) {\n            if ((effectBits & (1 << index)) !== 0) {\n                defines.push(`#define ENABLE_${ShaderManager.EFFECTS[index]}`);\n            }\n        }\n\n        const definesText = `${defines.join('\\n')}\\n`;\n        const vsFullText = definesText + vertexShaderText;\n        const fsFullText = definesText + fragmentShaderText;\n\n        return twgl.createProgramInfo(this._gl, [vsFullText, fsFullText]);\n    }\n}\n\n/**\n * Mapping of each effect name to info about that effect.\n * The info includes:\n * - The bit in 'effectBits' representing the effect.\n * - A conversion function which takes a Scratch value (generally in the range\n *   0..100 or -100..100) and maps it to a value useful to the shader. This\n *   mapping may not be reversible.\n * - `shapeChanges`, whether the effect could change the drawn shape.\n * @type {Object.<string,Object.<string,*>>}\n */\nShaderManager.EFFECT_INFO = {\n    color: {\n        mask: 1 << 0,\n        converter: x => (x / 200) % 1,\n        shapeChanges: false\n    },\n    fisheye: {\n        mask: 1 << 1,\n        converter: x => Math.max(0, (x + 100) / 100),\n        shapeChanges: true\n    },\n    whirl: {\n        mask: 1 << 2,\n        converter: x => -x * Math.PI / 180,\n        shapeChanges: true\n    },\n    pixelate: {\n        mask: 1 << 3,\n        converter: x => Math.abs(x) / 10,\n        shapeChanges: true\n    },\n    mosaic: {\n        mask: 1 << 4,\n        converter: x => {\n            x = Math.round((Math.abs(x) + 10) / 10);\n            // TODO: cap by Math.min(srcWidth, srcHeight)\n            return Math.max(1, Math.min(x, 512));\n        },\n        shapeChanges: true\n    },\n    brightness: {\n        mask: 1 << 5,\n        converter: x => Math.max(-100, Math.min(x, 100)) / 100,\n        shapeChanges: false\n    },\n    ghost: {\n        mask: 1 << 6,\n        converter: x => 1 - (Math.max(0, Math.min(x, 100)) / 100),\n        shapeChanges: false\n    }\n};\n\n/**\n * The name of each supported effect.\n * @type {Array}\n */\nShaderManager.EFFECTS = Object.keys(ShaderManager.EFFECT_INFO);\n\n/**\n * The available draw modes.\n * @readonly\n * @enum {string}\n */\nShaderManager.DRAW_MODE = {\n    /**\n     * Draw normally.\n     */\n    default: 'default',\n\n    /**\n     * Draw a silhouette using a solid color.\n     */\n    silhouette: 'silhouette',\n\n    /**\n     * Draw only the parts of the drawable which match a particular color.\n     */\n    colorMask: 'colorMask'\n};\n\nmodule.exports = ShaderManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ShaderManager.js\n **/","module.exports = \"uniform mat4 u_projectionMatrix;\\nuniform mat4 u_modelMatrix;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nvarying vec2 v_texCoord;\\n\\nvoid main() {\\n    gl_Position = u_projectionMatrix * u_modelMatrix * vec4(a_position, 0, 1);\\n    v_texCoord = a_texCoord;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/shaders/sprite.vert\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"precision mediump float;\\n\\nuniform float u_fudge;\\n\\n#ifdef DRAW_MODE_silhouette\\nuniform vec4 u_silhouetteColor;\\n#else // DRAW_MODE_silhouette\\n# ifdef ENABLE_color\\nuniform float u_color;\\n# endif // ENABLE_color\\n# ifdef ENABLE_brightness\\nuniform float u_brightness;\\n# endif // ENABLE_brightness\\n#endif // DRAW_MODE_silhouette\\n\\n#ifdef DRAW_MODE_colorMask\\nuniform vec3 u_colorMask;\\nuniform float u_colorMaskTolerance;\\n#endif // DRAW_MODE_colorMask\\n\\n#ifdef ENABLE_fisheye\\nuniform float u_fisheye;\\n#endif // ENABLE_fisheye\\n#ifdef ENABLE_whirl\\nuniform float u_whirl;\\n#endif // ENABLE_whirl\\n#ifdef ENABLE_pixelate\\nuniform float u_pixelate;\\nuniform vec2 u_skinSize;\\n#endif // ENABLE_pixelate\\n#ifdef ENABLE_mosaic\\nuniform float u_mosaic;\\n#endif // ENABLE_mosaic\\n#ifdef ENABLE_ghost\\nuniform float u_ghost;\\n#endif // ENABLE_ghost\\n\\nuniform sampler2D u_skin;\\n\\nvarying vec2 v_texCoord;\\n\\n#if !defined(DRAW_MODE_silhouette) && (defined(ENABLE_color) || defined(ENABLE_brightness))\\n// Branchless color conversions based on code from:\\n// http://www.chilliant.com/rgb2hsv.html by Ian Taylor\\n// Based in part on work by Sam Hocevar and Emil Persson\\n\\nconst float kEpsilon = 1e-6;\\n\\nvec3 convertRGB2HCV(vec3 rgb)\\n{\\n\\tvec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1, 2.0/3.0) : vec4(rgb.gb, 0, -1.0/3.0);\\n\\tvec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);\\n\\tfloat c = q.x - min(q.w, q.y);\\n\\tfloat h = abs((q.w - q.y) / (6.0 * c + kEpsilon) + q.z);\\n\\treturn vec3(h, c, q.x);\\n}\\n\\nvec3 convertRGB2HSL(vec3 rgb)\\n{\\n\\tvec3 hcv = convertRGB2HCV(rgb);\\n\\tfloat l = hcv.z - hcv.y * 0.5;\\n\\tfloat s = hcv.y / (1.0 - abs(l * 2.0 - 1.0) + kEpsilon);\\n\\treturn vec3(hcv.x, s, l);\\n}\\n\\nvec3 convertHue2RGB(float hue)\\n{\\n\\tfloat r = abs(hue * 6.0 - 3.0) - 1.0;\\n\\tfloat g = 2.0 - abs(hue * 6.0 - 2.0);\\n\\tfloat b = 2.0 - abs(hue * 6.0 - 4.0);\\n\\treturn clamp(vec3(r, g, b), 0.0, 1.0);\\n}\\n\\nvec3 convertHSL2RGB(vec3 hsl)\\n{\\n\\tvec3 rgb = convertHue2RGB(hsl.x);\\n\\tfloat c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;\\n\\treturn (rgb - 0.5) * c + hsl.z;\\n}\\n#endif // !defined(DRAW_MODE_silhouette) && (defined(ENABLE_color) || defined(ENABLE_brightness))\\n\\nconst vec2 kCenter = vec2(0.5, 0.5);\\n\\nvoid main()\\n{\\n\\tvec2 texcoord0 = v_texCoord;\\n\\n\\t#ifdef ENABLE_mosaic\\n\\ttexcoord0 = fract(u_mosaic * texcoord0);\\n\\t#endif // ENABLE_mosaic\\n\\n\\t#ifdef ENABLE_pixelate\\n\\t{\\n\\t\\t// TODO: clean up \\\"pixel\\\" edges\\n\\t\\tvec2 pixelTexelSize = u_skinSize / u_pixelate;\\n\\t\\ttexcoord0 = (floor(texcoord0 * pixelTexelSize) + kCenter) / pixelTexelSize;\\n\\t}\\n\\t#endif // ENABLE_pixelate\\n\\n\\t#ifdef ENABLE_whirl\\n\\t{\\n\\t\\tconst float kRadius = 0.5;\\n\\t\\tvec2 offset = texcoord0 - kCenter;\\n\\t\\tfloat offsetMagnitude = length(offset);\\n\\t\\tfloat whirlFactor = 1.0 - (offsetMagnitude / kRadius);\\n\\t\\tfloat whirlActual = u_whirl * whirlFactor * whirlFactor;\\n\\t\\tfloat sinWhirl = sin(whirlActual);\\n\\t\\tfloat cosWhirl = cos(whirlActual);\\n\\t\\tmat2 rotationMatrix = mat2(\\n\\t\\t\\tcosWhirl, -sinWhirl,\\n\\t\\t\\tsinWhirl, cosWhirl\\n\\t\\t);\\n\\n\\t\\t// TODO: tweak this algorithm such that texture coordinates don't depend on conditionals.\\n\\t\\t// see: https://www.opengl.org/wiki/Sampler_%28GLSL%29#Non-uniform_flow_control\\n\\t\\tif (offsetMagnitude <= kRadius)\\n\\t\\t{\\n\\t\\t\\ttexcoord0 = rotationMatrix * offset + kCenter;\\n\\t\\t}\\n\\t}\\n\\t#endif // ENABLE_whirl\\n\\n\\t#ifdef ENABLE_fisheye\\n\\t{\\n\\t\\tvec2 vec = (texcoord0 - kCenter) / kCenter;\\n\\t\\tfloat r = pow(length(vec), u_fisheye);\\n\\t\\tfloat angle = atan(vec.y, vec.x);\\n\\t\\t// TODO: tweak this algorithm such that texture coordinates don't depend on conditionals.\\n\\t\\t// see: https://www.opengl.org/wiki/Sampler_%28GLSL%29#Non-uniform_flow_control\\n\\t\\tif (r <= 1.0)\\n\\t\\t{\\n\\t\\t\\ttexcoord0 = kCenter + r * vec2(cos(angle), sin(angle)) * kCenter;\\n\\t\\t}\\n\\t}\\n\\t#endif // ENABLE_fisheye\\n\\n\\tgl_FragColor = texture2D(u_skin, texcoord0);\\n\\n\\n\\tif (gl_FragColor.a == 0.0)\\n\\t{\\n\\t\\tdiscard;\\n\\t}\\n\\n    #ifdef ENABLE_ghost\\n    gl_FragColor.a *= u_ghost;\\n    #endif // ENABLE_ghost\\n\\n\\t#ifdef DRAW_MODE_silhouette\\n\\t// switch to u_silhouetteColor only AFTER the alpha test\\n\\tgl_FragColor = u_silhouetteColor;\\n\\t#else // DRAW_MODE_silhouette\\n\\n\\t#if defined(ENABLE_color) || defined(ENABLE_brightness)\\n\\t{\\n\\t\\tvec3 hsl = convertRGB2HSL(gl_FragColor.xyz);\\n\\n\\t\\t#ifdef ENABLE_color\\n\\t\\t{\\n\\t\\t\\t// this code forces grayscale values to be slightly saturated\\n\\t\\t\\t// so that some slight change of hue will be visible\\n\\t\\t\\tconst float minLightness = 0.11 / 2.0;\\n\\t\\t\\tconst float minSaturation = 0.09;\\n\\t\\t\\tif (hsl.z < minLightness) hsl = vec3(0.0, 1.0, minLightness);\\n\\t\\t\\telse if (hsl.y < minSaturation) hsl = vec3(0.0, minSaturation, hsl.z);\\n\\n\\t\\t\\thsl.x = mod(hsl.x + u_color, 1.0);\\n\\t\\t\\tif (hsl.x < 0.0) hsl.x += 1.0;\\n\\t\\t}\\n\\t\\t#endif // ENABLE_color\\n\\n\\t\\t#ifdef ENABLE_brightness\\n\\t\\thsl.z = clamp(hsl.z + u_brightness, 0.0, 1.0);\\n\\t\\t#endif // ENABLE_brightness\\n\\n\\t\\tgl_FragColor.rgb = convertHSL2RGB(hsl);\\n\\t}\\n\\t#endif // defined(ENABLE_color) || defined(ENABLE_brightness)\\n\\n\\t#ifdef DRAW_MODE_colorMask\\n\\tvec3 maskDistance = abs(gl_FragColor.rgb - u_colorMask);\\n\\tvec3 colorMaskTolerance = vec3(u_colorMaskTolerance, u_colorMaskTolerance, u_colorMaskTolerance);\\n\\tif (any(greaterThan(maskDistance, colorMaskTolerance)))\\n\\t{\\n\\t\\tdiscard;\\n\\t}\\n\\t#endif // DRAW_MODE_colorMask\\n\\n\\t// WebGL defaults to premultiplied alpha\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n\\n\\t#endif // DRAW_MODE_silhouette\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/shaders/sprite.frag\n ** module id = 24\n ** module chunks = 0\n **/","const twgl = require('twgl.js');\n\nconst RenderConstants = require('./RenderConstants');\nconst Skin = require('./Skin');\n\n\n/**\n * Attributes to use when drawing with the pen\n * @typedef {object} PenAttributes\n * @property {number} [diameter] - The size (diameter) of the pen.\n * @property {number[]} [color4f] - The pen color as an array of [r,g,b,a], each component in the range [0,1].\n */\n\n/**\n * The pen attributes to use when unspecified.\n * @type {PenAttributes}\n */\nconst DefaultPenAttributes = {\n    color4f: [0, 0, 1, 1],\n    diameter: 1\n};\n\n\nclass PenSkin extends Skin {\n    /**\n     * Create a Skin which implements a Scratch pen layer.\n     * @param {int} id - The unique ID for this Skin.\n     * @param {RenderWebGL} renderer - The renderer which will use this Skin.\n     */\n    constructor (id, renderer) {\n        super(id);\n\n        /** @type {RenderWebGL} */\n        this._renderer = renderer;\n\n        /** @type {HTMLCanvasElement} */\n        this._canvas = document.createElement('canvas');\n\n        /** @type {boolean} */\n        this._canvasDirty = false;\n\n        /** @type {WebGLTexture} */\n        this._texture = null;\n\n        this.onNativeSizeChanged = this.onNativeSizeChanged.bind(this);\n        this._renderer.on(RenderConstants.Events.NativeSizeChanged, this.onNativeSizeChanged);\n\n        this._setCanvasSize(renderer.getNativeSize());\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        this._renderer.removeListener(RenderConstants.Events.NativeSizeChanged, this.onNativeSizeChanged);\n        this._renderer.gl.deleteTexture(this._texture);\n        this._texture = null;\n        super.dispose();\n    }\n\n    /**\n     * @return {[number,number]} the \"native\" size, in texels, of this skin.\n     */\n    get size () {\n        return [this._canvas.width, this._canvas.height];\n    }\n\n    /**\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given size.\n     * @param {int} pixelsWide - The width that the skin will be rendered at, in GPU pixels.\n     * @param {int} pixelsTall - The height that the skin will be rendered at, in GPU pixels.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (pixelsWide, pixelsTall) {\n        if (this._canvasDirty) {\n            this._canvasDirty = false;\n\n            const gl = this._renderer.gl;\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        }\n\n        return this._texture;\n    }\n\n    /**\n     * Clear the pen layer.\n     */\n    clear () {\n        const ctx = this._canvas.getContext('2d');\n        ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        this._canvasDirty = true;\n    }\n\n    /**\n     * Draw a point on the pen layer.\n     * @param {PenAttributes} penAttributes - how the point should be drawn.\n     * @param {number} x - the X coordinate of the point to draw.\n     * @param {number} y - the Y coordinate of the point to draw.\n     */\n    drawPoint (penAttributes, x, y) {\n        // Canvas renders a zero-length line as two end-caps back-to-back, which is what we want.\n        this.drawLine(penAttributes, x, y, x, y);\n    }\n\n    /**\n     * Draw a point on the pen layer.\n     * @param {PenAttributes} penAttributes - how the line should be drawn.\n     * @param {number} x0 - the X coordinate of the beginning of the line.\n     * @param {number} y0 - the Y coordinate of the beginning of the line.\n     * @param {number} x1 - the X coordinate of the end of the line.\n     * @param {number} y1 - the Y coordinate of the end of the line.\n     */\n    drawLine (penAttributes, x0, y0, x1, y1) {\n        const ctx = this._canvas.getContext('2d');\n        this._setAttributes(ctx, penAttributes);\n        ctx.beginPath();\n        ctx.moveTo(this._rotationCenter[0] + x0, this._rotationCenter[1] - y0);\n        ctx.lineTo(this._rotationCenter[0] + x1, this._rotationCenter[1] - y1);\n        ctx.stroke();\n        this._canvasDirty = true;\n    }\n\n    /**\n     * Stamp an image onto the pen layer.\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} stampElement - the element to use as the stamp.\n     * @param {number} x - the X coordinate of the stamp to draw.\n     * @param {number} y - the Y coordinate of the stamp to draw.\n     */\n    drawStamp (stampElement, x, y) {\n        const ctx = this._canvas.getContext('2d');\n        ctx.drawImage(stampElement, this._rotationCenter[0] + x, this._rotationCenter[1] - y);\n        this._canvasDirty = true;\n    }\n\n    /**\n     * React to a change in the renderer's native size.\n     * @param {object} event - The change event.\n     */\n    onNativeSizeChanged (event) {\n        this._setCanvasSize(event.newSize);\n    }\n\n    /**\n     * Set the size of the pen canvas.\n     * @param {[int,int]} canvasSize - the new width and height for the canvas.\n     * @private\n     */\n    _setCanvasSize (canvasSize) {\n        const [width, height] = canvasSize;\n\n        const gl = this._renderer.gl;\n        this._canvas.width = width;\n        this._canvas.height = height;\n        this._rotationCenter[0] = width / 2;\n        this._rotationCenter[1] = height / 2;\n        this._texture = twgl.createTexture(\n            gl,\n            {\n                auto: true,\n                mag: gl.NEAREST,\n                min: gl.NEAREST,\n                wrap: gl.CLAMP_TO_EDGE,\n                src: this._canvas\n            }\n        );\n        this._canvasDirty = true;\n    }\n\n    /**\n     * Set context state to match provided pen attributes.\n     * @param {CanvasRenderingContext2D} context - the canvas rendering context to be modified.\n     * @param {PenAttributes} penAttributes - the pen attributes to be used.\n     * @private\n     */\n    _setAttributes (context, penAttributes) {\n        penAttributes = penAttributes || DefaultPenAttributes;\n        const color4f = penAttributes.color4f || DefaultPenAttributes.color4f;\n        const diameter = penAttributes.diameter || DefaultPenAttributes.diameter;\n\n        const r = Math.round(color4f[0] * 255);\n        const g = Math.round(color4f[1] * 255);\n        const b = Math.round(color4f[2] * 255);\n        const a = Math.round(color4f[3]);   // Alpha is 0 to 1 (not 0 to 255 like r,g,b)\n\n        context.strokeStyle = `rgba(${r},${g},${b},${a})`;\n        context.lineCap = 'round';\n        context.lineWidth = diameter;\n    }\n}\n\nmodule.exports = PenSkin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/PenSkin.js\n **/","const twgl = require('twgl.js');\n\nconst Skin = require('./Skin');\nconst SvgRenderer = require('./svg-quirks-mode/svg-renderer');\n\nclass SVGSkin extends Skin {\n    /**\n     * Create a new SVG skin.\n     * @param {!int} id - The ID for this Skin.\n     * @param {!RenderWebGL} renderer - The renderer which will use this skin.\n     */\n    constructor (id, renderer) {\n        super(id);\n\n        /** @type {RenderWebGL} */\n        this._renderer = renderer;\n\n        /** @type {SvgRenderer} */\n        this._svgRenderer = new SvgRenderer();\n\n        /** @type {WebGLTexture} */\n        this._texture = null;\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        if (this._texture) {\n            this._renderer.gl.deleteTexture(this._texture);\n            this._texture = null;\n        }\n        super.dispose();\n    }\n\n    /**\n     * @return {[number,number]} the \"native\" size, in texels, of this skin.\n     */\n    get size () {\n        return [this._svgRenderer.canvas.width, this._svgRenderer.canvas.height];\n    }\n\n    /**\n     * @param {[number,number]} scale - The scaling factors to be used.\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given scale.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (scale) {\n        // TODO: re-render a scaled version if the requested scale is significantly larger than the current render\n        return this._texture;\n    }\n\n    /**\n     * Set the contents of this skin to a snapshot of the provided SVG data.\n     * @param {string} svgData - new SVG to use.\n     * @param {number[]=} rotationCenter - Optional rotation center for the SVG. If not supplied, it will be\n     * calculated from the bounding box\n     */\n    setSVG (svgData, rotationCenter) {\n        this._svgRenderer.fromString(svgData, () => {\n            const gl = this._renderer.gl;\n            if (this._texture) {\n                gl.bindTexture(gl.TEXTURE_2D, this._texture);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._svgRenderer.canvas);\n            } else {\n                const textureOptions = {\n                    auto: true,\n                    mag: gl.NEAREST,\n                    min: gl.NEAREST, // TODO: mipmaps, linear (except pixelate)\n                    wrap: gl.CLAMP_TO_EDGE,\n                    src: this._svgRenderer.canvas\n                };\n\n                this._texture = twgl.createTexture(gl, textureOptions);\n            }\n            if (typeof rotationCenter === 'undefined') rotationCenter = this.calculateRotationCenter();\n            this.setRotationCenter.apply(this, rotationCenter);\n            this.emit(Skin.Events.WasAltered);\n        });\n    }\n}\n\nmodule.exports = SVGSkin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SVGSkin.js\n **/","// Synchronously load TTF fonts.\n// First, have Webpack load their data as Base 64 strings.\n/* eslint-disable global-require */\nconst FONTS = {\n    Donegal: require('base64!scratch-render-fonts/DonegalOne-Regular.ttf'),\n    Gloria: require('base64!scratch-render-fonts/GloriaHallelujah.ttf'),\n    Mystery: require('base64!scratch-render-fonts/MysteryQuest-Regular.ttf'),\n    Marker: require('base64!scratch-render-fonts/PermanentMarker.ttf'),\n    Scratch: require('base64!scratch-render-fonts/Scratch.ttf')\n};\n/* eslint-enable global-require */\n\n// For each Base 64 string,\n// 1. Replace each with a usable @font-face tag that points to a Data URI.\n// 2. Inject the font into a style on `document.body`, so measurements\n//    can be accurately taken in SvgRenderer._transformMeasurements.\nconst documentStyleTag = document.createElement('style');\ndocumentStyleTag.id = 'scratch-font-styles';\nfor (const fontName in FONTS) {\n    const fontData = FONTS[fontName];\n    FONTS[fontName] = '@font-face {' +\n        `font-family: \"${fontName}\";src: url(\"data:application/x-font-ttf;charset=utf-8;base64,${fontData}\");}`;\n    documentStyleTag.textContent += FONTS[fontName];\n}\ndocument.body.insertBefore(documentStyleTag, document.body.firstChild);\n\n/**\n * Main quirks-mode SVG rendering code.\n */\nclass SvgRenderer {\n    /**\n     * Create a quirks-mode SVG renderer for a particular canvas.\n     * @param {HTMLCanvasElement} [canvas] An optional canvas element to draw to. If this is not provided, the renderer\n     * will create a new canvas.\n     * @constructor\n     */\n    constructor (canvas) {\n        this._canvas = canvas || document.createElement('canvas');\n        this._context = this._canvas.getContext('2d');\n    }\n\n    /**\n     * @returns {!HTMLCanvasElement} this renderer's target canvas.\n     */\n    get canvas () {\n        return this._canvas;\n    }\n\n    /**\n     * Load an SVG from a string and draw it.\n     * This will be parsed and transformed, and finally drawn.\n     * When drawing is finished, the `onFinish` callback is called.\n     * @param {string} svgString String of SVG data to draw in quirks-mode.\n     * @param {Function=} onFinish Optional callback for when drawing finished.\n     */\n    fromString (svgString, onFinish) {\n        // Store the callback for later.\n        this._onFinish = onFinish;\n        // Parse string into SVG XML.\n        const parser = new DOMParser();\n        this._svgDom = parser.parseFromString(svgString, 'text/xml');\n        if (this._svgDom.children.length < 1 ||\n            this._svgDom.children[0].localName !== 'svg') {\n            throw new Error('Document does not appear to be SVG.');\n        }\n        this._svgTag = this._svgDom.children[0];\n        // Transform all text elements.\n        this._transformText();\n        // Transform measurements.\n        this._transformMeasurements();\n        // Draw to a canvas.\n        this._draw();\n    }\n\n    /**\n     * Transforms an SVG's text elements for Scratch 2.0 quirks.\n     * These quirks include:\n     * 1. `x` and `y` properties are removed/ignored.\n     * 2. Alignment is set to `text-before-edge`.\n     * 3. Line-breaks are converted to explicit <tspan> elements.\n     * 4. Any required fonts are injected.\n     */\n    _transformText () {\n        // Collect all text elements into a list.\n        const textElements = [];\n        const collectText = domElement => {\n            if (domElement.localName === 'text') {\n                textElements.push(domElement);\n            }\n            for (let i = 0; i < domElement.children.length; i++) {\n                collectText(domElement.children[i]);\n            }\n        };\n        collectText(this._svgTag);\n        // For each text element, apply quirks.\n        const fontsNeeded = {};\n        for (const textElement of textElements) {\n            // Remove x and y attributes - they are not used in Scratch.\n            textElement.removeAttribute('x');\n            textElement.removeAttribute('y');\n            // Set text-before-edge alignment:\n            // Scratch renders all text like this.\n            textElement.setAttribute('alignment-baseline', 'text-before-edge');\n            // If there's no font size provided, provide one.\n            if (!textElement.getAttribute('font-size')) {\n                textElement.setAttribute('font-size', '18');\n            }\n            // If there's no font-family provided, provide one.\n            if (!textElement.getAttribute('font-family')) {\n                textElement.setAttribute('font-family', 'Helvetica');\n            }\n            // Collect fonts that need injection.\n            const font = textElement.getAttribute('font-family');\n            fontsNeeded[font] = true;\n            // Fix line breaks in text, which are not natively supported by SVG.\n            let text = textElement.textContent;\n            if (text) {\n                textElement.textContent = '';\n                const lines = text.split('\\n');\n                text = '';\n                for (const line of lines) {\n                    const tspanNode = this._createSVGElement('tspan');\n                    tspanNode.setAttribute('x', '0');\n                    tspanNode.setAttribute('dy', '1em');\n                    tspanNode.textContent = line;\n                    textElement.appendChild(tspanNode);\n                }\n            }\n        }\n        // Inject fonts that are needed.\n        // It would be nice if there were another way to get the SVG-in-canvas\n        // to render the correct font family, but I couldn't find any other way.\n        // Other things I tried:\n        // Just injecting the font-family into the document: no effect.\n        // External stylesheet linked to by SVG: no effect.\n        // Using a <link> or <style>@import</style> to link to font-family\n        // injected into the document: no effect.\n        const newDefs = this._createSVGElement('defs');\n        const newStyle = this._createSVGElement('style');\n        const allFonts = Object.keys(fontsNeeded);\n        for (const font of allFonts) {\n            if (FONTS.hasOwnProperty(font)) {\n                newStyle.textContent += FONTS[font];\n            }\n        }\n        newDefs.appendChild(newStyle);\n        this._svgTag.insertBefore(newDefs, this._svgTag.children[0]);\n    }\n\n    /**\n     * Transform the measurements of the SVG.\n     * In Scratch 2.0, SVGs are drawn without respect to the width,\n     * height, and viewBox attribute on the tag. The exporter\n     * does output these properties - but they appear to be incorrect often.\n     * To address the incorrect measurements, we append the DOM to the\n     * document, and then use SVG's native `getBBox` to find the real\n     * drawn dimensions. This ensures things drawn in negative dimensions,\n     * outside the given viewBox, etc., are all eventually drawn to the canvas.\n     * I tried to do this several other ways: stripping the width/height/viewBox\n     * attributes and then drawing (Firefox won't draw anything),\n     * or inflating them and then measuring a canvas. But this seems to be\n     * a natural and performant way.\n     */\n    _transformMeasurements () {\n        // Save `svgText` for later re-parsing.\n        const svgText = this._toString();\n\n        // Append the SVG dom to the document.\n        // This allows us to use `getBBox` on the page,\n        // which returns the full bounding-box of all drawn SVG\n        // elements, similar to how Scratch 2.0 did measurement.\n        const svgSpot = document.createElement('span');\n        let bbox;\n        try {\n            document.body.appendChild(svgSpot);\n            svgSpot.appendChild(this._svgTag);\n            // Take the bounding box.\n            bbox = this._svgTag.getBBox();\n        } finally {\n            // Always destroy the element, even if, for example, getBBox throws.\n            document.body.removeChild(svgSpot);\n        }\n\n        // Re-parse the SVG from `svgText`. The above DOM becomes\n        // unusable/undrawable in browsers once it's appended to the page,\n        // perhaps for security reasons?\n        const parser = new DOMParser();\n        this._svgDom = parser.parseFromString(svgText, 'text/xml');\n        this._svgTag = this._svgDom.children[0];\n\n        // Set the correct measurements on the SVG tag, and save them.\n        this._svgTag.setAttribute('width', bbox.width);\n        this._svgTag.setAttribute('height', bbox.height);\n        this._svgTag.setAttribute('viewBox',\n            `${bbox.x} ${bbox.y} ${bbox.width} ${bbox.height}`);\n        this._measurements = bbox;\n    }\n\n    /**\n     * Serialize the active SVG DOM to a string.\n     * @returns {string} String representing current SVG data.\n     */\n    _toString () {\n        const serializer = new XMLSerializer();\n        return serializer.serializeToString(this._svgDom);\n    }\n\n    /**\n     * Get the drawing ratio, adjusted for HiDPI screens.\n     * @return {number} Scale ratio to draw to canvases with.\n     */\n    getDrawRatio () {\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const backingStoreRatio = this._context.webkitBackingStorePixelRatio ||\n            this._context.mozBackingStorePixelRatio ||\n            this._context.msBackingStorePixelRatio ||\n            this._context.oBackingStorePixelRatio ||\n            this._context.backingStorePixelRatio || 1;\n        return devicePixelRatio / backingStoreRatio;\n    }\n\n    /**\n     * Draw the SVG to a canvas.\n     */\n    _draw () {\n        const ratio = this.getDrawRatio();\n        const bbox = this._measurements;\n\n        // Set up the canvas for drawing.\n        this._canvas.width = bbox.width * ratio;\n        this._canvas.height = bbox.height * ratio;\n        this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        this._context.scale(ratio, ratio);\n\n        // Convert the SVG text to an Image, and then draw it to the canvas.\n        const img = new Image();\n        img.onload = () => {\n            this._context.drawImage(img, 0, 0);\n            // Reset the canvas transform after drawing.\n            this._context.setTransform(1, 0, 0, 1, 0, 0);\n            // Set the CSS style of the canvas to the actual measurements.\n            this._canvas.style.width = bbox.width;\n            this._canvas.style.height = bbox.height;\n            // All finished - call the callback if provided.\n            if (this._onFinish) {\n                this._onFinish();\n            }\n        };\n        const svgText = this._toString();\n        img.src = `data:image/svg+xml;utf8,${encodeURIComponent(svgText)}`;\n    }\n\n    /**\n     * Helper to create an SVG element with the correct NS.\n     * @param {string} tagName Tag name for the element.\n     * @return {!DOMElement} Element created.\n     */\n    _createSVGElement (tagName) {\n        return document.createElementNS(\n            'http://www.w3.org/2000/svg', tagName\n        );\n    }\n}\n\nmodule.exports = SvgRenderer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/svg-quirks-mode/svg-renderer.js\n **/","module.exports = \"AAEAAAAPAIAAAwBwR1NVQrF7s6AAANxsAAACBE9TLzKWu362AAABeAAAAGBjbWFwAGmpXwAACKwAAAYiY3Z0IAToGrUAABjIAAAALmZwZ23kLgKEAAAO0AAACWJnYXNwAAAAEAAA3GQAAAAIZ2x5Zt+xS8sAABxkAACrpGhlYWQDL3pgAAAA/AAAADZoaGVhEiUJ3QAAATQAAAAkaG10eNNple8AAAHYAAAG1GxvY2HXngI0AAAY+AAAA2xtYXhwAs4KyAAAAVgAAAAgbmFtZUejscAAAMgIAAAKenBvc3Rt/EG5AADShAAACd1wcmVw/Jci1gAAGDQAAACTAAEAAAABAQau7ek+Xw889QALCAAAAAAAzNYlZAAAAADM6AlB/8T95wqOB9AAAAAJAAIAAAAAAAAAAQAAB9D90AAACwb/xP9RCo4AAQAAAAAAAAAAAAAAAAAAAbUAAQAAAbUAngAHAJUABAACACIAMABqAAAAfQliAAQAAQADBNkBkAAFAAAFmgUzAAABHwWaBTMAAAPRAGYCAAAAAgIGAgYDAAYHBKAAAK9QACBKAAAAAAAAAABTVEMgAEAAAPsCB9D90AAAB9ACMCAAAJMAAAAAA/wF+gAAACAABAKjAAAAAAAAAqUAAAKsAAAFQwBnBMMADQVSACkHuwB8B1AAfAKrAHcHUABoA1UAiwNRAFYCAQC3BKkAvwSsANQCqABGAqsAoQP9ANsFVAAyBTAAlQfGAHgGpgCCAqsA2wNVAOEDVQBQBRcAwASpAKsCQABuA/8AvwJAAIwDUQB2BVIAhQNzAIMEqQB2BBYAfwSlADYEEwB8BKkAeQQTAF4EqgCYBKkAeQJAAIwCQABuBVIAlwSrAJ4FUgCmBGYAnAcmAHsF///WBV4AbgXnAGQGpQBmBVYAbgVLAG4GJQBkBqoAZgLUAGgCwAAmBdwAZwVNAGcH+wALBqoAUQaqAGQFYwBnBqoAZAW2AG4FNgCfBVQAJQaBAEMF///XCKb/9gX8ACoFwgAMBVYATgKrAKoDUQB3AqsAqgSpAIgFL//2AtMAcgRKAGcEwwANBAIAWgSfAFoEDwBYAykAXgSVAGUFOAA2AqMAVgKaAAUEswA3AqQAWgfXAFsFSQBdBJ8AWgTlAD8EtwBaA8cAWwPoAIwDNwBEBTEAXgSLAAMGrgANBIwAIQSZAAQEFABfA1UANQIBALcDVQBLBKkArwQPAFgEDwBYBA8AWAKj/+MFIgCgA/8AkAQbAF0FUgCeBBsAoQP/ARMFKwCeBU8ANQcaAHMHEQBzCDMAUALTAHIDqgBxBKsAngfn/8QHVACvBRcAqwUvANgFGgDYBfwAKASsAK4ErABrBdUAvwYAAG4FUgA9A/8ABAP/AKUD/wB/BlsAaAaDAGcEnwBaAqsAqwVWAMYFrwA/BeIAaQSpAK8GDABNBVIAqgVSANgGwACMAqwAAAivAGQHSwBaBVYAvwf6AL8EfAC3BHwAvQKrALcCqwC9BJAAqQSpAIAD///oA1UAqgNVANgFIgCgAmgAoAKrAL0LBgB4AqMAVgOyAHID1gByAzoAcgOLAGoCFQByAt0AcgLfAHIEZgByApIAbAOyAHIGqgBFBS8AaQSdAFoEfAC9BGYAcgK/AHICvwByA9YAcgOyAHICGAByBEoAZwX//9YFVABsAfMAcgUeAHIDZQBcBU0AZwOVAEQCowBWAqwAVAUxAF4GgQBDBqoARQSfAFoCqABcAzcARAVUACUGqgBFAzoAcgRIAHIDiwBqBTgANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAarAAAF/ABtAo7/+gNaAFwAAAAAA7IAcgLdAHICmgAFAhUAcgQPAFgESgBnBEoAZwRKAGcESgBnBAIAWgQPAFgFVABGAqP/0gU9AFYCo//hBLMANwTYAF0FSQBdBUkAXQSfAFoEnwBaBJ8AWgSfAFoEnwBaA8cAWwPHAFsFMQBeBTEAXgUxAF4FMQBeBJkABASZAAQF///WBf//1gX//9YF///WBf//1gX//9YF5wBkBVYAbgVWAG4FVgBuBVYAbgLUAE0C1ABoAtT/4gLUAAMC1AAHAsAADQaqAFEGqgBRBqoAZAaqAGQGqgBkBqoAZAaqAGQGqgBkBbYAbgW2AG4FtgBuBoEAQwaBAEMGgQBDBoEAQwXCAAwGqgBRBUkAXQX//9YF///WBecAZAXnAGQF5wBkBecAZAalAGYFVgBuBVYAbgVWAG4FVgBuBiUAZAYlAGQGJQBkBiUAZAaqAGYC1AA/AtQADwLUAGgF3ABnBU0AZwaqAFEGqgBRBqoAZAaqAGQFNgCfBTYAnwU2AJ8FNgCfBTYAnwVUACUFVAAlBoEAQwaBAEMGgQBDBoEAQwaBAEMGqgBkCKb/9gim//YIpv/2CKb/9gXCAAwFwgAMBcIADAVWAE4FVgBOBVYATgRKAGcESgBnBAIAWgQCAFoEAgBaBAIAWgaDAGcEDwBYBA8AWAQPAFgEDwBYBJUAZQSVAGUElQBlBJUAZQKjAB0Co//vBJkABASZAAQGrgANBq4ADQauAA0GrgANBTEAXgUxAF4FMQBeBTEAXgM3AEQD6ACMA+gAjAPoAIwD6ACMA+gAjAPHAFsEFABfBBQAXwQUAF8EnwBaBJ8AWgVJAF0FSQBdAqgAXAPoAIwFNgCfBOUAPwVjAGcH1wBbB/sACwVLAG4EnwBaBqUAZgTDABMFXgBuAykAXgVUACUEnwBaBTEAXgWGAGwDqQByBZQAaARKAGcESgBnAqP/xgKjAFYFTQBnCCMAAAYMAE0ErACuBlsAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNwBEAzcARAarACUEwwChBlIAXgXMAF4FzQBeAqsAvAKrAMgD/QDIAAAAAwAAAAMAAAAcAAEAAAAABBgAAwABAAAAHAAEA/wAAABuAEAABQAuAAoADQAUABkAIAB+AH8BSAF+AZIB/QIZAhsCNwLHAt0DlAOpA7wDwB4DHgseHx5BHlceYR5rHoUe8yAUIB4gIiAmIDAgMyA6IDwgRCCsISIhJiICIgYiDyISIhoiHiIrIkgiYCJlJcr2w/sC//8AAAAAAA0AEAAVAB4AIQB/AKABSgGSAfwCGAIbAjcCxgLYA5QDqQO8A8AeAh4KHh4eQB5WHmAeah6AHvIgEyAYICAgJiAwIDIgOSA8IEQgrCEiISYiAiIGIg8iESIaIh4iKyJIImAiZCXK9sP7AP//AAD/9QGTAMoAAP/wASsAAAAA/wMAAAAA/1z+tAAAAAD+Cv33/eP8ywAAAAAAAAAAAAAAAAAAAAAAAOCLAAAAAOB04HzhgeBu4XLgYuA531vfad6G3pHeewAA3nreZN5h3k7eIN4g2tsJ/gavAAEAbgAAAAAAAAB8AAAAAAB8AcwAAAIyAjQAAAAAAjICNAAAAAAAAAAAAjYCOAI6AjwCPgJAAkICRAJOAAACTgJaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkYAAAAAAAAAAAAAAAAAAAAAAAAAAAABAOgA2ADZANoA2wDcAN0A3gGiAaEBqAGpAAMAmwCSAHUAdgC5AIYADQB3AH8AfACNAJgAkwDkAHsAsAB0AIMADAALAH4AhwB5AKoAtAAJAI4AmQAIAAcACgC8AQkBCgELAQwBDQEOAIEBDwEQAREBEgETARQBFQEXARgAuAEbARwBHQEeAR8BIAAPASEBJQEmAScBKAEpAAQAegGYAZkA7gDwAO8A8QCQAPIA8wBvAHAAcQGaAZsA9wByALoA+wD8AP0A/gD/AQAApACRAQMBBAEFAQYBBwAFAQgBLAFcAS0BXQDDAMIBLgFeAS8BXwExAWEBMAFgATIAxgDOAM8BNAFkATUBZQE2AWYAxADtATMBYwE3AWcBOAFoAToBaQE5AWoBOwDXANMA9AEWAPUBPAFrAT0BbADLAMoBPgCtAZcA9gEZAOYBPwD4APkBnADQAUABhQDIAMcBlQDnAAYAEAEaAPoBQgGEAUEBgwEqASsBQwGBAUQBggFRAZMAnACdASIBfQEkAQIBIwEBAUUBegFGAXsBSAF5AUcBfAGtAawBSgDJANIA0QFMAXMBTQF0AU4BdQFPAXYBUAGUAM0AzAFUAXEBVwFuAVgBWQF+AVsBgAFaAX8BnQFiAUkBeACuALcAsQCyALMAtgCvALUBkAGPAY4BjQGMAZEBiwGKAYkBiAGHAYYBkgGrAVIBbwFTAXABVQFyAVYBbQCiAKMAqwGyAKAAoQC7AHMAqQB4AIkADgAGAgoAAAAAAQAAAQAAAAAA2QDaANsA3ADdAAEAAgGhAAAAAAACAAAAAAGjAaQBpQGmAacA3wDgAOEA4gDjAAAAAAAAAAEBqAGpAAMAEQASABMAFAAVABYAFwAYABkAGgAbABwAHQAeAB8AIAAhACIAIwAkACUAJgAnACgAKQAqACsALAAtAC4ALwAwADEAMgAzADQANQA2ADcAOAA5ADoAOwA8AD0APgA/AEAAQQBCAEMARABFAEYARwBIAEkASgBLAEwATQBOAE8AUABRAFIAUwBUAFUAVgBXAFgAWQBaAFsAXABdAF4AXwBgAGEAYgBjAGQAZQBmAGcAaABpAGoAawBsAG0AbgAAAQ0BDgEPAREBGwEgASgBmQGYAO4A7wDwAPEA8gBvAPMAcABxAZsBmgD3AHIA+wD9APwA/gEAAP8BBAEDAQUBBgBz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sDsssAAVIEewACNCsgABARUUEy6wKCotsDwssAAVIEewACNCsgABARUUEy6wKCotsD0ssQABFBOwKSotsD4ssCsqLbA1LLAsKyMgLkawAiVGUlggPFkusSIBFCstsEkssgAANSstsEossgABNSstsEsssgEANSstsEwssgEBNSstsDYssC0riiAgPLAEI0KKOCMgLkawAiVGUlggPFkusSIBFCuwBEMusCIrLbBVLLIAADYrLbBWLLIAATYrLbBXLLIBADYrLbBYLLIBATYrLbA3LLAAFrAEJbAEJiAuRyNHI2GwBkUrIyA8IC4jOLEiARQrLbBNLLIAADcrLbBOLLIAATcrLbBPLLIBADcrLbBQLLIBATcrLbA4LLEJBCVCsAAWsAQlsAQlIC5HI0cjYSCwBCNCsAZFKyCwYFBYILBAUVizAiADIBuzAiYDGllCQiMgR7AEQ7CAYmAgsAArIIqKYSCwAkNgZCOwA0NhZFBYsAJDYRuwA0NgWbADJbCAYmGwAiVGYTgjIDwjOBshICBGI0ewACsjYTghWbEiARQrLbBBLLIAADgrLbBCLLIAATgrLbBDLLIBADgrLbBELLIBATgrLbBALLAJI0KwPystsDkssCwrLrEiARQrLbBFLLIAADkrLbBGLLIAATkrLbBHLLIBADkrLbBILLIBATkrLbA6LLAtKyEjICA8sAQjQiM4sSIBFCuwBEMusCIrLbBRLLIAADorLbBSLLIAATorLbBTLLIBADorLbBULLIBATorLbA/LLAAFkUjIC4gRoojYTixIgEUKy2wWSywLisusSIBFCstsFossC4rsDIrLbBbLLAuK7AzKy2wXCywABawLiuwNCstsF0ssC8rLrEiARQrLbBeLLAvK7AyKy2wXyywLyuwMystsGAssC8rsDQrLbBhLLAwKy6xIgEUKy2wYiywMCuwMistsGMssDArsDMrLbBkLLAwK7A0Ky2wZSywMSsusSIBFCstsGYssDErsDIrLbBnLLAxK7AzKy2waCywMSuwNCstsGksK7AIZbADJFB4sAEVMC0AAEuwyFJYsQEBjlm5CAAIAGMgsAEjRCCwAyNwsBRFICBLsA5RS7AGU1pYsDQbsChZYGYgilVYsAIlYbABRWMjYrACI0SzCgoFBCuzCxAFBCuzERYFBCtZsgQoCEVSRLMLEAYEK7EGAUSx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AAAAAAAHACkAqgABAAAAAAAIAA8A0wABAAAAAAAJAA0A4gABAAAAAAAKAVUA7wABAAAAAAALABICRAABAAAAAAAMABICRAABAAAAAAANAJACVgABAAAAAAAOABoC5gABAAAAAAASAAsAWQADAAEECQAAALIDAAADAAEECQABABYDsgADAAEECQACAA4DyAADAAEECQADAEAD1gADAAEECQAEABYDsgADAAEECQAFABoEFgADAAEECQAGACQEMAADAAEECQAHAFIEVAADAAEECQAIAB4EpgADAAEECQAJABoExAADAAEECQAKAqoE3gADAAEECQALACQHiAADAAEECQAMACQHiAADAAEECQANASAHrAADAAEECQAOADQIzENvcHlyaWdodCAoYykgMjAxMiwgU29ya2luIFR5cGUgQ28gKHd3dy5zb3JraW50eXBlLmNvbSkgd2l0aCBSZXNlcnZlZCBGb250IE5hbWUgJ0RvbmVnYWwnRG9uZWdhbCBPbmVSZWd1bGFyU29ya2luVHlwZUNvLjogRG9uZWdhbCBPbmU6IDIwMTJWZXJzaW9uIDEuMDA0RG9uZWdhbE9uZS1SZWd1bGFyRG9uZWdhbCBpcyBhIHRyYWRlbWFyayBvZiBTb3JraW4gVHlwZSBDby5Tb3JraW4gVHlwZSBDby5HYXJ5IExvbmVyZ2FuRG9uZWdhbCBpcyBhIHRleHQgdHlwZWZhY2UgZGVzaWduZWQgdG8gYmUgaGlnaGx5IGxlZ2libGUgYW5kIGNvbWZvcnRhYmxlIHdoZW4gcmVhZGluZyBzY3JlZW5zLiBEb25lZ2FsJ3MgdXRpbGl0eSBhbmQgcGVyc29uYWxpdHkgY29uc2lzdGVudGx5IHNob3dzIGZyb20gc21hbGwgdGV4dCBzaXplcyB0byBkaXNwbGF5LiBEb25lZ2FsIHVzZXMgdGhlIGN1dCBpbnRlcmlvciBjdXJ2ZSBhc3NvY2lhdGVkIHdpdGggVy5BLiBEd2lnZ2lucy4gVGhpcyBmZWF0dXJlIGlzIG9uZSBvZiBtYW55IHRoYXQgY29udHJpYnV0ZSB0byBEb25lZ2FsJ3MgZGlzdGluY3RpdmUgYW5kIHBsZWFzaW5nIGNoYXJhY3Rlci53d3cuc29ya2ludHlwZS5jb21UaGlzIEZvbnQgU29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIFNJTCBPcGVuIEZvbnQgTGljZW5zZSwgVmVyc2lvbiAxLjEuIFRoaXMgbGljZW5zZSBpcyBhdmFpbGFibGUgd2l0aCBhIEZBUSBhdDogaHR0cDovL3NjcmlwdHMuc2lsLm9yZy9PRkxodHRwOi8vc2NyaXB0cy5zaWwub3JnL09GTABDAG8AcAB5AHIAaQBnAGgAdAAgACgAYwApACAAMgAwADEAMgAsACAAUwBvAHIAawBpAG4AIABUAHkAcABlACAAQwBvACAAKAB3AHcAdwAuAHMAbwByAGsAaQBuAHQAeQBwAGUALgBjAG8AbQApACAAdwBpAHQAaAAgAFIAZQBzAGUAcgB2AGUAZAAgAEYAbwBuAHQAIABOAGEAbQBlACAAJwBEAG8AbgBlAGcAYQBsACcARABvAG4AZQBnAGEAbAAgAE8AbgBlAFIAZQBnAHUAbABhAHIAUwBvAHIAawBpAG4AVAB5AHAAZQBDAG8ALgA6ACAARABvAG4AZQBnAGEAbAAgAE8AbgBlADoAIAAyADAAMQAyAFYAZQByAHMAaQBvAG4AIAAxAC4AMAAwADQARABvAG4AZQBnAGEAbABPAG4AZQAtAFIAZQBnAHUAbABhAHIARABvAG4AZQBnAGEAbAAgAGkAcwAgAGEAIAB0AHIAYQBkAGUAbQBhAHIAawAgAG8AZgAgAFMAbwByAGsAaQBuACAAVAB5AHAAZQAgAEMAbwAuAFMAbwByAGsAaQBuACAAVAB5AHAAZQAgAEMAbwAuAEcAYQByAHkAIABMAG8AbgBlAHIAZwBhAG4ARABvAG4AZQBnAGEAbAAgAGkAcwAgAGEAIAB0AGUAeAB0ACAAdAB5AHAAZQBmAGEAYwBlACAAZABlAHMAaQBnAG4AZQBkACAAdABvACAAYgBlACAAaABpAGcAaABsAHkAIABsAGUAZwBpAGIAbABlACAAYQBuAGQAIABjAG8AbQBmAG8AcgB0AGEAYgBsAGUAIAB3AGgAZQBuACAAcgBlAGEAZABpAG4AZwAgAHMAYwByAGUAZQBuAHMALgAgAEQAbwBuAGUAZwBhAGwAJwBzACAAdQB0AGkAbABpAHQAeQAgAGEAbgBkACAAcABlAHIAcwBvAG4AYQBsAGkAdAB5ACAAYwBvAG4AcwBpAHMAdABlAG4AdABsAHkAIABzAGgAbwB3AHMAIABmAHIAbwBtACAAcwBtAGEAbABsACAAdABlAHgAdAAgAHMAaQB6AGUAcwAgAHQAbwAgAGQAaQBzAHAAbABhAHkALgAgAEQAbwBuAGUAZwBhAGwAIAB1AHMAZQBzACAAdABoAGUAIABjAHUAdAAgAGkAbgB0AGUAcgBpAG8AcgAgAGMAdQByAHYAZQAgAGEAcwBzAG8AYwBpAGEAdABlAGQAIAB3AGkAdABoACAAVwAuAEEALgAgAEQAdwBpAGcAZwBpAG4AcwAuACAAVABoAGkAcwAgAGYAZQBhAHQAdQByAGUAIABpAHMAIABvAG4AZQAgAG8AZgAgAG0AYQBuAHkAIAB0AGgAYQB0ACAAYwBvAG4AdAByAGkAYgB1AHQAZQAgAHQAbwAgAEQAbwBuAGUAZwBhAGwAJwBzACAAZABpAHMAdABpAG4AYwB0AGkAdgBlACAAYQBuAGQAIABwAGwAZQBhAHMAaQBuAGcAIABjAGgAYQByAGEAYwB0AGUAcgAuAHcAdwB3AC4AcwBvAHIAawBpAG4AdAB5AHAAZQAuAGMAbwBtAFQAaABpAHMAIABGAG8AbgB0ACAAUwBvAGYAdAB3AGEAcgBlACAAaQBzACAAbABpAGMAZQBuAHMAZQBkACAAdQBuAGQAZQByACAAdABoAGUAIABTAEkATAAgAE8AcABlAG4AIABGAG8AbgB0ACAATABpAGMAZQBuAHMAZQAsACAAVgBlAHIAcwBpAG8AbgAgADEALgAxAC4AIABUAGgAaQBzACAAbABpAGMAZQBuAHMAZQAgAGkAcwAgAGEAdgBhAGkAbABhAGIAbABlACAAdwBpAHQAaAAgAGEAIABGAEEAUQAgAGEAdAA6ACAAaAB0AHQAcAA6AC8ALwBzAGMAcgBpAHAAdABzAC4AcwBpAGwALgBvAHIAZwAvAE8ARgBMAGgAdAB0AHAAOgAvAC8AcwBjAHIAaQBwAHQAcwAuAHMAaQBsAC4AbwByAGcALwBPAEYATAAAAAIAAAAAAAD++wApAAAAAAAAAAAAAAAAAAAAAAAAAAABtQAAAQIAAgADAO0A7gDiAPQA9QDxAPYA8wDyAOgA7wDwAOMABAAFAAYABwAIAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAHAAdAB4AHwAgACEAIgAjACQAJQAmACcAKAApACoAKwAsAC0ALgAvADAAMQAyADMANAA1ADYANwA4ADkAOgA7ADwAPQA+AD8AQABBAEIAQwBEAEUARgBHAEgASQBKAEsATABNAE4ATwBQAFEAUgBTAFQAVQBWAFcAWABZAFoAWwBcAF0AXgBfAGAAYQBwAHIAcwB3AIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAKEAowCkAKUApgCnAQMAqQCqAKsArACwALEAsgCzALQAtQC2ALcAuAC5ALwAvgC/AMIBBADEAMYA1wDYANkBBQDbANwA3QDeAN8A4ADhAOkAvQDqAMUAogEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMBFAEVARYBFwEYARkBGgEbARwBHQEeAR8BIAEhASIBIwEkASUBJgEnASgBKQEqASsBLAEtAS4BLwEwATEBMgEzATQBNQE2AGsAbABtAG4AbwBxATcBOAE5AHYBOgE7ATwAeAB6AHkAewB9AHwBPQE+AH8AfgCAAIEA7AC6AK0AyQDHAK4AYgBjAGQAywBlAMgAygDPAMwBPwDNAM4BQAFBAGYA0wDQANEArwBnAJEBQgFDAUQA1gDUANUAaADrAUUBRgFHAUgA/QFJAP8BSgFLAUwBTQFOAU8BUAD4AVEBUgFTAVQBVQFWAVcBWAFZAVoBWwFcAV0BXgDkAPsBXwFgAWEBYgFjAWQBZQFmAWcBaAFpAWoBawFsAW0AuwFuAOYBbwFwAXEA/gFyAQABcwF0AXUBdgF3AXgBeQD5AXoBewF8AX0BfgF/AYABgQGCAYMBhAGFAYYBhwGIAYkA/AGKAYsA5QGMAY0A5wGOAY8BkAGRAZIBkwGUAZUBlgGXAZgBmQGaAZsBnAGdAZ4BnwGgAaEBogGjAaQBpQBqAGkAdQB0AaYBpwGoAakBqgGrAawBrQGuAa8BsAGxAbIBswG0AbUBtgG3AbgBuQG6AbsBvAG9Ab4FLm51bGwFRGVsdGEOcGVyaW9kY2VudGVyZWQGbWFjcm9uCWFjdXRlLmNhcAlncmF2ZS5jYXAJdGlsZGUuY2FwDmNpcmN1bWZsZXguY2FwC2NvbW1hYWNjZW50B2FvZ29uZWsHQW9nb25lawdFb2dvbmVrDWNhcm9udmVydGljYWwGZGNhcm9uBmxjYXJvbgZMY2Fyb24GdGNhcm9uB2lvZ29uZWsHSW9nb25lawd1b2dvbmVrB1VvZ29uZWsGRGNyb2F0BmRjcm9hdAZsYWN1dGUEdGJhcgRUYmFyBEhiYXIKbWFjcm9uLmNhcBBodW5nYXJ1bWxhdXQuY2FwCWJyZXZlLmNhcAtoY2lyY3VtZmxleAd1bmkwMDAyB3VuaTAwMDMHdW5pMDAwNAd1bmkwMDA1B3VuaTAwMDYHdW5pMDAwNwd1bmkwMDA4B3VuaTAwMTUHdW5pMDAxNgd1bmkwMDE3B3VuaTAwMTgHdW5pMDAxOQd1bmkwMEFEBEV1cm8LamNpcmN1bWZsZXgEbGRvdAd1bmkwMDAxCWNhcm9uLmNhcAhyaW5nLmNhcAhkb3RsZXNzag1kb3RhY2NlbnQuY2FwB2VvZ29uZWsEaGJhcgZpdGlsZGUCaWoMa2NvbW1hYWNjZW50DGtncmVlbmxhbmRpYwZuYWN1dGUGcmNhcm9uDHJjb21tYWFjY2VudAZJdGlsZGULSmNpcmN1bWZsZXgGTmFjdXRlBlJhY3V0ZQZSY2Fyb24MUmNvbW1hYWNjZW50A0VuZwNlbmcHQW1hY3JvbgZBYnJldmULQ2NpcmN1bWZsZXgKQ2RvdGFjY2VudAZEY2Fyb24GRWNhcm9uB0VtYWNyb24GRWJyZXZlCkVkb3RhY2NlbnQLR2NpcmN1bWZsZXgMR2NvbW1hYWNjZW50Ckdkb3RhY2NlbnQLSGNpcmN1bWZsZXgHSW1hY3JvbgZJYnJldmUKSWRvdGFjY2VudAxLY29tbWFhY2NlbnQMTGNvbW1hYWNjZW50Bk5jYXJvbgxOY29tbWFhY2NlbnQHT21hY3JvbgZPYnJldmUGU2FjdXRlC1NjaXJjdW1mbGV4DFNjb21tYWFjY2VudAZUY2Fyb24MVGNvbW1hYWNjZW50BlV0aWxkZQdVbWFjcm9uBlVicmV2ZQVVcmluZw1VaHVuZ2FydW1sYXV0DU9odW5nYXJ1bWxhdXQGV2dyYXZlBldhY3V0ZQtXY2lyY3VtZmxleAlXZGllcmVzaXMGWWdyYXZlC1ljaXJjdW1mbGV4BlphY3V0ZQpaZG90YWNjZW50B2FtYWNyb24GYWJyZXZlC2NjaXJjdW1mbGV4CmNkb3RhY2NlbnQHYWVhY3V0ZQZlY2Fyb24HZW1hY3JvbgZlYnJldmUKZWRvdGFjY2VudAtnY2lyY3VtZmxleApnZG90YWNjZW50DGdjb21tYWFjY2VudAdpbWFjcm9uBmlicmV2ZQZ5Z3JhdmULeWNpcmN1bWZsZXgGd2dyYXZlBndhY3V0ZQt3Y2lyY3VtZmxleAl3ZGllcmVzaXMGdXRpbGRlB3VtYWNyb24GdWJyZXZlBXVyaW5nDHRjb21tYWFjY2VudAxzY29tbWFhY2NlbnQGc2FjdXRlC3NjaXJjdW1mbGV4BnJhY3V0ZQZ6YWN1dGUKemRvdGFjY2VudAdvbWFjcm9uBm9icmV2ZQZuY2Fyb24MbmNvbW1hYWNjZW50DGxjb21tYWFjY2VudAd1bmkxRTYxB3VuaTFFNjAHdW5pMUU1Nwd1bmkxRTU2B3VuaTFFNDEHdW5pMUU0MAd1bmkxRTFFB3VuaTFFMEIHdW5pMUUwQQd1bmkxRTAzB3VuaTFFMDIHdW5pMUUxRgd1bmkxRTZBDW9odW5nYXJ1bWxhdXQNdWh1bmdhcnVtbGF1dARMZG90DGRpZXJlc2lzLmNhcAJJSgZMYWN1dGUHQUVhY3V0ZQd1bmkwMzk0B3VuaTAzQkMHdW5pMDNBOQJMRgJIVANETEUDREMxA0RDMgNEQzMDREM0AlJTAlVTA0RFTAd1bmkxRTZCCHRjZWRpbGxhCFRjZWRpbGxhCWV4Y2xhbWRibANmX2YDZl9pA2ZfbA1xdW90ZXJldmVyc2VkBm1pbnV0ZQZzZWNvbmQAAAAAAQAB//8ADwABAAAACgByAPIAAkRGTFQADmxhdG4AGgAEAAAAAP//AAEAAAAWAANNT0wgACRST00gADJUUksgAEAAAP//AAQAAQAFAAkADQAA//8ABAACAAYACgAOAAD//wAEAAMABwALAA8AAP//AAQABAAIAAwAEAARYWFsdABoYWFsdABoYWFsdABoYWFsdABoYWFsdABoZnJhYwBuZnJhYwBuZnJhYwBuZnJhYwBub3JkbgB0b3JkbgB0b3JkbgB0b3JkbgB0c3VwcwB6c3VwcwB6c3VwcwB6c3VwcwB6AAAAAQAAAAAAAQADAAAAAQABAAAAAQACAAUA+AAMAIIAoAD4AAYAAAAEAA4AIAAyAEwAAwABAFgAAQA4AAAAAQAAAAQAAwABAEYAAQBQAAAAAQAAAAQAAwACAC4ANAABABQAAAABAAAABAABAAEAUQADAAIAFAAaAAEAJAAAAAEAAAAEAAEAAQAeAAIAAQAgACkAAAABAAEAXwABAAAAAQAIAAIADAADAAkADAALAAEAAwAhACIAIwAEAAAAAQAIAAEARgADAAwAJAA6AAIABgAQAKwABAAfACAAIAAVAAMAHwAgAAIABgAOAAcAAwAfACIACAADAB8AJAABAAQACgADAB8AJAABAAMAIAAhACMAAQAAAAEACAACAAoAAgCNAI4AAQACAFEAXw==\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-loader!./~/scratch-render-fonts/DonegalOne-Regular.ttf\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-loader!./~/scratch-render-fonts/GloriaHallelujah.ttf\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-loader!./~/scratch-render-fonts/MysteryQuest-Regular.ttf\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-loader!./~/scratch-render-fonts/PermanentMarker.ttf\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-loader!./~/scratch-render-fonts/Scratch.ttf\n ** module id = 32\n ** module chunks = 0\n **/"],"sourceRoot":""}